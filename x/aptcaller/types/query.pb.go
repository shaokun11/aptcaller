// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: aptcaller/aptcaller/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type QueryGetAccountRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QueryGetAccountRequest) Reset()         { *m = QueryGetAccountRequest{} }
func (m *QueryGetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountRequest) ProtoMessage()    {}
func (*QueryGetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{2}
}
func (m *QueryGetAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountRequest.Merge(m, src)
}
func (m *QueryGetAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountRequest proto.InternalMessageInfo

func (m *QueryGetAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryGetAccountResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountResponse) Reset()         { *m = QueryGetAccountResponse{} }
func (m *QueryGetAccountResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountResponse) ProtoMessage()    {}
func (*QueryGetAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{3}
}
func (m *QueryGetAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountResponse.Merge(m, src)
}
func (m *QueryGetAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountResponse proto.InternalMessageInfo

func (m *QueryGetAccountResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetAccountResourcesRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LedgerVersion string `protobuf:"bytes,2,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
	Limit         string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Start         string `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetAccountResourcesRequest) Reset()         { *m = QueryGetAccountResourcesRequest{} }
func (m *QueryGetAccountResourcesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountResourcesRequest) ProtoMessage()    {}
func (*QueryGetAccountResourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{4}
}
func (m *QueryGetAccountResourcesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountResourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountResourcesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountResourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountResourcesRequest.Merge(m, src)
}
func (m *QueryGetAccountResourcesRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountResourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountResourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountResourcesRequest proto.InternalMessageInfo

func (m *QueryGetAccountResourcesRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetAccountResourcesRequest) GetLedgerVersion() string {
	if m != nil {
		return m.LedgerVersion
	}
	return ""
}

func (m *QueryGetAccountResourcesRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetAccountResourcesRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetAccountResourcesResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountResourcesResponse) Reset()         { *m = QueryGetAccountResourcesResponse{} }
func (m *QueryGetAccountResourcesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountResourcesResponse) ProtoMessage()    {}
func (*QueryGetAccountResourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{5}
}
func (m *QueryGetAccountResourcesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountResourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountResourcesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountResourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountResourcesResponse.Merge(m, src)
}
func (m *QueryGetAccountResourcesResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountResourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountResourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountResourcesResponse proto.InternalMessageInfo

func (m *QueryGetAccountResourcesResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetAccountModulesRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LedgerVersion string `protobuf:"bytes,2,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
	Limit         string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Start         string `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetAccountModulesRequest) Reset()         { *m = QueryGetAccountModulesRequest{} }
func (m *QueryGetAccountModulesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountModulesRequest) ProtoMessage()    {}
func (*QueryGetAccountModulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{6}
}
func (m *QueryGetAccountModulesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountModulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountModulesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountModulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountModulesRequest.Merge(m, src)
}
func (m *QueryGetAccountModulesRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountModulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountModulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountModulesRequest proto.InternalMessageInfo

func (m *QueryGetAccountModulesRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetAccountModulesRequest) GetLedgerVersion() string {
	if m != nil {
		return m.LedgerVersion
	}
	return ""
}

func (m *QueryGetAccountModulesRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetAccountModulesRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetAccountModulesResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountModulesResponse) Reset()         { *m = QueryGetAccountModulesResponse{} }
func (m *QueryGetAccountModulesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountModulesResponse) ProtoMessage()    {}
func (*QueryGetAccountModulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{7}
}
func (m *QueryGetAccountModulesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountModulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountModulesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountModulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountModulesResponse.Merge(m, src)
}
func (m *QueryGetAccountModulesResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountModulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountModulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountModulesResponse proto.InternalMessageInfo

func (m *QueryGetAccountModulesResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetAccountResourceRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ResourceType  string `protobuf:"bytes,2,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (m *QueryGetAccountResourceRequest) Reset()         { *m = QueryGetAccountResourceRequest{} }
func (m *QueryGetAccountResourceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountResourceRequest) ProtoMessage()    {}
func (*QueryGetAccountResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{8}
}
func (m *QueryGetAccountResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountResourceRequest.Merge(m, src)
}
func (m *QueryGetAccountResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountResourceRequest proto.InternalMessageInfo

func (m *QueryGetAccountResourceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetAccountResourceRequest) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *QueryGetAccountResourceRequest) GetLedgerVersion() string {
	if m != nil {
		return m.LedgerVersion
	}
	return ""
}

type QueryGetAccountResourceResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountResourceResponse) Reset()         { *m = QueryGetAccountResourceResponse{} }
func (m *QueryGetAccountResourceResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountResourceResponse) ProtoMessage()    {}
func (*QueryGetAccountResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{9}
}
func (m *QueryGetAccountResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountResourceResponse.Merge(m, src)
}
func (m *QueryGetAccountResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountResourceResponse proto.InternalMessageInfo

func (m *QueryGetAccountResourceResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetAccountModuleRequest struct {
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ModuleName    string `protobuf:"bytes,2,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (m *QueryGetAccountModuleRequest) Reset()         { *m = QueryGetAccountModuleRequest{} }
func (m *QueryGetAccountModuleRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountModuleRequest) ProtoMessage()    {}
func (*QueryGetAccountModuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{10}
}
func (m *QueryGetAccountModuleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountModuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountModuleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountModuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountModuleRequest.Merge(m, src)
}
func (m *QueryGetAccountModuleRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountModuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountModuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountModuleRequest proto.InternalMessageInfo

func (m *QueryGetAccountModuleRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetAccountModuleRequest) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *QueryGetAccountModuleRequest) GetLedgerVersion() string {
	if m != nil {
		return m.LedgerVersion
	}
	return ""
}

type QueryGetAccountModuleResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountModuleResponse) Reset()         { *m = QueryGetAccountModuleResponse{} }
func (m *QueryGetAccountModuleResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountModuleResponse) ProtoMessage()    {}
func (*QueryGetAccountModuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{11}
}
func (m *QueryGetAccountModuleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountModuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountModuleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountModuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountModuleResponse.Merge(m, src)
}
func (m *QueryGetAccountModuleResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountModuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountModuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountModuleResponse proto.InternalMessageInfo

func (m *QueryGetAccountModuleResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetBlockByHeightRequest struct {
	BlockHeight      string `protobuf:"bytes,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	WithTransactions uint64 `protobuf:"varint,2,opt,name=withTransactions,proto3" json:"withTransactions,omitempty"`
}

func (m *QueryGetBlockByHeightRequest) Reset()         { *m = QueryGetBlockByHeightRequest{} }
func (m *QueryGetBlockByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetBlockByHeightRequest) ProtoMessage()    {}
func (*QueryGetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{12}
}
func (m *QueryGetBlockByHeightRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetBlockByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetBlockByHeightRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetBlockByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetBlockByHeightRequest.Merge(m, src)
}
func (m *QueryGetBlockByHeightRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetBlockByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetBlockByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetBlockByHeightRequest proto.InternalMessageInfo

func (m *QueryGetBlockByHeightRequest) GetBlockHeight() string {
	if m != nil {
		return m.BlockHeight
	}
	return ""
}

func (m *QueryGetBlockByHeightRequest) GetWithTransactions() uint64 {
	if m != nil {
		return m.WithTransactions
	}
	return 0
}

type QueryGetBlockByHeightResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetBlockByHeightResponse) Reset()         { *m = QueryGetBlockByHeightResponse{} }
func (m *QueryGetBlockByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetBlockByHeightResponse) ProtoMessage()    {}
func (*QueryGetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{13}
}
func (m *QueryGetBlockByHeightResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetBlockByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetBlockByHeightResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetBlockByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetBlockByHeightResponse.Merge(m, src)
}
func (m *QueryGetBlockByHeightResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetBlockByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetBlockByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetBlockByHeightResponse proto.InternalMessageInfo

func (m *QueryGetBlockByHeightResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetBlockByVersionRequest struct {
	Version          string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	WithTransactions uint64 `protobuf:"varint,2,opt,name=withTransactions,proto3" json:"withTransactions,omitempty"`
}

func (m *QueryGetBlockByVersionRequest) Reset()         { *m = QueryGetBlockByVersionRequest{} }
func (m *QueryGetBlockByVersionRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetBlockByVersionRequest) ProtoMessage()    {}
func (*QueryGetBlockByVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{14}
}
func (m *QueryGetBlockByVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetBlockByVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetBlockByVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetBlockByVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetBlockByVersionRequest.Merge(m, src)
}
func (m *QueryGetBlockByVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetBlockByVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetBlockByVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetBlockByVersionRequest proto.InternalMessageInfo

func (m *QueryGetBlockByVersionRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *QueryGetBlockByVersionRequest) GetWithTransactions() uint64 {
	if m != nil {
		return m.WithTransactions
	}
	return 0
}

type QueryGetBlockByVersionResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetBlockByVersionResponse) Reset()         { *m = QueryGetBlockByVersionResponse{} }
func (m *QueryGetBlockByVersionResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetBlockByVersionResponse) ProtoMessage()    {}
func (*QueryGetBlockByVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{15}
}
func (m *QueryGetBlockByVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetBlockByVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetBlockByVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetBlockByVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetBlockByVersionResponse.Merge(m, src)
}
func (m *QueryGetBlockByVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetBlockByVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetBlockByVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetBlockByVersionResponse proto.InternalMessageInfo

func (m *QueryGetBlockByVersionResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetEventsByCreationNumberRequest struct {
	Address        string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CreationNumber string `protobuf:"bytes,2,opt,name=creationNumber,proto3" json:"creationNumber,omitempty"`
	Limit          string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Start          string `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetEventsByCreationNumberRequest) Reset()         { *m = QueryGetEventsByCreationNumberRequest{} }
func (m *QueryGetEventsByCreationNumberRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetEventsByCreationNumberRequest) ProtoMessage()    {}
func (*QueryGetEventsByCreationNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{16}
}
func (m *QueryGetEventsByCreationNumberRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetEventsByCreationNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetEventsByCreationNumberRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetEventsByCreationNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetEventsByCreationNumberRequest.Merge(m, src)
}
func (m *QueryGetEventsByCreationNumberRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetEventsByCreationNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetEventsByCreationNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetEventsByCreationNumberRequest proto.InternalMessageInfo

func (m *QueryGetEventsByCreationNumberRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetEventsByCreationNumberRequest) GetCreationNumber() string {
	if m != nil {
		return m.CreationNumber
	}
	return ""
}

func (m *QueryGetEventsByCreationNumberRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetEventsByCreationNumberRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetEventsByCreationNumberResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetEventsByCreationNumberResponse) Reset() {
	*m = QueryGetEventsByCreationNumberResponse{}
}
func (m *QueryGetEventsByCreationNumberResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetEventsByCreationNumberResponse) ProtoMessage()    {}
func (*QueryGetEventsByCreationNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{17}
}
func (m *QueryGetEventsByCreationNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetEventsByCreationNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetEventsByCreationNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetEventsByCreationNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetEventsByCreationNumberResponse.Merge(m, src)
}
func (m *QueryGetEventsByCreationNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetEventsByCreationNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetEventsByCreationNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetEventsByCreationNumberResponse proto.InternalMessageInfo

func (m *QueryGetEventsByCreationNumberResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetEventsByEventHandleRequest struct {
	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	EventHandle string `protobuf:"bytes,2,opt,name=eventHandle,proto3" json:"eventHandle,omitempty"`
	FieldName   string `protobuf:"bytes,3,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Limit       string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Start       string `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetEventsByEventHandleRequest) Reset()         { *m = QueryGetEventsByEventHandleRequest{} }
func (m *QueryGetEventsByEventHandleRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetEventsByEventHandleRequest) ProtoMessage()    {}
func (*QueryGetEventsByEventHandleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{18}
}
func (m *QueryGetEventsByEventHandleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetEventsByEventHandleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetEventsByEventHandleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetEventsByEventHandleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetEventsByEventHandleRequest.Merge(m, src)
}
func (m *QueryGetEventsByEventHandleRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetEventsByEventHandleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetEventsByEventHandleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetEventsByEventHandleRequest proto.InternalMessageInfo

func (m *QueryGetEventsByEventHandleRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetEventsByEventHandleRequest) GetEventHandle() string {
	if m != nil {
		return m.EventHandle
	}
	return ""
}

func (m *QueryGetEventsByEventHandleRequest) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *QueryGetEventsByEventHandleRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetEventsByEventHandleRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetEventsByEventHandleResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetEventsByEventHandleResponse) Reset()         { *m = QueryGetEventsByEventHandleResponse{} }
func (m *QueryGetEventsByEventHandleResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetEventsByEventHandleResponse) ProtoMessage()    {}
func (*QueryGetEventsByEventHandleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{19}
}
func (m *QueryGetEventsByEventHandleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetEventsByEventHandleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetEventsByEventHandleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetEventsByEventHandleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetEventsByEventHandleResponse.Merge(m, src)
}
func (m *QueryGetEventsByEventHandleResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetEventsByEventHandleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetEventsByEventHandleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetEventsByEventHandleResponse proto.InternalMessageInfo

func (m *QueryGetEventsByEventHandleResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetLedgerInfoRequest struct {
}

func (m *QueryGetLedgerInfoRequest) Reset()         { *m = QueryGetLedgerInfoRequest{} }
func (m *QueryGetLedgerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetLedgerInfoRequest) ProtoMessage()    {}
func (*QueryGetLedgerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{20}
}
func (m *QueryGetLedgerInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetLedgerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetLedgerInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetLedgerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetLedgerInfoRequest.Merge(m, src)
}
func (m *QueryGetLedgerInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetLedgerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetLedgerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetLedgerInfoRequest proto.InternalMessageInfo

type QueryGetLedgerInfoResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetLedgerInfoResponse) Reset()         { *m = QueryGetLedgerInfoResponse{} }
func (m *QueryGetLedgerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetLedgerInfoResponse) ProtoMessage()    {}
func (*QueryGetLedgerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{21}
}
func (m *QueryGetLedgerInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetLedgerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetLedgerInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetLedgerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetLedgerInfoResponse.Merge(m, src)
}
func (m *QueryGetLedgerInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetLedgerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetLedgerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetLedgerInfoResponse proto.InternalMessageInfo

func (m *QueryGetLedgerInfoResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetTransactionsRequest struct {
	Limit string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetTransactionsRequest) Reset()         { *m = QueryGetTransactionsRequest{} }
func (m *QueryGetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionsRequest) ProtoMessage()    {}
func (*QueryGetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{22}
}
func (m *QueryGetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionsRequest.Merge(m, src)
}
func (m *QueryGetTransactionsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionsRequest proto.InternalMessageInfo

func (m *QueryGetTransactionsRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetTransactionsRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetTransactionsResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetTransactionsResponse) Reset()         { *m = QueryGetTransactionsResponse{} }
func (m *QueryGetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionsResponse) ProtoMessage()    {}
func (*QueryGetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{23}
}
func (m *QueryGetTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionsResponse.Merge(m, src)
}
func (m *QueryGetTransactionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionsResponse proto.InternalMessageInfo

func (m *QueryGetTransactionsResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetTransactionByHashRequest struct {
	TxnHash string `protobuf:"bytes,1,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
}

func (m *QueryGetTransactionByHashRequest) Reset()         { *m = QueryGetTransactionByHashRequest{} }
func (m *QueryGetTransactionByHashRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionByHashRequest) ProtoMessage()    {}
func (*QueryGetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{24}
}
func (m *QueryGetTransactionByHashRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionByHashRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionByHashRequest.Merge(m, src)
}
func (m *QueryGetTransactionByHashRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionByHashRequest proto.InternalMessageInfo

func (m *QueryGetTransactionByHashRequest) GetTxnHash() string {
	if m != nil {
		return m.TxnHash
	}
	return ""
}

type QueryGetTransactionByHashResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetTransactionByHashResponse) Reset()         { *m = QueryGetTransactionByHashResponse{} }
func (m *QueryGetTransactionByHashResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionByHashResponse) ProtoMessage()    {}
func (*QueryGetTransactionByHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{25}
}
func (m *QueryGetTransactionByHashResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionByHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionByHashResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionByHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionByHashResponse.Merge(m, src)
}
func (m *QueryGetTransactionByHashResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionByHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionByHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionByHashResponse proto.InternalMessageInfo

func (m *QueryGetTransactionByHashResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetWaitTransactionByHashRequest struct {
	TxnHash string `protobuf:"bytes,1,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
}

func (m *QueryGetWaitTransactionByHashRequest) Reset()         { *m = QueryGetWaitTransactionByHashRequest{} }
func (m *QueryGetWaitTransactionByHashRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetWaitTransactionByHashRequest) ProtoMessage()    {}
func (*QueryGetWaitTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{26}
}
func (m *QueryGetWaitTransactionByHashRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetWaitTransactionByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetWaitTransactionByHashRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetWaitTransactionByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetWaitTransactionByHashRequest.Merge(m, src)
}
func (m *QueryGetWaitTransactionByHashRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetWaitTransactionByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetWaitTransactionByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetWaitTransactionByHashRequest proto.InternalMessageInfo

func (m *QueryGetWaitTransactionByHashRequest) GetTxnHash() string {
	if m != nil {
		return m.TxnHash
	}
	return ""
}

type QueryGetWaitTransactionByHashResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetWaitTransactionByHashResponse) Reset()         { *m = QueryGetWaitTransactionByHashResponse{} }
func (m *QueryGetWaitTransactionByHashResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetWaitTransactionByHashResponse) ProtoMessage()    {}
func (*QueryGetWaitTransactionByHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{27}
}
func (m *QueryGetWaitTransactionByHashResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetWaitTransactionByHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetWaitTransactionByHashResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetWaitTransactionByHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetWaitTransactionByHashResponse.Merge(m, src)
}
func (m *QueryGetWaitTransactionByHashResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetWaitTransactionByHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetWaitTransactionByHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetWaitTransactionByHashResponse proto.InternalMessageInfo

func (m *QueryGetWaitTransactionByHashResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetTransactionByVersionRequest struct {
	TxnVersion string `protobuf:"bytes,1,opt,name=txnVersion,proto3" json:"txnVersion,omitempty"`
}

func (m *QueryGetTransactionByVersionRequest) Reset()         { *m = QueryGetTransactionByVersionRequest{} }
func (m *QueryGetTransactionByVersionRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionByVersionRequest) ProtoMessage()    {}
func (*QueryGetTransactionByVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{28}
}
func (m *QueryGetTransactionByVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionByVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionByVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionByVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionByVersionRequest.Merge(m, src)
}
func (m *QueryGetTransactionByVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionByVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionByVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionByVersionRequest proto.InternalMessageInfo

func (m *QueryGetTransactionByVersionRequest) GetTxnVersion() string {
	if m != nil {
		return m.TxnVersion
	}
	return ""
}

type QueryGetTransactionByVersionResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetTransactionByVersionResponse) Reset()         { *m = QueryGetTransactionByVersionResponse{} }
func (m *QueryGetTransactionByVersionResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetTransactionByVersionResponse) ProtoMessage()    {}
func (*QueryGetTransactionByVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{29}
}
func (m *QueryGetTransactionByVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetTransactionByVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetTransactionByVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetTransactionByVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetTransactionByVersionResponse.Merge(m, src)
}
func (m *QueryGetTransactionByVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetTransactionByVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetTransactionByVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetTransactionByVersionResponse proto.InternalMessageInfo

func (m *QueryGetTransactionByVersionResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryGetAccountTransactionRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Limit   string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Start   string `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
}

func (m *QueryGetAccountTransactionRequest) Reset()         { *m = QueryGetAccountTransactionRequest{} }
func (m *QueryGetAccountTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountTransactionRequest) ProtoMessage()    {}
func (*QueryGetAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{30}
}
func (m *QueryGetAccountTransactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountTransactionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountTransactionRequest.Merge(m, src)
}
func (m *QueryGetAccountTransactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountTransactionRequest proto.InternalMessageInfo

func (m *QueryGetAccountTransactionRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *QueryGetAccountTransactionRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *QueryGetAccountTransactionRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type QueryGetAccountTransactionResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryGetAccountTransactionResponse) Reset()         { *m = QueryGetAccountTransactionResponse{} }
func (m *QueryGetAccountTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetAccountTransactionResponse) ProtoMessage()    {}
func (*QueryGetAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{31}
}
func (m *QueryGetAccountTransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetAccountTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAccountTransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetAccountTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAccountTransactionResponse.Merge(m, src)
}
func (m *QueryGetAccountTransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetAccountTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAccountTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetAccountTransactionResponse proto.InternalMessageInfo

func (m *QueryGetAccountTransactionResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

type QueryEstimateGasPriceRequest struct {
}

func (m *QueryEstimateGasPriceRequest) Reset()         { *m = QueryEstimateGasPriceRequest{} }
func (m *QueryEstimateGasPriceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryEstimateGasPriceRequest) ProtoMessage()    {}
func (*QueryEstimateGasPriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{32}
}
func (m *QueryEstimateGasPriceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryEstimateGasPriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryEstimateGasPriceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryEstimateGasPriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryEstimateGasPriceRequest.Merge(m, src)
}
func (m *QueryEstimateGasPriceRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryEstimateGasPriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryEstimateGasPriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryEstimateGasPriceRequest proto.InternalMessageInfo

type QueryEstimateGasPriceResponse struct {
	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (m *QueryEstimateGasPriceResponse) Reset()         { *m = QueryEstimateGasPriceResponse{} }
func (m *QueryEstimateGasPriceResponse) String() string { return proto.CompactTextString(m) }
func (*QueryEstimateGasPriceResponse) ProtoMessage()    {}
func (*QueryEstimateGasPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3310f1f54e05b78, []int{33}
}
func (m *QueryEstimateGasPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryEstimateGasPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryEstimateGasPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryEstimateGasPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryEstimateGasPriceResponse.Merge(m, src)
}
func (m *QueryEstimateGasPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryEstimateGasPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryEstimateGasPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryEstimateGasPriceResponse proto.InternalMessageInfo

func (m *QueryEstimateGasPriceResponse) GetAptRes() *AptRes {
	if m != nil {
		return m.AptRes
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "aptcaller.aptcaller.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "aptcaller.aptcaller.QueryParamsResponse")
	proto.RegisterType((*QueryGetAccountRequest)(nil), "aptcaller.aptcaller.QueryGetAccountRequest")
	proto.RegisterType((*QueryGetAccountResponse)(nil), "aptcaller.aptcaller.QueryGetAccountResponse")
	proto.RegisterType((*QueryGetAccountResourcesRequest)(nil), "aptcaller.aptcaller.QueryGetAccountResourcesRequest")
	proto.RegisterType((*QueryGetAccountResourcesResponse)(nil), "aptcaller.aptcaller.QueryGetAccountResourcesResponse")
	proto.RegisterType((*QueryGetAccountModulesRequest)(nil), "aptcaller.aptcaller.QueryGetAccountModulesRequest")
	proto.RegisterType((*QueryGetAccountModulesResponse)(nil), "aptcaller.aptcaller.QueryGetAccountModulesResponse")
	proto.RegisterType((*QueryGetAccountResourceRequest)(nil), "aptcaller.aptcaller.QueryGetAccountResourceRequest")
	proto.RegisterType((*QueryGetAccountResourceResponse)(nil), "aptcaller.aptcaller.QueryGetAccountResourceResponse")
	proto.RegisterType((*QueryGetAccountModuleRequest)(nil), "aptcaller.aptcaller.QueryGetAccountModuleRequest")
	proto.RegisterType((*QueryGetAccountModuleResponse)(nil), "aptcaller.aptcaller.QueryGetAccountModuleResponse")
	proto.RegisterType((*QueryGetBlockByHeightRequest)(nil), "aptcaller.aptcaller.QueryGetBlockByHeightRequest")
	proto.RegisterType((*QueryGetBlockByHeightResponse)(nil), "aptcaller.aptcaller.QueryGetBlockByHeightResponse")
	proto.RegisterType((*QueryGetBlockByVersionRequest)(nil), "aptcaller.aptcaller.QueryGetBlockByVersionRequest")
	proto.RegisterType((*QueryGetBlockByVersionResponse)(nil), "aptcaller.aptcaller.QueryGetBlockByVersionResponse")
	proto.RegisterType((*QueryGetEventsByCreationNumberRequest)(nil), "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest")
	proto.RegisterType((*QueryGetEventsByCreationNumberResponse)(nil), "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse")
	proto.RegisterType((*QueryGetEventsByEventHandleRequest)(nil), "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest")
	proto.RegisterType((*QueryGetEventsByEventHandleResponse)(nil), "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse")
	proto.RegisterType((*QueryGetLedgerInfoRequest)(nil), "aptcaller.aptcaller.QueryGetLedgerInfoRequest")
	proto.RegisterType((*QueryGetLedgerInfoResponse)(nil), "aptcaller.aptcaller.QueryGetLedgerInfoResponse")
	proto.RegisterType((*QueryGetTransactionsRequest)(nil), "aptcaller.aptcaller.QueryGetTransactionsRequest")
	proto.RegisterType((*QueryGetTransactionsResponse)(nil), "aptcaller.aptcaller.QueryGetTransactionsResponse")
	proto.RegisterType((*QueryGetTransactionByHashRequest)(nil), "aptcaller.aptcaller.QueryGetTransactionByHashRequest")
	proto.RegisterType((*QueryGetTransactionByHashResponse)(nil), "aptcaller.aptcaller.QueryGetTransactionByHashResponse")
	proto.RegisterType((*QueryGetWaitTransactionByHashRequest)(nil), "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest")
	proto.RegisterType((*QueryGetWaitTransactionByHashResponse)(nil), "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse")
	proto.RegisterType((*QueryGetTransactionByVersionRequest)(nil), "aptcaller.aptcaller.QueryGetTransactionByVersionRequest")
	proto.RegisterType((*QueryGetTransactionByVersionResponse)(nil), "aptcaller.aptcaller.QueryGetTransactionByVersionResponse")
	proto.RegisterType((*QueryGetAccountTransactionRequest)(nil), "aptcaller.aptcaller.QueryGetAccountTransactionRequest")
	proto.RegisterType((*QueryGetAccountTransactionResponse)(nil), "aptcaller.aptcaller.QueryGetAccountTransactionResponse")
	proto.RegisterType((*QueryEstimateGasPriceRequest)(nil), "aptcaller.aptcaller.QueryEstimateGasPriceRequest")
	proto.RegisterType((*QueryEstimateGasPriceResponse)(nil), "aptcaller.aptcaller.QueryEstimateGasPriceResponse")
}

func init() { proto.RegisterFile("aptcaller/aptcaller/query.proto", fileDescriptor_e3310f1f54e05b78) }

var fileDescriptor_e3310f1f54e05b78 = []byte{
	// 1471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x99, 0xdf, 0x6f, 0xd3, 0x56,
	0x14, 0xc7, 0x7b, 0x0b, 0x74, 0xe2, 0x30, 0x36, 0xb8, 0x74, 0x10, 0x5c, 0x08, 0xc5, 0x30, 0x60,
	0x1d, 0xaa, 0xd7, 0x94, 0xf2, 0x1b, 0x34, 0x02, 0x8c, 0xb2, 0x1f, 0x15, 0xcd, 0x4a, 0xd9, 0x3a,
	0x50, 0x74, 0x93, 0x5c, 0x12, 0x8b, 0xc4, 0x0e, 0xb6, 0x53, 0x1a, 0x45, 0x99, 0xa6, 0x69, 0x6f,
	0xd3, 0xa4, 0x49, 0xd3, 0x9e, 0x26, 0xed, 0x79, 0xe2, 0x69, 0x2f, 0xfb, 0x13, 0x26, 0x21, 0x6d,
	0x0f, 0x4c, 0x9b, 0x26, 0x9e, 0x26, 0xd4, 0x4e, 0xda, 0xbf, 0x80, 0xb4, 0x97, 0x29, 0xd7, 0xd7,
	0xf1, 0x75, 0x6c, 0xc7, 0x76, 0xfd, 0xb0, 0x17, 0x88, 0x8f, 0xef, 0x39, 0xf7, 0x7c, 0xce, 0xfd,
	0xe1, 0xf3, 0x55, 0xe1, 0x10, 0x69, 0x5a, 0x65, 0x52, 0xaf, 0x53, 0x43, 0x71, 0x7f, 0x3d, 0x6c,
	0x51, 0xa3, 0x3d, 0xdd, 0x34, 0x74, 0x4b, 0xc7, 0x7b, 0xfa, 0xe6, 0xe9, 0xfe, 0x2f, 0x69, 0x37,
	0x69, 0xa8, 0x9a, 0xae, 0xb0, 0x7f, 0xed, 0x71, 0xd2, 0x78, 0x55, 0xaf, 0xea, 0xec, 0xa7, 0xd2,
	0xfb, 0xc5, 0xad, 0x07, 0xaa, 0xba, 0x5e, 0xad, 0x53, 0x85, 0x34, 0x55, 0x85, 0x68, 0x9a, 0x6e,
	0x11, 0x4b, 0xd5, 0x35, 0x93, 0xbf, 0x9d, 0x2a, 0xeb, 0x66, 0x43, 0x37, 0x95, 0x12, 0x31, 0xa9,
	0x3d, 0xa9, 0xb2, 0x3a, 0x53, 0xa2, 0x16, 0x99, 0x51, 0x9a, 0xa4, 0xaa, 0x6a, 0x6c, 0x30, 0x1f,
	0x3b, 0x19, 0x94, 0x68, 0x93, 0x18, 0xa4, 0xe1, 0x44, 0x3b, 0x1c, 0x34, 0x82, 0x34, 0xad, 0xa2,
	0x41, 0xf9, 0x10, 0x79, 0x1c, 0xf0, 0x62, 0x6f, 0x9a, 0x5b, 0xcc, 0xaf, 0x40, 0x1f, 0xb6, 0xa8,
	0x69, 0xc9, 0xb7, 0x61, 0x8f, 0xc7, 0x6a, 0x36, 0x75, 0xcd, 0xa4, 0xf8, 0x32, 0x8c, 0xd9, 0xf1,
	0x33, 0x68, 0x12, 0x9d, 0xd8, 0x91, 0x9b, 0x98, 0x0e, 0x28, 0xc5, 0xb4, 0xed, 0x94, 0xdf, 0xfe,
	0xe4, 0xaf, 0x43, 0x23, 0x3f, 0xfc, 0xf3, 0xe3, 0x14, 0x2a, 0x70, 0x2f, 0x39, 0x07, 0x7b, 0x59,
	0xd8, 0x1b, 0xd4, 0xba, 0x52, 0x2e, 0xeb, 0x2d, 0xcd, 0xe2, 0x13, 0xe2, 0x0c, 0xbc, 0x44, 0x2a,
	0x15, 0x83, 0x9a, 0x76, 0xe8, 0xed, 0x05, 0xe7, 0x51, 0x5e, 0x80, 0x7d, 0x3e, 0x1f, 0x9e, 0xce,
	0x2c, 0x8c, 0x91, 0x66, 0xef, 0x71, 0x68, 0x3a, 0x57, 0xd8, 0x90, 0x02, 0x1f, 0x2a, 0x7f, 0x85,
	0xe0, 0x90, 0x3f, 0xa0, 0xde, 0x32, 0xca, 0xd4, 0x8c, 0xcc, 0x06, 0x1f, 0x85, 0x9d, 0x75, 0x5a,
	0xa9, 0x52, 0x63, 0x99, 0x1a, 0xa6, 0xaa, 0x6b, 0x99, 0x51, 0xf6, 0xde, 0x6b, 0xc4, 0xe3, 0xb0,
	0xad, 0xae, 0x36, 0x54, 0x2b, 0xb3, 0x85, 0xbd, 0xb5, 0x1f, 0x7a, 0x56, 0xd3, 0x22, 0x86, 0x95,
	0xd9, 0x6a, 0x5b, 0xd9, 0x83, 0x7c, 0x07, 0x26, 0xc3, 0xd3, 0x49, 0x03, 0xfa, 0x25, 0x82, 0x83,
	0x03, 0x91, 0x3f, 0xd0, 0x2b, 0xad, 0xfa, 0xff, 0x83, 0x79, 0x1b, 0xb2, 0x61, 0xc9, 0xa4, 0x81,
	0xfc, 0x02, 0xf9, 0xe2, 0x3a, 0xe5, 0x8b, 0xa6, 0x94, 0xe1, 0x65, 0x83, 0x0f, 0x5e, 0x6a, 0x37,
	0x29, 0x87, 0xf4, 0xd8, 0xfc, 0x95, 0xd8, 0x12, 0x50, 0x09, 0x79, 0x39, 0x74, 0x4f, 0xa5, 0xc3,
	0xfb, 0x14, 0x0e, 0x04, 0x56, 0x2d, 0x9a, 0x2d, 0x0b, 0xd0, 0x60, 0x43, 0x17, 0x48, 0xc3, 0x21,
	0x13, 0x2c, 0x31, 0xb9, 0x96, 0x42, 0xb6, 0x50, 0x3a, 0xaa, 0xba, 0x4b, 0x95, 0xaf, 0xeb, 0xe5,
	0x07, 0xf9, 0xf6, 0x3c, 0x55, 0xab, 0xb5, 0xfe, 0x65, 0x30, 0x09, 0x3b, 0x4a, 0x3d, 0xbb, 0x6d,
	0xe5, 0x64, 0xa2, 0x09, 0x4f, 0xc1, 0xae, 0x47, 0xaa, 0x55, 0x5b, 0x32, 0x88, 0x66, 0x92, 0x32,
	0xbb, 0x40, 0x19, 0xe3, 0xd6, 0x82, 0xcf, 0x2e, 0x32, 0x0c, 0xcc, 0x96, 0x86, 0x81, 0xfa, 0xa2,
	0xf2, 0x9a, 0x09, 0x4b, 0xb3, 0xca, 0x4b, 0xcb, 0x97, 0x86, 0x3f, 0x26, 0x4a, 0x5e, 0x38, 0x36,
	0x83, 0xd3, 0xa4, 0xc9, 0xfe, 0x5b, 0x04, 0xaf, 0x3b, 0x71, 0xaf, 0xaf, 0x52, 0xcd, 0x32, 0xf3,
	0xed, 0xab, 0x06, 0x65, 0x5f, 0x97, 0x85, 0x56, 0xa3, 0x44, 0x8d, 0xe8, 0x1d, 0x76, 0x0c, 0x5e,
	0x29, 0x7b, 0x5c, 0xf8, 0x2e, 0x1b, 0xb0, 0x26, 0xba, 0x25, 0xee, 0xc1, 0xb1, 0xa8, 0xb4, 0xd2,
	0x60, 0x3f, 0x46, 0x20, 0x0f, 0xc6, 0x67, 0xff, 0xcf, 0x13, 0xad, 0x12, 0xe7, 0x54, 0x4d, 0xc2,
	0x0e, 0xea, 0x8e, 0xe7, 0xc0, 0xa2, 0x09, 0x1f, 0x80, 0xed, 0xf7, 0x55, 0x5a, 0xaf, 0xb0, 0x63,
	0x67, 0x13, 0xbb, 0x06, 0xb7, 0x16, 0x5b, 0x03, 0x6b, 0xb1, 0x4d, 0xac, 0xc5, 0x0a, 0x1c, 0x19,
	0x9a, 0x6b, 0x9a, 0x42, 0x4c, 0xc0, 0x7e, 0x27, 0xf6, 0xfb, 0xec, 0xc0, 0xdf, 0xd4, 0xee, 0xeb,
	0xce, 0xc7, 0x7f, 0x11, 0xa4, 0xa0, 0x97, 0x69, 0xe6, 0xbb, 0x09, 0x13, 0x4e, 0x48, 0x71, 0x7b,
	0x3b, 0x05, 0xef, 0x97, 0x05, 0x05, 0x96, 0x65, 0x54, 0x2c, 0xcb, 0x87, 0xee, 0xe5, 0xe1, 0x0d,
	0x95, 0x26, 0xbf, 0x8b, 0xee, 0x47, 0x58, 0x08, 0x9a, 0x6f, 0xcf, 0x13, 0xb3, 0x26, 0xec, 0x0a,
	0x6b, 0x4d, 0xeb, 0x59, 0x9c, 0x5d, 0xc1, 0x1f, 0xe5, 0x8f, 0xe0, 0xf0, 0x10, 0xef, 0x34, 0x79,
	0xbd, 0x0d, 0x47, 0x9d, 0xc8, 0x77, 0x88, 0xba, 0x99, 0xdc, 0xee, 0xba, 0x07, 0x3d, 0x24, 0x42,
	0x9a, 0xfc, 0xae, 0xbb, 0x7b, 0xd4, 0x13, 0x79, 0xe0, 0x2e, 0xcc, 0x02, 0x58, 0x6b, 0xda, 0xb2,
	0xe7, 0x3a, 0x14, 0x2c, 0xf2, 0x27, 0x2e, 0x66, 0x70, 0x98, 0x34, 0x39, 0xaa, 0xee, 0xea, 0xf0,
	0x6f, 0x98, 0x30, 0x47, 0xf4, 0x91, 0xef, 0xef, 0xcd, 0xd1, 0xc0, 0xbd, 0xb9, 0x45, 0xdc, 0x9b,
	0x1f, 0xbb, 0xd7, 0x4b, 0xd0, 0x54, 0x69, 0x28, 0xb2, 0x7c, 0xdb, 0x5f, 0x37, 0x2d, 0xb5, 0x41,
	0x2c, 0x7a, 0x83, 0x98, 0xb7, 0x0c, 0xb5, 0xdf, 0xe5, 0xf4, 0xbf, 0x72, 0xfe, 0xf7, 0x29, 0x66,
	0xcd, 0xbd, 0x90, 0x60, 0x1b, 0x0b, 0x8b, 0x3f, 0x43, 0x30, 0x66, 0x37, 0xf6, 0xf8, 0x78, 0xa0,
	0xa7, 0x5f, 0x45, 0x48, 0x27, 0xa2, 0x07, 0xda, 0xc9, 0xc9, 0x47, 0x3e, 0xff, 0xfd, 0xef, 0x6f,
	0x46, 0x0f, 0xe2, 0x09, 0x25, 0x5c, 0xd3, 0xe0, 0xef, 0x10, 0x80, 0x5b, 0x59, 0xfc, 0x66, 0x78,
	0x74, 0x9f, 0xbe, 0x90, 0x4e, 0xc6, 0x1b, 0xcc, 0xd3, 0xc9, 0xb1, 0x74, 0x4e, 0xe2, 0xa9, 0xc0,
	0x74, 0xaa, 0xd4, 0x2a, 0x12, 0xdb, 0x43, 0xe9, 0xf0, 0x6d, 0xd2, 0xc5, 0xcf, 0x11, 0xec, 0x09,
	0xe8, 0xe1, 0xf1, 0xa9, 0x98, 0x33, 0x7b, 0x14, 0x88, 0x34, 0x97, 0xd0, 0x8b, 0x27, 0x7e, 0x97,
	0x25, 0xbe, 0x8c, 0x97, 0xa2, 0x12, 0x2f, 0x3a, 0x4d, 0xae, 0xe9, 0x22, 0x28, 0x1d, 0x4f, 0xf3,
	0xd7, 0x7b, 0xee, 0xed, 0xf5, 0xae, 0xd2, 0x61, 0xbb, 0xbb, 0x8b, 0x9f, 0x21, 0xd8, 0xed, 0xeb,
	0xdf, 0x71, 0x2e, 0x4e, 0xaa, 0x5e, 0xe5, 0x21, 0xcd, 0x26, 0xf2, 0xe1, 0x70, 0x2b, 0x0c, 0x6e,
	0x09, 0x17, 0x22, 0xe1, 0xec, 0x3e, 0x37, 0x09, 0xda, 0x2f, 0x08, 0xb0, 0xbf, 0xb0, 0x78, 0x36,
	0xc9, 0x32, 0x38, 0x70, 0xa7, 0x92, 0x39, 0x71, 0xba, 0x77, 0x19, 0xdd, 0x35, 0x9c, 0x8f, 0xbd,
	0x74, 0x22, 0x9e, 0xa8, 0x59, 0xba, 0xf8, 0x37, 0x04, 0xbb, 0x06, 0xeb, 0x88, 0x67, 0xe2, 0xd7,
	0xdc, 0x21, 0xc9, 0x25, 0x71, 0xe1, 0x1c, 0xcb, 0x8c, 0xe3, 0x16, 0x5e, 0x88, 0xb9, 0x4a, 0x22,
	0x85, 0xab, 0x4f, 0x7c, 0x2b, 0x86, 0x7f, 0xb5, 0x99, 0x3c, 0x2d, 0x7c, 0x04, 0x53, 0x90, 0xb8,
	0x88, 0x60, 0x0a, 0x54, 0x08, 0xf2, 0x22, 0x63, 0x7a, 0x0f, 0xdf, 0x0c, 0x65, 0x62, 0xe2, 0xa4,
	0x58, 0x6a, 0x17, 0x6b, 0xcc, 0x53, 0xe9, 0x08, 0x6a, 0xa5, 0xab, 0x74, 0x06, 0xfb, 0x7a, 0x86,
	0xb3, 0xdb, 0xd7, 0xd4, 0xe3, 0x58, 0xc9, 0x79, 0x3f, 0xae, 0x11, 0x67, 0x29, 0x58, 0x35, 0xc8,
	0x0b, 0x8c, 0x68, 0x1e, 0xbf, 0x13, 0x4d, 0xc4, 0x65, 0x8b, 0xd2, 0x59, 0xed, 0x1f, 0x1e, 0x3f,
	0xce, 0xbf, 0x08, 0xf6, 0x87, 0x36, 0xed, 0xf8, 0xfc, 0xd0, 0x14, 0x87, 0x0a, 0x10, 0xe9, 0xc2,
	0xa6, 0x7c, 0x39, 0x26, 0x65, 0x98, 0x45, 0x7c, 0x2f, 0x14, 0x93, 0xf5, 0xee, 0x66, 0x8f, 0xd3,
	0x91, 0x2d, 0x45, 0x8d, 0xc5, 0x10, 0xf7, 0xa5, 0x57, 0xd1, 0xf8, 0x6f, 0x8f, 0x17, 0x08, 0xf6,
	0x06, 0xb7, 0xe9, 0xf8, 0x4c, 0xac, 0xf4, 0xfd, 0x22, 0x44, 0x3a, 0x9b, 0xdc, 0x91, 0x43, 0x3f,
	0x60, 0xd0, 0x14, 0x97, 0x63, 0x40, 0xb3, 0x5f, 0xc5, 0x1a, 0x0b, 0x20, 0x12, 0x0b, 0x92, 0xa6,
	0xab, 0x74, 0xfa, 0x02, 0xc6, 0x8f, 0xfe, 0x3d, 0x82, 0x9d, 0x1e, 0xa1, 0x80, 0xa7, 0x87, 0x26,
	0xee, 0x93, 0x1b, 0x92, 0x12, 0x7b, 0x3c, 0xe7, 0x3b, 0xc9, 0xf8, 0x8e, 0xe1, 0xa3, 0xa1, 0x7c,
	0xf6, 0xd5, 0x51, 0x54, 0x7b, 0xe9, 0xfc, 0x84, 0xe0, 0xd5, 0x01, 0xad, 0x80, 0xdf, 0x1a, 0x3a,
	0x65, 0x80, 0x42, 0x91, 0x66, 0x12, 0x78, 0xf0, 0x34, 0x2f, 0xb1, 0x34, 0xcf, 0xe0, 0xb9, 0xd0,
	0x34, 0x2d, 0xc1, 0xcd, 0x57, 0xd8, 0x9f, 0x11, 0x8c, 0x07, 0x09, 0x0a, 0x3c, 0x17, 0x37, 0x15,
	0x8f, 0x44, 0x90, 0x4e, 0x27, 0x75, 0xe3, 0x18, 0x97, 0x19, 0xc6, 0x59, 0x7c, 0x3a, 0x0e, 0x06,
	0xbb, 0x01, 0x89, 0x59, 0x53, 0x3a, 0x5c, 0x7f, 0x74, 0xf1, 0x9f, 0x08, 0x32, 0x61, 0xe2, 0x03,
	0x9f, 0x1b, 0x9a, 0xd4, 0x30, 0xc9, 0x23, 0x9d, 0xdf, 0x8c, 0x2b, 0x67, 0xba, 0xca, 0x98, 0x2e,
	0xe1, 0x0b, 0xa1, 0x4c, 0x8f, 0x88, 0x1a, 0x05, 0xf6, 0x07, 0x82, 0x7d, 0x21, 0x82, 0x05, 0x9f,
	0x8d, 0x5f, 0xec, 0x81, 0xdb, 0xfc, 0xdc, 0x26, 0x3c, 0x39, 0xd5, 0x35, 0x46, 0x75, 0x19, 0x5f,
	0x8c, 0xbb, 0x52, 0xfd, 0x9b, 0xdd, 0x95, 0x62, 0xac, 0xc9, 0x7b, 0x2d, 0x50, 0xbf, 0xe0, 0xd3,
	0x71, 0xba, 0x01, 0xbf, 0xb6, 0x92, 0xce, 0x24, 0xf6, 0x8b, 0xfd, 0x91, 0x72, 0x5a, 0x09, 0x01,
	0xcc, 0xd3, 0xf4, 0x79, 0x8f, 0xd4, 0x63, 0x04, 0xbb, 0x06, 0xf5, 0xd1, 0xb0, 0x16, 0x22, 0x44,
	0x6b, 0x0d, 0x6b, 0x21, 0xc2, 0xe4, 0x97, 0xac, 0x30, 0x96, 0x37, 0xf0, 0xf1, 0x40, 0x16, 0xca,
	0xdd, 0x8a, 0x55, 0x62, 0x16, 0x9b, 0x3d, 0xc7, 0xfc, 0xdc, 0x93, 0xf5, 0x2c, 0x7a, 0xba, 0x9e,
	0x45, 0xcf, 0xd7, 0xb3, 0xe8, 0xeb, 0x8d, 0xec, 0xc8, 0xd3, 0x8d, 0xec, 0xc8, 0xb3, 0x8d, 0xec,
	0xc8, 0xca, 0x84, 0xeb, 0xb7, 0x26, 0xc4, 0xb0, 0xda, 0x4d, 0x6a, 0x96, 0xc6, 0xd8, 0x9f, 0x75,
	0x66, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x54, 0xff, 0x5e, 0xf1, 0xc6, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// Queries a list of GetAccount items.
	GetAccount(ctx context.Context, in *QueryGetAccountRequest, opts ...grpc.CallOption) (*QueryGetAccountResponse, error)
	// Queries a list of GetAccountResources items.
	GetAccountResources(ctx context.Context, in *QueryGetAccountResourcesRequest, opts ...grpc.CallOption) (*QueryGetAccountResourcesResponse, error)
	// Queries a list of GetAccountModules items.
	GetAccountModules(ctx context.Context, in *QueryGetAccountModulesRequest, opts ...grpc.CallOption) (*QueryGetAccountModulesResponse, error)
	// Queries a list of GetAccountResource items.
	GetAccountResource(ctx context.Context, in *QueryGetAccountResourceRequest, opts ...grpc.CallOption) (*QueryGetAccountResourceResponse, error)
	// Queries a list of GetAccountModule items.
	GetAccountModule(ctx context.Context, in *QueryGetAccountModuleRequest, opts ...grpc.CallOption) (*QueryGetAccountModuleResponse, error)
	// Queries a list of GetBlockByHeight items.
	GetBlockByHeight(ctx context.Context, in *QueryGetBlockByHeightRequest, opts ...grpc.CallOption) (*QueryGetBlockByHeightResponse, error)
	// Queries a list of GetBlockByVersion items.
	GetBlockByVersion(ctx context.Context, in *QueryGetBlockByVersionRequest, opts ...grpc.CallOption) (*QueryGetBlockByVersionResponse, error)
	// Queries a list of GetEventsByCreationNumber items.
	GetEventsByCreationNumber(ctx context.Context, in *QueryGetEventsByCreationNumberRequest, opts ...grpc.CallOption) (*QueryGetEventsByCreationNumberResponse, error)
	// Queries a list of GetEventsByEventHandle items.
	GetEventsByEventHandle(ctx context.Context, in *QueryGetEventsByEventHandleRequest, opts ...grpc.CallOption) (*QueryGetEventsByEventHandleResponse, error)
	// Queries a list of GetLedgerInfo items.
	GetLedgerInfo(ctx context.Context, in *QueryGetLedgerInfoRequest, opts ...grpc.CallOption) (*QueryGetLedgerInfoResponse, error)
	// Queries a list of GetTransactions items.
	GetTransactions(ctx context.Context, in *QueryGetTransactionsRequest, opts ...grpc.CallOption) (*QueryGetTransactionsResponse, error)
	// Queries a list of GetTransactionByHash items.
	GetTransactionByHash(ctx context.Context, in *QueryGetTransactionByHashRequest, opts ...grpc.CallOption) (*QueryGetTransactionByHashResponse, error)
	// Queries a list of GetWaitTransactionByHash items.
	GetWaitTransactionByHash(ctx context.Context, in *QueryGetWaitTransactionByHashRequest, opts ...grpc.CallOption) (*QueryGetWaitTransactionByHashResponse, error)
	// Queries a list of GetTransactionByVersion items.
	GetTransactionByVersion(ctx context.Context, in *QueryGetTransactionByVersionRequest, opts ...grpc.CallOption) (*QueryGetTransactionByVersionResponse, error)
	// Queries a list of GetAccountTransaction items.
	GetAccountTransaction(ctx context.Context, in *QueryGetAccountTransactionRequest, opts ...grpc.CallOption) (*QueryGetAccountTransactionResponse, error)
	// Queries a list of EstimateGasPrice items.
	EstimateGasPrice(ctx context.Context, in *QueryEstimateGasPriceRequest, opts ...grpc.CallOption) (*QueryEstimateGasPriceResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccount(ctx context.Context, in *QueryGetAccountRequest, opts ...grpc.CallOption) (*QueryGetAccountResponse, error) {
	out := new(QueryGetAccountResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccountResources(ctx context.Context, in *QueryGetAccountResourcesRequest, opts ...grpc.CallOption) (*QueryGetAccountResourcesResponse, error) {
	out := new(QueryGetAccountResourcesResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccountResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccountModules(ctx context.Context, in *QueryGetAccountModulesRequest, opts ...grpc.CallOption) (*QueryGetAccountModulesResponse, error) {
	out := new(QueryGetAccountModulesResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccountModules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccountResource(ctx context.Context, in *QueryGetAccountResourceRequest, opts ...grpc.CallOption) (*QueryGetAccountResourceResponse, error) {
	out := new(QueryGetAccountResourceResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccountResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccountModule(ctx context.Context, in *QueryGetAccountModuleRequest, opts ...grpc.CallOption) (*QueryGetAccountModuleResponse, error) {
	out := new(QueryGetAccountModuleResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccountModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetBlockByHeight(ctx context.Context, in *QueryGetBlockByHeightRequest, opts ...grpc.CallOption) (*QueryGetBlockByHeightResponse, error) {
	out := new(QueryGetBlockByHeightResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetBlockByVersion(ctx context.Context, in *QueryGetBlockByVersionRequest, opts ...grpc.CallOption) (*QueryGetBlockByVersionResponse, error) {
	out := new(QueryGetBlockByVersionResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetBlockByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetEventsByCreationNumber(ctx context.Context, in *QueryGetEventsByCreationNumberRequest, opts ...grpc.CallOption) (*QueryGetEventsByCreationNumberResponse, error) {
	out := new(QueryGetEventsByCreationNumberResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetEventsByCreationNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetEventsByEventHandle(ctx context.Context, in *QueryGetEventsByEventHandleRequest, opts ...grpc.CallOption) (*QueryGetEventsByEventHandleResponse, error) {
	out := new(QueryGetEventsByEventHandleResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetEventsByEventHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetLedgerInfo(ctx context.Context, in *QueryGetLedgerInfoRequest, opts ...grpc.CallOption) (*QueryGetLedgerInfoResponse, error) {
	out := new(QueryGetLedgerInfoResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetLedgerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetTransactions(ctx context.Context, in *QueryGetTransactionsRequest, opts ...grpc.CallOption) (*QueryGetTransactionsResponse, error) {
	out := new(QueryGetTransactionsResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetTransactionByHash(ctx context.Context, in *QueryGetTransactionByHashRequest, opts ...grpc.CallOption) (*QueryGetTransactionByHashResponse, error) {
	out := new(QueryGetTransactionByHashResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetTransactionByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetWaitTransactionByHash(ctx context.Context, in *QueryGetWaitTransactionByHashRequest, opts ...grpc.CallOption) (*QueryGetWaitTransactionByHashResponse, error) {
	out := new(QueryGetWaitTransactionByHashResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetWaitTransactionByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetTransactionByVersion(ctx context.Context, in *QueryGetTransactionByVersionRequest, opts ...grpc.CallOption) (*QueryGetTransactionByVersionResponse, error) {
	out := new(QueryGetTransactionByVersionResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetTransactionByVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetAccountTransaction(ctx context.Context, in *QueryGetAccountTransactionRequest, opts ...grpc.CallOption) (*QueryGetAccountTransactionResponse, error) {
	out := new(QueryGetAccountTransactionResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/GetAccountTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) EstimateGasPrice(ctx context.Context, in *QueryEstimateGasPriceRequest, opts ...grpc.CallOption) (*QueryEstimateGasPriceResponse, error) {
	out := new(QueryEstimateGasPriceResponse)
	err := c.cc.Invoke(ctx, "/aptcaller.aptcaller.Query/EstimateGasPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Queries a list of GetAccount items.
	GetAccount(context.Context, *QueryGetAccountRequest) (*QueryGetAccountResponse, error)
	// Queries a list of GetAccountResources items.
	GetAccountResources(context.Context, *QueryGetAccountResourcesRequest) (*QueryGetAccountResourcesResponse, error)
	// Queries a list of GetAccountModules items.
	GetAccountModules(context.Context, *QueryGetAccountModulesRequest) (*QueryGetAccountModulesResponse, error)
	// Queries a list of GetAccountResource items.
	GetAccountResource(context.Context, *QueryGetAccountResourceRequest) (*QueryGetAccountResourceResponse, error)
	// Queries a list of GetAccountModule items.
	GetAccountModule(context.Context, *QueryGetAccountModuleRequest) (*QueryGetAccountModuleResponse, error)
	// Queries a list of GetBlockByHeight items.
	GetBlockByHeight(context.Context, *QueryGetBlockByHeightRequest) (*QueryGetBlockByHeightResponse, error)
	// Queries a list of GetBlockByVersion items.
	GetBlockByVersion(context.Context, *QueryGetBlockByVersionRequest) (*QueryGetBlockByVersionResponse, error)
	// Queries a list of GetEventsByCreationNumber items.
	GetEventsByCreationNumber(context.Context, *QueryGetEventsByCreationNumberRequest) (*QueryGetEventsByCreationNumberResponse, error)
	// Queries a list of GetEventsByEventHandle items.
	GetEventsByEventHandle(context.Context, *QueryGetEventsByEventHandleRequest) (*QueryGetEventsByEventHandleResponse, error)
	// Queries a list of GetLedgerInfo items.
	GetLedgerInfo(context.Context, *QueryGetLedgerInfoRequest) (*QueryGetLedgerInfoResponse, error)
	// Queries a list of GetTransactions items.
	GetTransactions(context.Context, *QueryGetTransactionsRequest) (*QueryGetTransactionsResponse, error)
	// Queries a list of GetTransactionByHash items.
	GetTransactionByHash(context.Context, *QueryGetTransactionByHashRequest) (*QueryGetTransactionByHashResponse, error)
	// Queries a list of GetWaitTransactionByHash items.
	GetWaitTransactionByHash(context.Context, *QueryGetWaitTransactionByHashRequest) (*QueryGetWaitTransactionByHashResponse, error)
	// Queries a list of GetTransactionByVersion items.
	GetTransactionByVersion(context.Context, *QueryGetTransactionByVersionRequest) (*QueryGetTransactionByVersionResponse, error)
	// Queries a list of GetAccountTransaction items.
	GetAccountTransaction(context.Context, *QueryGetAccountTransactionRequest) (*QueryGetAccountTransactionResponse, error)
	// Queries a list of EstimateGasPrice items.
	EstimateGasPrice(context.Context, *QueryEstimateGasPriceRequest) (*QueryEstimateGasPriceResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) GetAccount(ctx context.Context, req *QueryGetAccountRequest) (*QueryGetAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedQueryServer) GetAccountResources(ctx context.Context, req *QueryGetAccountResourcesRequest) (*QueryGetAccountResourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountResources not implemented")
}
func (*UnimplementedQueryServer) GetAccountModules(ctx context.Context, req *QueryGetAccountModulesRequest) (*QueryGetAccountModulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountModules not implemented")
}
func (*UnimplementedQueryServer) GetAccountResource(ctx context.Context, req *QueryGetAccountResourceRequest) (*QueryGetAccountResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountResource not implemented")
}
func (*UnimplementedQueryServer) GetAccountModule(ctx context.Context, req *QueryGetAccountModuleRequest) (*QueryGetAccountModuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountModule not implemented")
}
func (*UnimplementedQueryServer) GetBlockByHeight(ctx context.Context, req *QueryGetBlockByHeightRequest) (*QueryGetBlockByHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHeight not implemented")
}
func (*UnimplementedQueryServer) GetBlockByVersion(ctx context.Context, req *QueryGetBlockByVersionRequest) (*QueryGetBlockByVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByVersion not implemented")
}
func (*UnimplementedQueryServer) GetEventsByCreationNumber(ctx context.Context, req *QueryGetEventsByCreationNumberRequest) (*QueryGetEventsByCreationNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventsByCreationNumber not implemented")
}
func (*UnimplementedQueryServer) GetEventsByEventHandle(ctx context.Context, req *QueryGetEventsByEventHandleRequest) (*QueryGetEventsByEventHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventsByEventHandle not implemented")
}
func (*UnimplementedQueryServer) GetLedgerInfo(ctx context.Context, req *QueryGetLedgerInfoRequest) (*QueryGetLedgerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLedgerInfo not implemented")
}
func (*UnimplementedQueryServer) GetTransactions(ctx context.Context, req *QueryGetTransactionsRequest) (*QueryGetTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedQueryServer) GetTransactionByHash(ctx context.Context, req *QueryGetTransactionByHashRequest) (*QueryGetTransactionByHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByHash not implemented")
}
func (*UnimplementedQueryServer) GetWaitTransactionByHash(ctx context.Context, req *QueryGetWaitTransactionByHashRequest) (*QueryGetWaitTransactionByHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWaitTransactionByHash not implemented")
}
func (*UnimplementedQueryServer) GetTransactionByVersion(ctx context.Context, req *QueryGetTransactionByVersionRequest) (*QueryGetTransactionByVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByVersion not implemented")
}
func (*UnimplementedQueryServer) GetAccountTransaction(ctx context.Context, req *QueryGetAccountTransactionRequest) (*QueryGetAccountTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountTransaction not implemented")
}
func (*UnimplementedQueryServer) EstimateGasPrice(ctx context.Context, req *QueryEstimateGasPriceRequest) (*QueryEstimateGasPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EstimateGasPrice not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccount(ctx, req.(*QueryGetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccountResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccountResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccountResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccountResources(ctx, req.(*QueryGetAccountResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccountModules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountModulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccountModules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccountModules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccountModules(ctx, req.(*QueryGetAccountModulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccountResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccountResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccountResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccountResource(ctx, req.(*QueryGetAccountResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccountModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountModuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccountModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccountModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccountModule(ctx, req.(*QueryGetAccountModuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetBlockByHeight(ctx, req.(*QueryGetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetBlockByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetBlockByVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetBlockByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetBlockByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetBlockByVersion(ctx, req.(*QueryGetBlockByVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetEventsByCreationNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetEventsByCreationNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetEventsByCreationNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetEventsByCreationNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetEventsByCreationNumber(ctx, req.(*QueryGetEventsByCreationNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetEventsByEventHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetEventsByEventHandleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetEventsByEventHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetEventsByEventHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetEventsByEventHandle(ctx, req.(*QueryGetEventsByEventHandleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetLedgerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetLedgerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetLedgerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetLedgerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetLedgerInfo(ctx, req.(*QueryGetLedgerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetTransactions(ctx, req.(*QueryGetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetTransactionByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetTransactionByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetTransactionByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetTransactionByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetTransactionByHash(ctx, req.(*QueryGetTransactionByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetWaitTransactionByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetWaitTransactionByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetWaitTransactionByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetWaitTransactionByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetWaitTransactionByHash(ctx, req.(*QueryGetWaitTransactionByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetTransactionByVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetTransactionByVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetTransactionByVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetTransactionByVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetTransactionByVersion(ctx, req.(*QueryGetTransactionByVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetAccountTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAccountTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAccountTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/GetAccountTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAccountTransaction(ctx, req.(*QueryGetAccountTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_EstimateGasPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEstimateGasPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).EstimateGasPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aptcaller.aptcaller.Query/EstimateGasPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).EstimateGasPrice(ctx, req.(*QueryEstimateGasPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aptcaller.aptcaller.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Query_GetAccount_Handler,
		},
		{
			MethodName: "GetAccountResources",
			Handler:    _Query_GetAccountResources_Handler,
		},
		{
			MethodName: "GetAccountModules",
			Handler:    _Query_GetAccountModules_Handler,
		},
		{
			MethodName: "GetAccountResource",
			Handler:    _Query_GetAccountResource_Handler,
		},
		{
			MethodName: "GetAccountModule",
			Handler:    _Query_GetAccountModule_Handler,
		},
		{
			MethodName: "GetBlockByHeight",
			Handler:    _Query_GetBlockByHeight_Handler,
		},
		{
			MethodName: "GetBlockByVersion",
			Handler:    _Query_GetBlockByVersion_Handler,
		},
		{
			MethodName: "GetEventsByCreationNumber",
			Handler:    _Query_GetEventsByCreationNumber_Handler,
		},
		{
			MethodName: "GetEventsByEventHandle",
			Handler:    _Query_GetEventsByEventHandle_Handler,
		},
		{
			MethodName: "GetLedgerInfo",
			Handler:    _Query_GetLedgerInfo_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _Query_GetTransactions_Handler,
		},
		{
			MethodName: "GetTransactionByHash",
			Handler:    _Query_GetTransactionByHash_Handler,
		},
		{
			MethodName: "GetWaitTransactionByHash",
			Handler:    _Query_GetWaitTransactionByHash_Handler,
		},
		{
			MethodName: "GetTransactionByVersion",
			Handler:    _Query_GetTransactionByVersion_Handler,
		},
		{
			MethodName: "GetAccountTransaction",
			Handler:    _Query_GetAccountTransaction_Handler,
		},
		{
			MethodName: "EstimateGasPrice",
			Handler:    _Query_EstimateGasPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aptcaller/aptcaller/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountResourcesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountResourcesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountResourcesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LedgerVersion) > 0 {
		i -= len(m.LedgerVersion)
		copy(dAtA[i:], m.LedgerVersion)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.LedgerVersion)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountResourcesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountResourcesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountResourcesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountModulesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountModulesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountModulesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LedgerVersion) > 0 {
		i -= len(m.LedgerVersion)
		copy(dAtA[i:], m.LedgerVersion)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.LedgerVersion)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountModulesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountModulesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountModulesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LedgerVersion) > 0 {
		i -= len(m.LedgerVersion)
		copy(dAtA[i:], m.LedgerVersion)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.LedgerVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountModuleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountModuleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountModuleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LedgerVersion) > 0 {
		i -= len(m.LedgerVersion)
		copy(dAtA[i:], m.LedgerVersion)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.LedgerVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ModuleName) > 0 {
		i -= len(m.ModuleName)
		copy(dAtA[i:], m.ModuleName)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ModuleName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountModuleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountModuleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountModuleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetBlockByHeightRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetBlockByHeightRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetBlockByHeightRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WithTransactions != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.WithTransactions))
		i--
		dAtA[i] = 0x10
	}
	if len(m.BlockHeight) > 0 {
		i -= len(m.BlockHeight)
		copy(dAtA[i:], m.BlockHeight)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.BlockHeight)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetBlockByHeightResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetBlockByHeightResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetBlockByHeightResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetBlockByVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetBlockByVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetBlockByVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WithTransactions != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.WithTransactions))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetBlockByVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetBlockByVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetBlockByVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetEventsByCreationNumberRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetEventsByCreationNumberRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetEventsByCreationNumberRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CreationNumber) > 0 {
		i -= len(m.CreationNumber)
		copy(dAtA[i:], m.CreationNumber)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.CreationNumber)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetEventsByCreationNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetEventsByCreationNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetEventsByCreationNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetEventsByEventHandleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetEventsByEventHandleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetEventsByEventHandleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FieldName) > 0 {
		i -= len(m.FieldName)
		copy(dAtA[i:], m.FieldName)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.FieldName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EventHandle) > 0 {
		i -= len(m.EventHandle)
		copy(dAtA[i:], m.EventHandle)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.EventHandle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetEventsByEventHandleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetEventsByEventHandleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetEventsByEventHandleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetLedgerInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetLedgerInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetLedgerInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryGetLedgerInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetLedgerInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetLedgerInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionByHashRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionByHashRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionByHashRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TxnHash) > 0 {
		i -= len(m.TxnHash)
		copy(dAtA[i:], m.TxnHash)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.TxnHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionByHashResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionByHashResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionByHashResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetWaitTransactionByHashRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetWaitTransactionByHashRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetWaitTransactionByHashRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TxnHash) > 0 {
		i -= len(m.TxnHash)
		copy(dAtA[i:], m.TxnHash)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.TxnHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetWaitTransactionByHashResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetWaitTransactionByHashResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetWaitTransactionByHashResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionByVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionByVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionByVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TxnVersion) > 0 {
		i -= len(m.TxnVersion)
		copy(dAtA[i:], m.TxnVersion)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.TxnVersion)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetTransactionByVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetTransactionByVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetTransactionByVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountTransactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountTransactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountTransactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Start) > 0 {
		i -= len(m.Start)
		copy(dAtA[i:], m.Start)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Start)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetAccountTransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetAccountTransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetAccountTransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryEstimateGasPriceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryEstimateGasPriceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryEstimateGasPriceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryEstimateGasPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryEstimateGasPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryEstimateGasPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AptRes != nil {
		{
			size, err := m.AptRes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountResourcesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.LedgerVersion)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountResourcesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountModulesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.LedgerVersion)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountModulesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.LedgerVersion)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountModuleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.ModuleName)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.LedgerVersion)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountModuleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetBlockByHeightRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BlockHeight)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.WithTransactions != 0 {
		n += 1 + sovQuery(uint64(m.WithTransactions))
	}
	return n
}

func (m *QueryGetBlockByHeightResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetBlockByVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	if m.WithTransactions != 0 {
		n += 1 + sovQuery(uint64(m.WithTransactions))
	}
	return n
}

func (m *QueryGetBlockByVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetEventsByCreationNumberRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.CreationNumber)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetEventsByCreationNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetEventsByEventHandleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.EventHandle)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.FieldName)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetEventsByEventHandleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetLedgerInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryGetLedgerInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionByHashRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxnHash)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionByHashResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetWaitTransactionByHashRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxnHash)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetWaitTransactionByHashResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionByVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxnVersion)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetTransactionByVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountTransactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Start)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetAccountTransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryEstimateGasPriceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryEstimateGasPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AptRes != nil {
		l = m.AptRes.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountResourcesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountResourcesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountResourcesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountResourcesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountResourcesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountResourcesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountModulesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountModulesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountModulesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountModulesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountModulesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountModulesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountModuleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountModuleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountModuleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountModuleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountModuleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountModuleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetBlockByHeightRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetBlockByHeightRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetBlockByHeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BlockHeight = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithTransactions", wireType)
			}
			m.WithTransactions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WithTransactions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetBlockByHeightResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetBlockByHeightResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetBlockByHeightResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetBlockByVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetBlockByVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetBlockByVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithTransactions", wireType)
			}
			m.WithTransactions = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WithTransactions |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetBlockByVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetBlockByVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetBlockByVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetEventsByCreationNumberRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetEventsByCreationNumberRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetEventsByCreationNumberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetEventsByCreationNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetEventsByCreationNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetEventsByCreationNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetEventsByEventHandleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetEventsByEventHandleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetEventsByEventHandleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventHandle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EventHandle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FieldName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FieldName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetEventsByEventHandleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetEventsByEventHandleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetEventsByEventHandleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetLedgerInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetLedgerInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetLedgerInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetLedgerInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetLedgerInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetLedgerInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionByHashRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionByHashRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionByHashRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxnHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxnHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionByHashResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionByHashResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionByHashResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetWaitTransactionByHashRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetWaitTransactionByHashRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetWaitTransactionByHashRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxnHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxnHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetWaitTransactionByHashResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetWaitTransactionByHashResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetWaitTransactionByHashResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionByVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionByVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionByVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxnVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxnVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetTransactionByVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetTransactionByVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetTransactionByVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountTransactionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountTransactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Start = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetAccountTransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAccountTransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAccountTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryEstimateGasPriceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryEstimateGasPriceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryEstimateGasPriceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryEstimateGasPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryEstimateGasPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryEstimateGasPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AptRes == nil {
				m.AptRes = &AptRes{}
			}
			if err := m.AptRes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
