// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package aptcaller

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/base/query/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryParamsRequest protoreflect.MessageDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryParamsRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryParamsRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryParamsRequest)(nil)

type fastReflection_QueryParamsRequest QueryParamsRequest

func (x *QueryParamsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryParamsRequest)(x)
}

func (x *QueryParamsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryParamsRequest_messageType fastReflection_QueryParamsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryParamsRequest_messageType{}

type fastReflection_QueryParamsRequest_messageType struct{}

func (x fastReflection_QueryParamsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryParamsRequest)(nil)
}
func (x fastReflection_QueryParamsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryParamsRequest)
}
func (x fastReflection_QueryParamsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryParamsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryParamsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryParamsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryParamsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryParamsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryParamsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryParamsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryParamsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryParamsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryParamsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryParamsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryParamsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryParamsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryParamsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryParamsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryParamsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryParamsResponse        protoreflect.MessageDescriptor
	fd_QueryParamsResponse_params protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryParamsResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryParamsResponse")
	fd_QueryParamsResponse_params = md_QueryParamsResponse.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_QueryParamsResponse)(nil)

type fastReflection_QueryParamsResponse QueryParamsResponse

func (x *QueryParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryParamsResponse)(x)
}

func (x *QueryParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryParamsResponse_messageType fastReflection_QueryParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryParamsResponse_messageType{}

type fastReflection_QueryParamsResponse_messageType struct{}

func (x fastReflection_QueryParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryParamsResponse)(nil)
}
func (x fastReflection_QueryParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryParamsResponse)
}
func (x fastReflection_QueryParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryParamsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_QueryParamsResponse_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryParamsResponse.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountRequest               protoreflect.MessageDescriptor
	fd_QueryGetAccountRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetAccountRequest_address       protoreflect.FieldDescriptor
	fd_QueryGetAccountRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountRequest")
	fd_QueryGetAccountRequest_header = md_QueryGetAccountRequest.Fields().ByName("header")
	fd_QueryGetAccountRequest_address = md_QueryGetAccountRequest.Fields().ByName("address")
	fd_QueryGetAccountRequest_ledgerVersion = md_QueryGetAccountRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountRequest)(nil)

type fastReflection_QueryGetAccountRequest QueryGetAccountRequest

func (x *QueryGetAccountRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountRequest)(x)
}

func (x *QueryGetAccountRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountRequest_messageType fastReflection_QueryGetAccountRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountRequest_messageType{}

type fastReflection_QueryGetAccountRequest_messageType struct{}

func (x fastReflection_QueryGetAccountRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountRequest)(nil)
}
func (x fastReflection_QueryGetAccountRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountRequest)
}
func (x fastReflection_QueryGetAccountRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountRequest_address, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetAccountRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetAccountRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountResponse")
	fd_QueryGetAccountResponse_aptRes = md_QueryGetAccountResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountResponse)(nil)

type fastReflection_QueryGetAccountResponse QueryGetAccountResponse

func (x *QueryGetAccountResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResponse)(x)
}

func (x *QueryGetAccountResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountResponse_messageType fastReflection_QueryGetAccountResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountResponse_messageType{}

type fastReflection_QueryGetAccountResponse_messageType struct{}

func (x fastReflection_QueryGetAccountResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResponse)(nil)
}
func (x fastReflection_QueryGetAccountResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResponse)
}
func (x fastReflection_QueryGetAccountResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountResourcesRequest               protoreflect.MessageDescriptor
	fd_QueryGetAccountResourcesRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetAccountResourcesRequest_address       protoreflect.FieldDescriptor
	fd_QueryGetAccountResourcesRequest_ledgerVersion protoreflect.FieldDescriptor
	fd_QueryGetAccountResourcesRequest_limit         protoreflect.FieldDescriptor
	fd_QueryGetAccountResourcesRequest_start         protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountResourcesRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountResourcesRequest")
	fd_QueryGetAccountResourcesRequest_header = md_QueryGetAccountResourcesRequest.Fields().ByName("header")
	fd_QueryGetAccountResourcesRequest_address = md_QueryGetAccountResourcesRequest.Fields().ByName("address")
	fd_QueryGetAccountResourcesRequest_ledgerVersion = md_QueryGetAccountResourcesRequest.Fields().ByName("ledgerVersion")
	fd_QueryGetAccountResourcesRequest_limit = md_QueryGetAccountResourcesRequest.Fields().ByName("limit")
	fd_QueryGetAccountResourcesRequest_start = md_QueryGetAccountResourcesRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountResourcesRequest)(nil)

type fastReflection_QueryGetAccountResourcesRequest QueryGetAccountResourcesRequest

func (x *QueryGetAccountResourcesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourcesRequest)(x)
}

func (x *QueryGetAccountResourcesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountResourcesRequest_messageType fastReflection_QueryGetAccountResourcesRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountResourcesRequest_messageType{}

type fastReflection_QueryGetAccountResourcesRequest_messageType struct{}

func (x fastReflection_QueryGetAccountResourcesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourcesRequest)(nil)
}
func (x fastReflection_QueryGetAccountResourcesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourcesRequest)
}
func (x fastReflection_QueryGetAccountResourcesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourcesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountResourcesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourcesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountResourcesRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountResourcesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountResourcesRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourcesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountResourcesRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountResourcesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountResourcesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountResourcesRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountResourcesRequest_address, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetAccountResourcesRequest_ledgerVersion, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetAccountResourcesRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetAccountResourcesRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountResourcesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		return x.LedgerVersion != ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		x.LedgerVersion = ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountResourcesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountResourcesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountResourcesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetAccountResourcesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetAccountResourcesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetAccountResourcesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountResourcesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourcesRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountResourcesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountResourcesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountResourcesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountResourcesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountResourcesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountResourcesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourcesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourcesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourcesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourcesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountResourcesResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountResourcesResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountResourcesResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountResourcesResponse")
	fd_QueryGetAccountResourcesResponse_aptRes = md_QueryGetAccountResourcesResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountResourcesResponse)(nil)

type fastReflection_QueryGetAccountResourcesResponse QueryGetAccountResourcesResponse

func (x *QueryGetAccountResourcesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourcesResponse)(x)
}

func (x *QueryGetAccountResourcesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountResourcesResponse_messageType fastReflection_QueryGetAccountResourcesResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountResourcesResponse_messageType{}

type fastReflection_QueryGetAccountResourcesResponse_messageType struct{}

func (x fastReflection_QueryGetAccountResourcesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourcesResponse)(nil)
}
func (x fastReflection_QueryGetAccountResourcesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourcesResponse)
}
func (x fastReflection_QueryGetAccountResourcesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourcesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountResourcesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourcesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountResourcesResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountResourcesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountResourcesResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourcesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountResourcesResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountResourcesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountResourcesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountResourcesResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountResourcesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountResourcesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountResourcesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourcesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourcesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountResourcesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountResourcesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountResourcesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourcesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountResourcesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountResourcesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountResourcesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourcesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourcesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourcesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourcesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountModulesRequest               protoreflect.MessageDescriptor
	fd_QueryGetAccountModulesRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetAccountModulesRequest_address       protoreflect.FieldDescriptor
	fd_QueryGetAccountModulesRequest_ledgerVersion protoreflect.FieldDescriptor
	fd_QueryGetAccountModulesRequest_limit         protoreflect.FieldDescriptor
	fd_QueryGetAccountModulesRequest_start         protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountModulesRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountModulesRequest")
	fd_QueryGetAccountModulesRequest_header = md_QueryGetAccountModulesRequest.Fields().ByName("header")
	fd_QueryGetAccountModulesRequest_address = md_QueryGetAccountModulesRequest.Fields().ByName("address")
	fd_QueryGetAccountModulesRequest_ledgerVersion = md_QueryGetAccountModulesRequest.Fields().ByName("ledgerVersion")
	fd_QueryGetAccountModulesRequest_limit = md_QueryGetAccountModulesRequest.Fields().ByName("limit")
	fd_QueryGetAccountModulesRequest_start = md_QueryGetAccountModulesRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountModulesRequest)(nil)

type fastReflection_QueryGetAccountModulesRequest QueryGetAccountModulesRequest

func (x *QueryGetAccountModulesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModulesRequest)(x)
}

func (x *QueryGetAccountModulesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountModulesRequest_messageType fastReflection_QueryGetAccountModulesRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountModulesRequest_messageType{}

type fastReflection_QueryGetAccountModulesRequest_messageType struct{}

func (x fastReflection_QueryGetAccountModulesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModulesRequest)(nil)
}
func (x fastReflection_QueryGetAccountModulesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModulesRequest)
}
func (x fastReflection_QueryGetAccountModulesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModulesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountModulesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModulesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountModulesRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountModulesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountModulesRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModulesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountModulesRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountModulesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountModulesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountModulesRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountModulesRequest_address, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetAccountModulesRequest_ledgerVersion, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetAccountModulesRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetAccountModulesRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountModulesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		return x.LedgerVersion != ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		x.LedgerVersion = ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountModulesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountModulesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountModulesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetAccountModulesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetAccountModulesRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetAccountModulesRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountModulesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModulesRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountModulesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountModulesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountModulesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountModulesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountModulesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountModulesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModulesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModulesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModulesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModulesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountModulesResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountModulesResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountModulesResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountModulesResponse")
	fd_QueryGetAccountModulesResponse_aptRes = md_QueryGetAccountModulesResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountModulesResponse)(nil)

type fastReflection_QueryGetAccountModulesResponse QueryGetAccountModulesResponse

func (x *QueryGetAccountModulesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModulesResponse)(x)
}

func (x *QueryGetAccountModulesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountModulesResponse_messageType fastReflection_QueryGetAccountModulesResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountModulesResponse_messageType{}

type fastReflection_QueryGetAccountModulesResponse_messageType struct{}

func (x fastReflection_QueryGetAccountModulesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModulesResponse)(nil)
}
func (x fastReflection_QueryGetAccountModulesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModulesResponse)
}
func (x fastReflection_QueryGetAccountModulesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModulesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountModulesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModulesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountModulesResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountModulesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountModulesResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModulesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountModulesResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountModulesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountModulesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountModulesResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountModulesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountModulesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountModulesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModulesResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModulesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountModulesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountModulesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountModulesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModulesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountModulesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountModulesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountModulesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModulesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModulesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModulesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModulesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountResourceRequest               protoreflect.MessageDescriptor
	fd_QueryGetAccountResourceRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetAccountResourceRequest_address       protoreflect.FieldDescriptor
	fd_QueryGetAccountResourceRequest_resourceType  protoreflect.FieldDescriptor
	fd_QueryGetAccountResourceRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountResourceRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountResourceRequest")
	fd_QueryGetAccountResourceRequest_header = md_QueryGetAccountResourceRequest.Fields().ByName("header")
	fd_QueryGetAccountResourceRequest_address = md_QueryGetAccountResourceRequest.Fields().ByName("address")
	fd_QueryGetAccountResourceRequest_resourceType = md_QueryGetAccountResourceRequest.Fields().ByName("resourceType")
	fd_QueryGetAccountResourceRequest_ledgerVersion = md_QueryGetAccountResourceRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountResourceRequest)(nil)

type fastReflection_QueryGetAccountResourceRequest QueryGetAccountResourceRequest

func (x *QueryGetAccountResourceRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourceRequest)(x)
}

func (x *QueryGetAccountResourceRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountResourceRequest_messageType fastReflection_QueryGetAccountResourceRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountResourceRequest_messageType{}

type fastReflection_QueryGetAccountResourceRequest_messageType struct{}

func (x fastReflection_QueryGetAccountResourceRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourceRequest)(nil)
}
func (x fastReflection_QueryGetAccountResourceRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourceRequest)
}
func (x fastReflection_QueryGetAccountResourceRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourceRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountResourceRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourceRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountResourceRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountResourceRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountResourceRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourceRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountResourceRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountResourceRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountResourceRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountResourceRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountResourceRequest_address, value) {
			return
		}
	}
	if x.ResourceType != "" {
		value := protoreflect.ValueOfString(x.ResourceType)
		if !f(fd_QueryGetAccountResourceRequest_resourceType, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetAccountResourceRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountResourceRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		return x.ResourceType != ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		x.ResourceType = ""
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountResourceRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		value := x.ResourceType
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		x.ResourceType = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountResourceRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountResourceRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		panic(fmt.Errorf("field resourceType of message aptcaller.aptcaller.QueryGetAccountResourceRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetAccountResourceRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountResourceRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.resourceType":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountResourceRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountResourceRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountResourceRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountResourceRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountResourceRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountResourceRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountResourceRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ResourceType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourceRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ResourceType) > 0 {
			i -= len(x.ResourceType)
			copy(dAtA[i:], x.ResourceType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ResourceType)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourceRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourceRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ResourceType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountResourceResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountResourceResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountResourceResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountResourceResponse")
	fd_QueryGetAccountResourceResponse_aptRes = md_QueryGetAccountResourceResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountResourceResponse)(nil)

type fastReflection_QueryGetAccountResourceResponse QueryGetAccountResourceResponse

func (x *QueryGetAccountResourceResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourceResponse)(x)
}

func (x *QueryGetAccountResourceResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountResourceResponse_messageType fastReflection_QueryGetAccountResourceResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountResourceResponse_messageType{}

type fastReflection_QueryGetAccountResourceResponse_messageType struct{}

func (x fastReflection_QueryGetAccountResourceResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountResourceResponse)(nil)
}
func (x fastReflection_QueryGetAccountResourceResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourceResponse)
}
func (x fastReflection_QueryGetAccountResourceResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourceResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountResourceResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountResourceResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountResourceResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountResourceResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountResourceResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountResourceResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountResourceResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountResourceResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountResourceResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountResourceResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountResourceResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountResourceResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountResourceResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountResourceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountResourceResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountResourceResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountResourceResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountResourceResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountResourceResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountResourceResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountResourceResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountResourceResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourceResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountResourceResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourceResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountModuleRequest               protoreflect.MessageDescriptor
	fd_QueryGetAccountModuleRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetAccountModuleRequest_address       protoreflect.FieldDescriptor
	fd_QueryGetAccountModuleRequest_moduleName    protoreflect.FieldDescriptor
	fd_QueryGetAccountModuleRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountModuleRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountModuleRequest")
	fd_QueryGetAccountModuleRequest_header = md_QueryGetAccountModuleRequest.Fields().ByName("header")
	fd_QueryGetAccountModuleRequest_address = md_QueryGetAccountModuleRequest.Fields().ByName("address")
	fd_QueryGetAccountModuleRequest_moduleName = md_QueryGetAccountModuleRequest.Fields().ByName("moduleName")
	fd_QueryGetAccountModuleRequest_ledgerVersion = md_QueryGetAccountModuleRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountModuleRequest)(nil)

type fastReflection_QueryGetAccountModuleRequest QueryGetAccountModuleRequest

func (x *QueryGetAccountModuleRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModuleRequest)(x)
}

func (x *QueryGetAccountModuleRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountModuleRequest_messageType fastReflection_QueryGetAccountModuleRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountModuleRequest_messageType{}

type fastReflection_QueryGetAccountModuleRequest_messageType struct{}

func (x fastReflection_QueryGetAccountModuleRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModuleRequest)(nil)
}
func (x fastReflection_QueryGetAccountModuleRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModuleRequest)
}
func (x fastReflection_QueryGetAccountModuleRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModuleRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountModuleRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModuleRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountModuleRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountModuleRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountModuleRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModuleRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountModuleRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountModuleRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountModuleRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountModuleRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountModuleRequest_address, value) {
			return
		}
	}
	if x.ModuleName != "" {
		value := protoreflect.ValueOfString(x.ModuleName)
		if !f(fd_QueryGetAccountModuleRequest_moduleName, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetAccountModuleRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountModuleRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		return x.ModuleName != ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		x.ModuleName = ""
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountModuleRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		value := x.ModuleName
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		x.ModuleName = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountModuleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountModuleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		panic(fmt.Errorf("field moduleName of message aptcaller.aptcaller.QueryGetAccountModuleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetAccountModuleRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountModuleRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.moduleName":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountModuleRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountModuleRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountModuleRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountModuleRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountModuleRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountModuleRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountModuleRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ModuleName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModuleRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ModuleName) > 0 {
			i -= len(x.ModuleName)
			copy(dAtA[i:], x.ModuleName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ModuleName)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModuleRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModuleRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModuleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ModuleName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ModuleName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountModuleResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountModuleResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountModuleResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountModuleResponse")
	fd_QueryGetAccountModuleResponse_aptRes = md_QueryGetAccountModuleResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountModuleResponse)(nil)

type fastReflection_QueryGetAccountModuleResponse QueryGetAccountModuleResponse

func (x *QueryGetAccountModuleResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModuleResponse)(x)
}

func (x *QueryGetAccountModuleResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountModuleResponse_messageType fastReflection_QueryGetAccountModuleResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountModuleResponse_messageType{}

type fastReflection_QueryGetAccountModuleResponse_messageType struct{}

func (x fastReflection_QueryGetAccountModuleResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountModuleResponse)(nil)
}
func (x fastReflection_QueryGetAccountModuleResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModuleResponse)
}
func (x fastReflection_QueryGetAccountModuleResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModuleResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountModuleResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountModuleResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountModuleResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountModuleResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountModuleResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountModuleResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountModuleResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountModuleResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountModuleResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountModuleResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountModuleResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountModuleResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountModuleResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountModuleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountModuleResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountModuleResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountModuleResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountModuleResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountModuleResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountModuleResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountModuleResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountModuleResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModuleResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountModuleResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModuleResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountModuleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetBlockByHeightRequest                  protoreflect.MessageDescriptor
	fd_QueryGetBlockByHeightRequest_header           protoreflect.FieldDescriptor
	fd_QueryGetBlockByHeightRequest_blockHeight      protoreflect.FieldDescriptor
	fd_QueryGetBlockByHeightRequest_withTransactions protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetBlockByHeightRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetBlockByHeightRequest")
	fd_QueryGetBlockByHeightRequest_header = md_QueryGetBlockByHeightRequest.Fields().ByName("header")
	fd_QueryGetBlockByHeightRequest_blockHeight = md_QueryGetBlockByHeightRequest.Fields().ByName("blockHeight")
	fd_QueryGetBlockByHeightRequest_withTransactions = md_QueryGetBlockByHeightRequest.Fields().ByName("withTransactions")
}

var _ protoreflect.Message = (*fastReflection_QueryGetBlockByHeightRequest)(nil)

type fastReflection_QueryGetBlockByHeightRequest QueryGetBlockByHeightRequest

func (x *QueryGetBlockByHeightRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByHeightRequest)(x)
}

func (x *QueryGetBlockByHeightRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetBlockByHeightRequest_messageType fastReflection_QueryGetBlockByHeightRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetBlockByHeightRequest_messageType{}

type fastReflection_QueryGetBlockByHeightRequest_messageType struct{}

func (x fastReflection_QueryGetBlockByHeightRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByHeightRequest)(nil)
}
func (x fastReflection_QueryGetBlockByHeightRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByHeightRequest)
}
func (x fastReflection_QueryGetBlockByHeightRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByHeightRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetBlockByHeightRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByHeightRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetBlockByHeightRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetBlockByHeightRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetBlockByHeightRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByHeightRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetBlockByHeightRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetBlockByHeightRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetBlockByHeightRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetBlockByHeightRequest_header, value) {
			return
		}
	}
	if x.BlockHeight != "" {
		value := protoreflect.ValueOfString(x.BlockHeight)
		if !f(fd_QueryGetBlockByHeightRequest_blockHeight, value) {
			return
		}
	}
	if x.WithTransactions != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WithTransactions)
		if !f(fd_QueryGetBlockByHeightRequest_withTransactions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetBlockByHeightRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		return x.BlockHeight != ""
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		return x.WithTransactions != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		x.BlockHeight = ""
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		x.WithTransactions = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetBlockByHeightRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		value := x.BlockHeight
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		value := x.WithTransactions
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		x.BlockHeight = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		x.WithTransactions = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetBlockByHeightRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		panic(fmt.Errorf("field blockHeight of message aptcaller.aptcaller.QueryGetBlockByHeightRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		panic(fmt.Errorf("field withTransactions of message aptcaller.aptcaller.QueryGetBlockByHeightRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetBlockByHeightRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.blockHeight":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetBlockByHeightRequest.withTransactions":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetBlockByHeightRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetBlockByHeightRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetBlockByHeightRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetBlockByHeightRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetBlockByHeightRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetBlockByHeightRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlockHeight)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.WithTransactions != 0 {
			n += 1 + runtime.Sov(uint64(x.WithTransactions))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByHeightRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.WithTransactions != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WithTransactions))
			i--
			dAtA[i] = 0x18
		}
		if len(x.BlockHeight) > 0 {
			i -= len(x.BlockHeight)
			copy(dAtA[i:], x.BlockHeight)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockHeight)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByHeightRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByHeightRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByHeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockHeight = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithTransactions", wireType)
				}
				x.WithTransactions = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WithTransactions |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetBlockByHeightResponse        protoreflect.MessageDescriptor
	fd_QueryGetBlockByHeightResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetBlockByHeightResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetBlockByHeightResponse")
	fd_QueryGetBlockByHeightResponse_aptRes = md_QueryGetBlockByHeightResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetBlockByHeightResponse)(nil)

type fastReflection_QueryGetBlockByHeightResponse QueryGetBlockByHeightResponse

func (x *QueryGetBlockByHeightResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByHeightResponse)(x)
}

func (x *QueryGetBlockByHeightResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetBlockByHeightResponse_messageType fastReflection_QueryGetBlockByHeightResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetBlockByHeightResponse_messageType{}

type fastReflection_QueryGetBlockByHeightResponse_messageType struct{}

func (x fastReflection_QueryGetBlockByHeightResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByHeightResponse)(nil)
}
func (x fastReflection_QueryGetBlockByHeightResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByHeightResponse)
}
func (x fastReflection_QueryGetBlockByHeightResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByHeightResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetBlockByHeightResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByHeightResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetBlockByHeightResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetBlockByHeightResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetBlockByHeightResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByHeightResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetBlockByHeightResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetBlockByHeightResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetBlockByHeightResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetBlockByHeightResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetBlockByHeightResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetBlockByHeightResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetBlockByHeightResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByHeightResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByHeightResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetBlockByHeightResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetBlockByHeightResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetBlockByHeightResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByHeightResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetBlockByHeightResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetBlockByHeightResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetBlockByHeightResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByHeightResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByHeightResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByHeightResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByHeightResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetBlockByVersionRequest                  protoreflect.MessageDescriptor
	fd_QueryGetBlockByVersionRequest_header           protoreflect.FieldDescriptor
	fd_QueryGetBlockByVersionRequest_version          protoreflect.FieldDescriptor
	fd_QueryGetBlockByVersionRequest_withTransactions protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetBlockByVersionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetBlockByVersionRequest")
	fd_QueryGetBlockByVersionRequest_header = md_QueryGetBlockByVersionRequest.Fields().ByName("header")
	fd_QueryGetBlockByVersionRequest_version = md_QueryGetBlockByVersionRequest.Fields().ByName("version")
	fd_QueryGetBlockByVersionRequest_withTransactions = md_QueryGetBlockByVersionRequest.Fields().ByName("withTransactions")
}

var _ protoreflect.Message = (*fastReflection_QueryGetBlockByVersionRequest)(nil)

type fastReflection_QueryGetBlockByVersionRequest QueryGetBlockByVersionRequest

func (x *QueryGetBlockByVersionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByVersionRequest)(x)
}

func (x *QueryGetBlockByVersionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetBlockByVersionRequest_messageType fastReflection_QueryGetBlockByVersionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetBlockByVersionRequest_messageType{}

type fastReflection_QueryGetBlockByVersionRequest_messageType struct{}

func (x fastReflection_QueryGetBlockByVersionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByVersionRequest)(nil)
}
func (x fastReflection_QueryGetBlockByVersionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByVersionRequest)
}
func (x fastReflection_QueryGetBlockByVersionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByVersionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetBlockByVersionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByVersionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetBlockByVersionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetBlockByVersionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetBlockByVersionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByVersionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetBlockByVersionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetBlockByVersionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetBlockByVersionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetBlockByVersionRequest_header, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_QueryGetBlockByVersionRequest_version, value) {
			return
		}
	}
	if x.WithTransactions != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WithTransactions)
		if !f(fd_QueryGetBlockByVersionRequest_withTransactions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetBlockByVersionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		return x.Version != ""
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		return x.WithTransactions != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		x.Version = ""
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		x.WithTransactions = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetBlockByVersionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		value := x.WithTransactions
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		x.Version = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		x.WithTransactions = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetBlockByVersionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		panic(fmt.Errorf("field version of message aptcaller.aptcaller.QueryGetBlockByVersionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		panic(fmt.Errorf("field withTransactions of message aptcaller.aptcaller.QueryGetBlockByVersionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetBlockByVersionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.version":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetBlockByVersionRequest.withTransactions":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetBlockByVersionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetBlockByVersionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetBlockByVersionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetBlockByVersionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetBlockByVersionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetBlockByVersionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.WithTransactions != 0 {
			n += 1 + runtime.Sov(uint64(x.WithTransactions))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByVersionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.WithTransactions != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WithTransactions))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByVersionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByVersionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithTransactions", wireType)
				}
				x.WithTransactions = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WithTransactions |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetBlockByVersionResponse        protoreflect.MessageDescriptor
	fd_QueryGetBlockByVersionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetBlockByVersionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetBlockByVersionResponse")
	fd_QueryGetBlockByVersionResponse_aptRes = md_QueryGetBlockByVersionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetBlockByVersionResponse)(nil)

type fastReflection_QueryGetBlockByVersionResponse QueryGetBlockByVersionResponse

func (x *QueryGetBlockByVersionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByVersionResponse)(x)
}

func (x *QueryGetBlockByVersionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetBlockByVersionResponse_messageType fastReflection_QueryGetBlockByVersionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetBlockByVersionResponse_messageType{}

type fastReflection_QueryGetBlockByVersionResponse_messageType struct{}

func (x fastReflection_QueryGetBlockByVersionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetBlockByVersionResponse)(nil)
}
func (x fastReflection_QueryGetBlockByVersionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByVersionResponse)
}
func (x fastReflection_QueryGetBlockByVersionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByVersionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetBlockByVersionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetBlockByVersionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetBlockByVersionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetBlockByVersionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetBlockByVersionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetBlockByVersionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetBlockByVersionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetBlockByVersionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetBlockByVersionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetBlockByVersionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetBlockByVersionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetBlockByVersionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetBlockByVersionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetBlockByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetBlockByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetBlockByVersionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetBlockByVersionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetBlockByVersionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetBlockByVersionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetBlockByVersionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetBlockByVersionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetBlockByVersionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByVersionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetBlockByVersionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByVersionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetBlockByVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEventsByCreationNumberRequest                protoreflect.MessageDescriptor
	fd_QueryGetEventsByCreationNumberRequest_header         protoreflect.FieldDescriptor
	fd_QueryGetEventsByCreationNumberRequest_address        protoreflect.FieldDescriptor
	fd_QueryGetEventsByCreationNumberRequest_creationNumber protoreflect.FieldDescriptor
	fd_QueryGetEventsByCreationNumberRequest_limit          protoreflect.FieldDescriptor
	fd_QueryGetEventsByCreationNumberRequest_start          protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetEventsByCreationNumberRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetEventsByCreationNumberRequest")
	fd_QueryGetEventsByCreationNumberRequest_header = md_QueryGetEventsByCreationNumberRequest.Fields().ByName("header")
	fd_QueryGetEventsByCreationNumberRequest_address = md_QueryGetEventsByCreationNumberRequest.Fields().ByName("address")
	fd_QueryGetEventsByCreationNumberRequest_creationNumber = md_QueryGetEventsByCreationNumberRequest.Fields().ByName("creationNumber")
	fd_QueryGetEventsByCreationNumberRequest_limit = md_QueryGetEventsByCreationNumberRequest.Fields().ByName("limit")
	fd_QueryGetEventsByCreationNumberRequest_start = md_QueryGetEventsByCreationNumberRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEventsByCreationNumberRequest)(nil)

type fastReflection_QueryGetEventsByCreationNumberRequest QueryGetEventsByCreationNumberRequest

func (x *QueryGetEventsByCreationNumberRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByCreationNumberRequest)(x)
}

func (x *QueryGetEventsByCreationNumberRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEventsByCreationNumberRequest_messageType fastReflection_QueryGetEventsByCreationNumberRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEventsByCreationNumberRequest_messageType{}

type fastReflection_QueryGetEventsByCreationNumberRequest_messageType struct{}

func (x fastReflection_QueryGetEventsByCreationNumberRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByCreationNumberRequest)(nil)
}
func (x fastReflection_QueryGetEventsByCreationNumberRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByCreationNumberRequest)
}
func (x fastReflection_QueryGetEventsByCreationNumberRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByCreationNumberRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByCreationNumberRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEventsByCreationNumberRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByCreationNumberRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEventsByCreationNumberRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetEventsByCreationNumberRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetEventsByCreationNumberRequest_address, value) {
			return
		}
	}
	if x.CreationNumber != "" {
		value := protoreflect.ValueOfString(x.CreationNumber)
		if !f(fd_QueryGetEventsByCreationNumberRequest_creationNumber, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetEventsByCreationNumberRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetEventsByCreationNumberRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		return x.CreationNumber != ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		x.CreationNumber = ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		value := x.CreationNumber
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		x.CreationNumber = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		panic(fmt.Errorf("field creationNumber of message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.creationNumber":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEventsByCreationNumberRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CreationNumber)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CreationNumber) > 0 {
			i -= len(x.CreationNumber)
			copy(dAtA[i:], x.CreationNumber)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CreationNumber)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByCreationNumberRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByCreationNumberRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreationNumber", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CreationNumber = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEventsByCreationNumberResponse        protoreflect.MessageDescriptor
	fd_QueryGetEventsByCreationNumberResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetEventsByCreationNumberResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetEventsByCreationNumberResponse")
	fd_QueryGetEventsByCreationNumberResponse_aptRes = md_QueryGetEventsByCreationNumberResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEventsByCreationNumberResponse)(nil)

type fastReflection_QueryGetEventsByCreationNumberResponse QueryGetEventsByCreationNumberResponse

func (x *QueryGetEventsByCreationNumberResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByCreationNumberResponse)(x)
}

func (x *QueryGetEventsByCreationNumberResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEventsByCreationNumberResponse_messageType fastReflection_QueryGetEventsByCreationNumberResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEventsByCreationNumberResponse_messageType{}

type fastReflection_QueryGetEventsByCreationNumberResponse_messageType struct{}

func (x fastReflection_QueryGetEventsByCreationNumberResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByCreationNumberResponse)(nil)
}
func (x fastReflection_QueryGetEventsByCreationNumberResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByCreationNumberResponse)
}
func (x fastReflection_QueryGetEventsByCreationNumberResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByCreationNumberResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByCreationNumberResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEventsByCreationNumberResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByCreationNumberResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEventsByCreationNumberResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetEventsByCreationNumberResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEventsByCreationNumberResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByCreationNumberResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByCreationNumberResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByCreationNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEventsByEventHandleRequest             protoreflect.MessageDescriptor
	fd_QueryGetEventsByEventHandleRequest_header      protoreflect.FieldDescriptor
	fd_QueryGetEventsByEventHandleRequest_address     protoreflect.FieldDescriptor
	fd_QueryGetEventsByEventHandleRequest_eventHandle protoreflect.FieldDescriptor
	fd_QueryGetEventsByEventHandleRequest_fieldName   protoreflect.FieldDescriptor
	fd_QueryGetEventsByEventHandleRequest_limit       protoreflect.FieldDescriptor
	fd_QueryGetEventsByEventHandleRequest_start       protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetEventsByEventHandleRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetEventsByEventHandleRequest")
	fd_QueryGetEventsByEventHandleRequest_header = md_QueryGetEventsByEventHandleRequest.Fields().ByName("header")
	fd_QueryGetEventsByEventHandleRequest_address = md_QueryGetEventsByEventHandleRequest.Fields().ByName("address")
	fd_QueryGetEventsByEventHandleRequest_eventHandle = md_QueryGetEventsByEventHandleRequest.Fields().ByName("eventHandle")
	fd_QueryGetEventsByEventHandleRequest_fieldName = md_QueryGetEventsByEventHandleRequest.Fields().ByName("fieldName")
	fd_QueryGetEventsByEventHandleRequest_limit = md_QueryGetEventsByEventHandleRequest.Fields().ByName("limit")
	fd_QueryGetEventsByEventHandleRequest_start = md_QueryGetEventsByEventHandleRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEventsByEventHandleRequest)(nil)

type fastReflection_QueryGetEventsByEventHandleRequest QueryGetEventsByEventHandleRequest

func (x *QueryGetEventsByEventHandleRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByEventHandleRequest)(x)
}

func (x *QueryGetEventsByEventHandleRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEventsByEventHandleRequest_messageType fastReflection_QueryGetEventsByEventHandleRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEventsByEventHandleRequest_messageType{}

type fastReflection_QueryGetEventsByEventHandleRequest_messageType struct{}

func (x fastReflection_QueryGetEventsByEventHandleRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByEventHandleRequest)(nil)
}
func (x fastReflection_QueryGetEventsByEventHandleRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByEventHandleRequest)
}
func (x fastReflection_QueryGetEventsByEventHandleRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByEventHandleRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByEventHandleRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEventsByEventHandleRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByEventHandleRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEventsByEventHandleRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetEventsByEventHandleRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetEventsByEventHandleRequest_address, value) {
			return
		}
	}
	if x.EventHandle != "" {
		value := protoreflect.ValueOfString(x.EventHandle)
		if !f(fd_QueryGetEventsByEventHandleRequest_eventHandle, value) {
			return
		}
	}
	if x.FieldName != "" {
		value := protoreflect.ValueOfString(x.FieldName)
		if !f(fd_QueryGetEventsByEventHandleRequest_fieldName, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetEventsByEventHandleRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetEventsByEventHandleRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		return x.EventHandle != ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		return x.FieldName != ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		x.EventHandle = ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		x.FieldName = ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		value := x.EventHandle
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		value := x.FieldName
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		x.EventHandle = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		x.FieldName = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		panic(fmt.Errorf("field eventHandle of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		panic(fmt.Errorf("field fieldName of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.eventHandle":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.fieldName":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetEventsByEventHandleRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEventsByEventHandleRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EventHandle)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FieldName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.FieldName) > 0 {
			i -= len(x.FieldName)
			copy(dAtA[i:], x.FieldName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FieldName)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EventHandle) > 0 {
			i -= len(x.EventHandle)
			copy(dAtA[i:], x.EventHandle)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EventHandle)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByEventHandleRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByEventHandleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EventHandle", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EventHandle = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FieldName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FieldName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEventsByEventHandleResponse        protoreflect.MessageDescriptor
	fd_QueryGetEventsByEventHandleResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetEventsByEventHandleResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetEventsByEventHandleResponse")
	fd_QueryGetEventsByEventHandleResponse_aptRes = md_QueryGetEventsByEventHandleResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEventsByEventHandleResponse)(nil)

type fastReflection_QueryGetEventsByEventHandleResponse QueryGetEventsByEventHandleResponse

func (x *QueryGetEventsByEventHandleResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByEventHandleResponse)(x)
}

func (x *QueryGetEventsByEventHandleResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEventsByEventHandleResponse_messageType fastReflection_QueryGetEventsByEventHandleResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEventsByEventHandleResponse_messageType{}

type fastReflection_QueryGetEventsByEventHandleResponse_messageType struct{}

func (x fastReflection_QueryGetEventsByEventHandleResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEventsByEventHandleResponse)(nil)
}
func (x fastReflection_QueryGetEventsByEventHandleResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByEventHandleResponse)
}
func (x fastReflection_QueryGetEventsByEventHandleResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByEventHandleResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEventsByEventHandleResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEventsByEventHandleResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetEventsByEventHandleResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEventsByEventHandleResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetEventsByEventHandleResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetEventsByEventHandleResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetEventsByEventHandleResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEventsByEventHandleResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEventsByEventHandleResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByEventHandleResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEventsByEventHandleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetLedgerInfoRequest        protoreflect.MessageDescriptor
	fd_QueryGetLedgerInfoRequest_header protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetLedgerInfoRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetLedgerInfoRequest")
	fd_QueryGetLedgerInfoRequest_header = md_QueryGetLedgerInfoRequest.Fields().ByName("header")
}

var _ protoreflect.Message = (*fastReflection_QueryGetLedgerInfoRequest)(nil)

type fastReflection_QueryGetLedgerInfoRequest QueryGetLedgerInfoRequest

func (x *QueryGetLedgerInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetLedgerInfoRequest)(x)
}

func (x *QueryGetLedgerInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetLedgerInfoRequest_messageType fastReflection_QueryGetLedgerInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetLedgerInfoRequest_messageType{}

type fastReflection_QueryGetLedgerInfoRequest_messageType struct{}

func (x fastReflection_QueryGetLedgerInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetLedgerInfoRequest)(nil)
}
func (x fastReflection_QueryGetLedgerInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetLedgerInfoRequest)
}
func (x fastReflection_QueryGetLedgerInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetLedgerInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetLedgerInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetLedgerInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetLedgerInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetLedgerInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetLedgerInfoRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetLedgerInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetLedgerInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetLedgerInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetLedgerInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetLedgerInfoRequest_header, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetLedgerInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		return x.Header != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		x.Header = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetLedgerInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		x.Header = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetLedgerInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetLedgerInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoRequest.header":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetLedgerInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetLedgerInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetLedgerInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetLedgerInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetLedgerInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetLedgerInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetLedgerInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetLedgerInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetLedgerInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetLedgerInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetLedgerInfoResponse        protoreflect.MessageDescriptor
	fd_QueryGetLedgerInfoResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetLedgerInfoResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetLedgerInfoResponse")
	fd_QueryGetLedgerInfoResponse_aptRes = md_QueryGetLedgerInfoResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetLedgerInfoResponse)(nil)

type fastReflection_QueryGetLedgerInfoResponse QueryGetLedgerInfoResponse

func (x *QueryGetLedgerInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetLedgerInfoResponse)(x)
}

func (x *QueryGetLedgerInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetLedgerInfoResponse_messageType fastReflection_QueryGetLedgerInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetLedgerInfoResponse_messageType{}

type fastReflection_QueryGetLedgerInfoResponse_messageType struct{}

func (x fastReflection_QueryGetLedgerInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetLedgerInfoResponse)(nil)
}
func (x fastReflection_QueryGetLedgerInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetLedgerInfoResponse)
}
func (x fastReflection_QueryGetLedgerInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetLedgerInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetLedgerInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetLedgerInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetLedgerInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetLedgerInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetLedgerInfoResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetLedgerInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetLedgerInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetLedgerInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetLedgerInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetLedgerInfoResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetLedgerInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetLedgerInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetLedgerInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetLedgerInfoResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetLedgerInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetLedgerInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetLedgerInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetLedgerInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetLedgerInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetLedgerInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetLedgerInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetLedgerInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetLedgerInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetLedgerInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetLedgerInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetLedgerInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionsRequest        protoreflect.MessageDescriptor
	fd_QueryGetTransactionsRequest_header protoreflect.FieldDescriptor
	fd_QueryGetTransactionsRequest_limit  protoreflect.FieldDescriptor
	fd_QueryGetTransactionsRequest_start  protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionsRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionsRequest")
	fd_QueryGetTransactionsRequest_header = md_QueryGetTransactionsRequest.Fields().ByName("header")
	fd_QueryGetTransactionsRequest_limit = md_QueryGetTransactionsRequest.Fields().ByName("limit")
	fd_QueryGetTransactionsRequest_start = md_QueryGetTransactionsRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionsRequest)(nil)

type fastReflection_QueryGetTransactionsRequest QueryGetTransactionsRequest

func (x *QueryGetTransactionsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionsRequest)(x)
}

func (x *QueryGetTransactionsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionsRequest_messageType fastReflection_QueryGetTransactionsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionsRequest_messageType{}

type fastReflection_QueryGetTransactionsRequest_messageType struct{}

func (x fastReflection_QueryGetTransactionsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionsRequest)(nil)
}
func (x fastReflection_QueryGetTransactionsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionsRequest)
}
func (x fastReflection_QueryGetTransactionsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetTransactionsRequest_header, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetTransactionsRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetTransactionsRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetTransactionsRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetTransactionsRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetTransactionsRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTransactionsRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionsResponse        protoreflect.MessageDescriptor
	fd_QueryGetTransactionsResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionsResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionsResponse")
	fd_QueryGetTransactionsResponse_aptRes = md_QueryGetTransactionsResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionsResponse)(nil)

type fastReflection_QueryGetTransactionsResponse QueryGetTransactionsResponse

func (x *QueryGetTransactionsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionsResponse)(x)
}

func (x *QueryGetTransactionsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionsResponse_messageType fastReflection_QueryGetTransactionsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionsResponse_messageType{}

type fastReflection_QueryGetTransactionsResponse_messageType struct{}

func (x fastReflection_QueryGetTransactionsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionsResponse)(nil)
}
func (x fastReflection_QueryGetTransactionsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionsResponse)
}
func (x fastReflection_QueryGetTransactionsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetTransactionsResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionsResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByHashRequest         protoreflect.MessageDescriptor
	fd_QueryGetTransactionByHashRequest_header  protoreflect.FieldDescriptor
	fd_QueryGetTransactionByHashRequest_txnHash protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByHashRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByHashRequest")
	fd_QueryGetTransactionByHashRequest_header = md_QueryGetTransactionByHashRequest.Fields().ByName("header")
	fd_QueryGetTransactionByHashRequest_txnHash = md_QueryGetTransactionByHashRequest.Fields().ByName("txnHash")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByHashRequest)(nil)

type fastReflection_QueryGetTransactionByHashRequest QueryGetTransactionByHashRequest

func (x *QueryGetTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByHashRequest)(x)
}

func (x *QueryGetTransactionByHashRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByHashRequest_messageType fastReflection_QueryGetTransactionByHashRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByHashRequest_messageType{}

type fastReflection_QueryGetTransactionByHashRequest_messageType struct{}

func (x fastReflection_QueryGetTransactionByHashRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByHashRequest)(nil)
}
func (x fastReflection_QueryGetTransactionByHashRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByHashRequest)
}
func (x fastReflection_QueryGetTransactionByHashRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByHashRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByHashRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByHashRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByHashRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByHashRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByHashRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByHashRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByHashRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByHashRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByHashRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetTransactionByHashRequest_header, value) {
			return
		}
	}
	if x.TxnHash != "" {
		value := protoreflect.ValueOfString(x.TxnHash)
		if !f(fd_QueryGetTransactionByHashRequest_txnHash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByHashRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		return x.TxnHash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		x.TxnHash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByHashRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		value := x.TxnHash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		x.TxnHash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetTransactionByHashRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		panic(fmt.Errorf("field txnHash of message aptcaller.aptcaller.QueryGetTransactionByHashRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByHashRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTransactionByHashRequest.txnHash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByHashRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByHashRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByHashRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByHashRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByHashRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByHashRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxnHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByHashRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxnHash) > 0 {
			i -= len(x.TxnHash)
			copy(dAtA[i:], x.TxnHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxnHash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByHashRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByHashRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByHashRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxnHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxnHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByHashResponse        protoreflect.MessageDescriptor
	fd_QueryGetTransactionByHashResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByHashResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByHashResponse")
	fd_QueryGetTransactionByHashResponse_aptRes = md_QueryGetTransactionByHashResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByHashResponse)(nil)

type fastReflection_QueryGetTransactionByHashResponse QueryGetTransactionByHashResponse

func (x *QueryGetTransactionByHashResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByHashResponse)(x)
}

func (x *QueryGetTransactionByHashResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByHashResponse_messageType fastReflection_QueryGetTransactionByHashResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByHashResponse_messageType{}

type fastReflection_QueryGetTransactionByHashResponse_messageType struct{}

func (x fastReflection_QueryGetTransactionByHashResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByHashResponse)(nil)
}
func (x fastReflection_QueryGetTransactionByHashResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByHashResponse)
}
func (x fastReflection_QueryGetTransactionByHashResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByHashResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByHashResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByHashResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByHashResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByHashResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByHashResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByHashResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByHashResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByHashResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByHashResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetTransactionByHashResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByHashResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByHashResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByHashResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByHashResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByHashResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByHashResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByHashResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByHashResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByHashResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByHashResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByHashResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByHashResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByHashResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByHashResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWaitTransactionByHashRequest         protoreflect.MessageDescriptor
	fd_QueryGetWaitTransactionByHashRequest_header  protoreflect.FieldDescriptor
	fd_QueryGetWaitTransactionByHashRequest_txnHash protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetWaitTransactionByHashRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetWaitTransactionByHashRequest")
	fd_QueryGetWaitTransactionByHashRequest_header = md_QueryGetWaitTransactionByHashRequest.Fields().ByName("header")
	fd_QueryGetWaitTransactionByHashRequest_txnHash = md_QueryGetWaitTransactionByHashRequest.Fields().ByName("txnHash")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWaitTransactionByHashRequest)(nil)

type fastReflection_QueryGetWaitTransactionByHashRequest QueryGetWaitTransactionByHashRequest

func (x *QueryGetWaitTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWaitTransactionByHashRequest)(x)
}

func (x *QueryGetWaitTransactionByHashRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWaitTransactionByHashRequest_messageType fastReflection_QueryGetWaitTransactionByHashRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWaitTransactionByHashRequest_messageType{}

type fastReflection_QueryGetWaitTransactionByHashRequest_messageType struct{}

func (x fastReflection_QueryGetWaitTransactionByHashRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWaitTransactionByHashRequest)(nil)
}
func (x fastReflection_QueryGetWaitTransactionByHashRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWaitTransactionByHashRequest)
}
func (x fastReflection_QueryGetWaitTransactionByHashRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWaitTransactionByHashRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWaitTransactionByHashRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWaitTransactionByHashRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetWaitTransactionByHashRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWaitTransactionByHashRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetWaitTransactionByHashRequest_header, value) {
			return
		}
	}
	if x.TxnHash != "" {
		value := protoreflect.ValueOfString(x.TxnHash)
		if !f(fd_QueryGetWaitTransactionByHashRequest_txnHash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		return x.TxnHash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		x.TxnHash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		value := x.TxnHash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		x.TxnHash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		panic(fmt.Errorf("field txnHash of message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest.txnHash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWaitTransactionByHashRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxnHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxnHash) > 0 {
			i -= len(x.TxnHash)
			copy(dAtA[i:], x.TxnHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxnHash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWaitTransactionByHashRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWaitTransactionByHashRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxnHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxnHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWaitTransactionByHashResponse        protoreflect.MessageDescriptor
	fd_QueryGetWaitTransactionByHashResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetWaitTransactionByHashResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetWaitTransactionByHashResponse")
	fd_QueryGetWaitTransactionByHashResponse_aptRes = md_QueryGetWaitTransactionByHashResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWaitTransactionByHashResponse)(nil)

type fastReflection_QueryGetWaitTransactionByHashResponse QueryGetWaitTransactionByHashResponse

func (x *QueryGetWaitTransactionByHashResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWaitTransactionByHashResponse)(x)
}

func (x *QueryGetWaitTransactionByHashResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWaitTransactionByHashResponse_messageType fastReflection_QueryGetWaitTransactionByHashResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWaitTransactionByHashResponse_messageType{}

type fastReflection_QueryGetWaitTransactionByHashResponse_messageType struct{}

func (x fastReflection_QueryGetWaitTransactionByHashResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWaitTransactionByHashResponse)(nil)
}
func (x fastReflection_QueryGetWaitTransactionByHashResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWaitTransactionByHashResponse)
}
func (x fastReflection_QueryGetWaitTransactionByHashResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWaitTransactionByHashResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWaitTransactionByHashResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWaitTransactionByHashResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetWaitTransactionByHashResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWaitTransactionByHashResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetWaitTransactionByHashResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWaitTransactionByHashResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWaitTransactionByHashResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWaitTransactionByHashResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWaitTransactionByHashResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByVersionRequest            protoreflect.MessageDescriptor
	fd_QueryGetTransactionByVersionRequest_header     protoreflect.FieldDescriptor
	fd_QueryGetTransactionByVersionRequest_txnVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByVersionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByVersionRequest")
	fd_QueryGetTransactionByVersionRequest_header = md_QueryGetTransactionByVersionRequest.Fields().ByName("header")
	fd_QueryGetTransactionByVersionRequest_txnVersion = md_QueryGetTransactionByVersionRequest.Fields().ByName("txnVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByVersionRequest)(nil)

type fastReflection_QueryGetTransactionByVersionRequest QueryGetTransactionByVersionRequest

func (x *QueryGetTransactionByVersionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByVersionRequest)(x)
}

func (x *QueryGetTransactionByVersionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByVersionRequest_messageType fastReflection_QueryGetTransactionByVersionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByVersionRequest_messageType{}

type fastReflection_QueryGetTransactionByVersionRequest_messageType struct{}

func (x fastReflection_QueryGetTransactionByVersionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByVersionRequest)(nil)
}
func (x fastReflection_QueryGetTransactionByVersionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByVersionRequest)
}
func (x fastReflection_QueryGetTransactionByVersionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByVersionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByVersionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByVersionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByVersionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByVersionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByVersionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetTransactionByVersionRequest_header, value) {
			return
		}
	}
	if x.TxnVersion != "" {
		value := protoreflect.ValueOfString(x.TxnVersion)
		if !f(fd_QueryGetTransactionByVersionRequest_txnVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		return x.TxnVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		x.TxnVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		value := x.TxnVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		x.TxnVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetTransactionByVersionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		panic(fmt.Errorf("field txnVersion of message aptcaller.aptcaller.QueryGetTransactionByVersionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByVersionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTransactionByVersionRequest.txnVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByVersionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByVersionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByVersionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByVersionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByVersionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByVersionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxnVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByVersionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxnVersion) > 0 {
			i -= len(x.TxnVersion)
			copy(dAtA[i:], x.TxnVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxnVersion)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByVersionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByVersionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxnVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxnVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByVersionResponse        protoreflect.MessageDescriptor
	fd_QueryGetTransactionByVersionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByVersionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByVersionResponse")
	fd_QueryGetTransactionByVersionResponse_aptRes = md_QueryGetTransactionByVersionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByVersionResponse)(nil)

type fastReflection_QueryGetTransactionByVersionResponse QueryGetTransactionByVersionResponse

func (x *QueryGetTransactionByVersionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByVersionResponse)(x)
}

func (x *QueryGetTransactionByVersionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByVersionResponse_messageType fastReflection_QueryGetTransactionByVersionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByVersionResponse_messageType{}

type fastReflection_QueryGetTransactionByVersionResponse_messageType struct{}

func (x fastReflection_QueryGetTransactionByVersionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByVersionResponse)(nil)
}
func (x fastReflection_QueryGetTransactionByVersionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByVersionResponse)
}
func (x fastReflection_QueryGetTransactionByVersionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByVersionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByVersionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByVersionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByVersionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByVersionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByVersionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetTransactionByVersionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByVersionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByVersionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByVersionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByVersionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByVersionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByVersionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByVersionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByVersionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByVersionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByVersionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByVersionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByVersionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByVersionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountTransactionRequest         protoreflect.MessageDescriptor
	fd_QueryGetAccountTransactionRequest_header  protoreflect.FieldDescriptor
	fd_QueryGetAccountTransactionRequest_address protoreflect.FieldDescriptor
	fd_QueryGetAccountTransactionRequest_limit   protoreflect.FieldDescriptor
	fd_QueryGetAccountTransactionRequest_start   protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountTransactionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountTransactionRequest")
	fd_QueryGetAccountTransactionRequest_header = md_QueryGetAccountTransactionRequest.Fields().ByName("header")
	fd_QueryGetAccountTransactionRequest_address = md_QueryGetAccountTransactionRequest.Fields().ByName("address")
	fd_QueryGetAccountTransactionRequest_limit = md_QueryGetAccountTransactionRequest.Fields().ByName("limit")
	fd_QueryGetAccountTransactionRequest_start = md_QueryGetAccountTransactionRequest.Fields().ByName("start")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountTransactionRequest)(nil)

type fastReflection_QueryGetAccountTransactionRequest QueryGetAccountTransactionRequest

func (x *QueryGetAccountTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountTransactionRequest)(x)
}

func (x *QueryGetAccountTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountTransactionRequest_messageType fastReflection_QueryGetAccountTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountTransactionRequest_messageType{}

type fastReflection_QueryGetAccountTransactionRequest_messageType struct{}

func (x fastReflection_QueryGetAccountTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountTransactionRequest)(nil)
}
func (x fastReflection_QueryGetAccountTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountTransactionRequest)
}
func (x fastReflection_QueryGetAccountTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetAccountTransactionRequest_header, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_QueryGetAccountTransactionRequest_address, value) {
			return
		}
	}
	if x.Limit != "" {
		value := protoreflect.ValueOfString(x.Limit)
		if !f(fd_QueryGetAccountTransactionRequest_limit, value) {
			return
		}
	}
	if x.Start != "" {
		value := protoreflect.ValueOfString(x.Start)
		if !f(fd_QueryGetAccountTransactionRequest_start, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		return x.Address != ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		return x.Limit != ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		return x.Start != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		x.Address = ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		x.Limit = ""
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		x.Start = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		value := x.Limit
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		value := x.Start
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		x.Address = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		x.Limit = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		x.Start = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetAccountTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		panic(fmt.Errorf("field address of message aptcaller.aptcaller.QueryGetAccountTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		panic(fmt.Errorf("field limit of message aptcaller.aptcaller.QueryGetAccountTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		panic(fmt.Errorf("field start of message aptcaller.aptcaller.QueryGetAccountTransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.address":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.limit":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetAccountTransactionRequest.start":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Limit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Start)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Start) > 0 {
			i -= len(x.Start)
			copy(dAtA[i:], x.Start)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Start)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Limit) > 0 {
			i -= len(x.Limit)
			copy(dAtA[i:], x.Limit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Limit)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Limit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Start", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Start = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetAccountTransactionResponse        protoreflect.MessageDescriptor
	fd_QueryGetAccountTransactionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetAccountTransactionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetAccountTransactionResponse")
	fd_QueryGetAccountTransactionResponse_aptRes = md_QueryGetAccountTransactionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetAccountTransactionResponse)(nil)

type fastReflection_QueryGetAccountTransactionResponse QueryGetAccountTransactionResponse

func (x *QueryGetAccountTransactionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetAccountTransactionResponse)(x)
}

func (x *QueryGetAccountTransactionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetAccountTransactionResponse_messageType fastReflection_QueryGetAccountTransactionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetAccountTransactionResponse_messageType{}

type fastReflection_QueryGetAccountTransactionResponse_messageType struct{}

func (x fastReflection_QueryGetAccountTransactionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetAccountTransactionResponse)(nil)
}
func (x fastReflection_QueryGetAccountTransactionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountTransactionResponse)
}
func (x fastReflection_QueryGetAccountTransactionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountTransactionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetAccountTransactionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetAccountTransactionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetAccountTransactionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetAccountTransactionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetAccountTransactionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetAccountTransactionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetAccountTransactionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetAccountTransactionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetAccountTransactionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetAccountTransactionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetAccountTransactionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetAccountTransactionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetAccountTransactionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetAccountTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetAccountTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetAccountTransactionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetAccountTransactionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetAccountTransactionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetAccountTransactionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetAccountTransactionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetAccountTransactionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetAccountTransactionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountTransactionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetAccountTransactionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountTransactionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetAccountTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEstimateGasPriceRequest        protoreflect.MessageDescriptor
	fd_QueryEstimateGasPriceRequest_header protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryEstimateGasPriceRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryEstimateGasPriceRequest")
	fd_QueryEstimateGasPriceRequest_header = md_QueryEstimateGasPriceRequest.Fields().ByName("header")
}

var _ protoreflect.Message = (*fastReflection_QueryEstimateGasPriceRequest)(nil)

type fastReflection_QueryEstimateGasPriceRequest QueryEstimateGasPriceRequest

func (x *QueryEstimateGasPriceRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEstimateGasPriceRequest)(x)
}

func (x *QueryEstimateGasPriceRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEstimateGasPriceRequest_messageType fastReflection_QueryEstimateGasPriceRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEstimateGasPriceRequest_messageType{}

type fastReflection_QueryEstimateGasPriceRequest_messageType struct{}

func (x fastReflection_QueryEstimateGasPriceRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEstimateGasPriceRequest)(nil)
}
func (x fastReflection_QueryEstimateGasPriceRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEstimateGasPriceRequest)
}
func (x fastReflection_QueryEstimateGasPriceRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEstimateGasPriceRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEstimateGasPriceRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEstimateGasPriceRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEstimateGasPriceRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEstimateGasPriceRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEstimateGasPriceRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEstimateGasPriceRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEstimateGasPriceRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEstimateGasPriceRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEstimateGasPriceRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryEstimateGasPriceRequest_header, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEstimateGasPriceRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		return x.Header != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		x.Header = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEstimateGasPriceRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		x.Header = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryEstimateGasPriceRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEstimateGasPriceRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceRequest.header":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEstimateGasPriceRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryEstimateGasPriceRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEstimateGasPriceRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEstimateGasPriceRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEstimateGasPriceRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEstimateGasPriceRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEstimateGasPriceRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEstimateGasPriceRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEstimateGasPriceRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEstimateGasPriceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEstimateGasPriceResponse        protoreflect.MessageDescriptor
	fd_QueryEstimateGasPriceResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryEstimateGasPriceResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryEstimateGasPriceResponse")
	fd_QueryEstimateGasPriceResponse_aptRes = md_QueryEstimateGasPriceResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryEstimateGasPriceResponse)(nil)

type fastReflection_QueryEstimateGasPriceResponse QueryEstimateGasPriceResponse

func (x *QueryEstimateGasPriceResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEstimateGasPriceResponse)(x)
}

func (x *QueryEstimateGasPriceResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEstimateGasPriceResponse_messageType fastReflection_QueryEstimateGasPriceResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEstimateGasPriceResponse_messageType{}

type fastReflection_QueryEstimateGasPriceResponse_messageType struct{}

func (x fastReflection_QueryEstimateGasPriceResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEstimateGasPriceResponse)(nil)
}
func (x fastReflection_QueryEstimateGasPriceResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEstimateGasPriceResponse)
}
func (x fastReflection_QueryEstimateGasPriceResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEstimateGasPriceResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEstimateGasPriceResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEstimateGasPriceResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEstimateGasPriceResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEstimateGasPriceResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEstimateGasPriceResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEstimateGasPriceResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEstimateGasPriceResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEstimateGasPriceResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEstimateGasPriceResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryEstimateGasPriceResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEstimateGasPriceResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEstimateGasPriceResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEstimateGasPriceResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEstimateGasPriceResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEstimateGasPriceResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEstimateGasPriceResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryEstimateGasPriceResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEstimateGasPriceResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEstimateGasPriceResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEstimateGasPriceResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEstimateGasPriceResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEstimateGasPriceResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEstimateGasPriceResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEstimateGasPriceResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEstimateGasPriceResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEstimateGasPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QuerySubmitBatchTransactionRequest        protoreflect.MessageDescriptor
	fd_QuerySubmitBatchTransactionRequest_header protoreflect.FieldDescriptor
	fd_QuerySubmitBatchTransactionRequest_body   protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QuerySubmitBatchTransactionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QuerySubmitBatchTransactionRequest")
	fd_QuerySubmitBatchTransactionRequest_header = md_QuerySubmitBatchTransactionRequest.Fields().ByName("header")
	fd_QuerySubmitBatchTransactionRequest_body = md_QuerySubmitBatchTransactionRequest.Fields().ByName("body")
}

var _ protoreflect.Message = (*fastReflection_QuerySubmitBatchTransactionRequest)(nil)

type fastReflection_QuerySubmitBatchTransactionRequest QuerySubmitBatchTransactionRequest

func (x *QuerySubmitBatchTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QuerySubmitBatchTransactionRequest)(x)
}

func (x *QuerySubmitBatchTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QuerySubmitBatchTransactionRequest_messageType fastReflection_QuerySubmitBatchTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QuerySubmitBatchTransactionRequest_messageType{}

type fastReflection_QuerySubmitBatchTransactionRequest_messageType struct{}

func (x fastReflection_QuerySubmitBatchTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QuerySubmitBatchTransactionRequest)(nil)
}
func (x fastReflection_QuerySubmitBatchTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QuerySubmitBatchTransactionRequest)
}
func (x fastReflection_QuerySubmitBatchTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySubmitBatchTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySubmitBatchTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QuerySubmitBatchTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_QuerySubmitBatchTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*QuerySubmitBatchTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QuerySubmitBatchTransactionRequest_header, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QuerySubmitBatchTransactionRequest_body, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		return x.Body != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		x.Body = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		x.Body = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionRequest.body":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QuerySubmitBatchTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QuerySubmitBatchTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySubmitBatchTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySubmitBatchTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QuerySubmitBatchTransactionResponse        protoreflect.MessageDescriptor
	fd_QuerySubmitBatchTransactionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QuerySubmitBatchTransactionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QuerySubmitBatchTransactionResponse")
	fd_QuerySubmitBatchTransactionResponse_aptRes = md_QuerySubmitBatchTransactionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QuerySubmitBatchTransactionResponse)(nil)

type fastReflection_QuerySubmitBatchTransactionResponse QuerySubmitBatchTransactionResponse

func (x *QuerySubmitBatchTransactionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QuerySubmitBatchTransactionResponse)(x)
}

func (x *QuerySubmitBatchTransactionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QuerySubmitBatchTransactionResponse_messageType fastReflection_QuerySubmitBatchTransactionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QuerySubmitBatchTransactionResponse_messageType{}

type fastReflection_QuerySubmitBatchTransactionResponse_messageType struct{}

func (x fastReflection_QuerySubmitBatchTransactionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QuerySubmitBatchTransactionResponse)(nil)
}
func (x fastReflection_QuerySubmitBatchTransactionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QuerySubmitBatchTransactionResponse)
}
func (x fastReflection_QuerySubmitBatchTransactionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySubmitBatchTransactionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySubmitBatchTransactionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QuerySubmitBatchTransactionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) New() protoreflect.Message {
	return new(fastReflection_QuerySubmitBatchTransactionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Interface() protoreflect.ProtoMessage {
	return (*QuerySubmitBatchTransactionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QuerySubmitBatchTransactionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySubmitBatchTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QuerySubmitBatchTransactionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QuerySubmitBatchTransactionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QuerySubmitBatchTransactionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySubmitBatchTransactionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySubmitBatchTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QuerySimulateTransactionRequest                         protoreflect.MessageDescriptor
	fd_QuerySimulateTransactionRequest_header                  protoreflect.FieldDescriptor
	fd_QuerySimulateTransactionRequest_body                    protoreflect.FieldDescriptor
	fd_QuerySimulateTransactionRequest_gasUnitPrice            protoreflect.FieldDescriptor
	fd_QuerySimulateTransactionRequest_maxGasAmount            protoreflect.FieldDescriptor
	fd_QuerySimulateTransactionRequest_prioritizedGasUnitPrice protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QuerySimulateTransactionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QuerySimulateTransactionRequest")
	fd_QuerySimulateTransactionRequest_header = md_QuerySimulateTransactionRequest.Fields().ByName("header")
	fd_QuerySimulateTransactionRequest_body = md_QuerySimulateTransactionRequest.Fields().ByName("body")
	fd_QuerySimulateTransactionRequest_gasUnitPrice = md_QuerySimulateTransactionRequest.Fields().ByName("gasUnitPrice")
	fd_QuerySimulateTransactionRequest_maxGasAmount = md_QuerySimulateTransactionRequest.Fields().ByName("maxGasAmount")
	fd_QuerySimulateTransactionRequest_prioritizedGasUnitPrice = md_QuerySimulateTransactionRequest.Fields().ByName("prioritizedGasUnitPrice")
}

var _ protoreflect.Message = (*fastReflection_QuerySimulateTransactionRequest)(nil)

type fastReflection_QuerySimulateTransactionRequest QuerySimulateTransactionRequest

func (x *QuerySimulateTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QuerySimulateTransactionRequest)(x)
}

func (x *QuerySimulateTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QuerySimulateTransactionRequest_messageType fastReflection_QuerySimulateTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QuerySimulateTransactionRequest_messageType{}

type fastReflection_QuerySimulateTransactionRequest_messageType struct{}

func (x fastReflection_QuerySimulateTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QuerySimulateTransactionRequest)(nil)
}
func (x fastReflection_QuerySimulateTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QuerySimulateTransactionRequest)
}
func (x fastReflection_QuerySimulateTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySimulateTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QuerySimulateTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySimulateTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QuerySimulateTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QuerySimulateTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QuerySimulateTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_QuerySimulateTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QuerySimulateTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*QuerySimulateTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QuerySimulateTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QuerySimulateTransactionRequest_header, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QuerySimulateTransactionRequest_body, value) {
			return
		}
	}
	if x.GasUnitPrice != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GasUnitPrice)
		if !f(fd_QuerySimulateTransactionRequest_gasUnitPrice, value) {
			return
		}
	}
	if x.MaxGasAmount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxGasAmount)
		if !f(fd_QuerySimulateTransactionRequest_maxGasAmount, value) {
			return
		}
	}
	if x.PrioritizedGasUnitPrice != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PrioritizedGasUnitPrice)
		if !f(fd_QuerySimulateTransactionRequest_prioritizedGasUnitPrice, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QuerySimulateTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		return x.Body != ""
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		return x.GasUnitPrice != uint64(0)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		return x.MaxGasAmount != uint64(0)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		return x.PrioritizedGasUnitPrice != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		x.Body = ""
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		x.GasUnitPrice = uint64(0)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		x.MaxGasAmount = uint64(0)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		x.PrioritizedGasUnitPrice = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QuerySimulateTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		value := x.GasUnitPrice
		return protoreflect.ValueOfUint64(value)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		value := x.MaxGasAmount
		return protoreflect.ValueOfUint64(value)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		value := x.PrioritizedGasUnitPrice
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		x.Body = value.Interface().(string)
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		x.GasUnitPrice = value.Uint()
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		x.MaxGasAmount = value.Uint()
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		x.PrioritizedGasUnitPrice = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QuerySimulateTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QuerySimulateTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		panic(fmt.Errorf("field gasUnitPrice of message aptcaller.aptcaller.QuerySimulateTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		panic(fmt.Errorf("field maxGasAmount of message aptcaller.aptcaller.QuerySimulateTransactionRequest is not mutable"))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		panic(fmt.Errorf("field prioritizedGasUnitPrice of message aptcaller.aptcaller.QuerySimulateTransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QuerySimulateTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.body":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.gasUnitPrice":
		return protoreflect.ValueOfUint64(uint64(0))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.maxGasAmount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "aptcaller.aptcaller.QuerySimulateTransactionRequest.prioritizedGasUnitPrice":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QuerySimulateTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QuerySimulateTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QuerySimulateTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QuerySimulateTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QuerySimulateTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QuerySimulateTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.GasUnitPrice != 0 {
			n += 1 + runtime.Sov(uint64(x.GasUnitPrice))
		}
		if x.MaxGasAmount != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxGasAmount))
		}
		if x.PrioritizedGasUnitPrice != 0 {
			n += 1 + runtime.Sov(uint64(x.PrioritizedGasUnitPrice))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QuerySimulateTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.PrioritizedGasUnitPrice != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PrioritizedGasUnitPrice))
			i--
			dAtA[i] = 0x28
		}
		if x.MaxGasAmount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxGasAmount))
			i--
			dAtA[i] = 0x20
		}
		if x.GasUnitPrice != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GasUnitPrice))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QuerySimulateTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySimulateTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySimulateTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasUnitPrice", wireType)
				}
				x.GasUnitPrice = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GasUnitPrice |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxGasAmount", wireType)
				}
				x.MaxGasAmount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxGasAmount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrioritizedGasUnitPrice", wireType)
				}
				x.PrioritizedGasUnitPrice = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PrioritizedGasUnitPrice |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QuerySimulateTransactionResponse        protoreflect.MessageDescriptor
	fd_QuerySimulateTransactionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QuerySimulateTransactionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QuerySimulateTransactionResponse")
	fd_QuerySimulateTransactionResponse_aptRes = md_QuerySimulateTransactionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QuerySimulateTransactionResponse)(nil)

type fastReflection_QuerySimulateTransactionResponse QuerySimulateTransactionResponse

func (x *QuerySimulateTransactionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QuerySimulateTransactionResponse)(x)
}

func (x *QuerySimulateTransactionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QuerySimulateTransactionResponse_messageType fastReflection_QuerySimulateTransactionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QuerySimulateTransactionResponse_messageType{}

type fastReflection_QuerySimulateTransactionResponse_messageType struct{}

func (x fastReflection_QuerySimulateTransactionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QuerySimulateTransactionResponse)(nil)
}
func (x fastReflection_QuerySimulateTransactionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QuerySimulateTransactionResponse)
}
func (x fastReflection_QuerySimulateTransactionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySimulateTransactionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QuerySimulateTransactionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QuerySimulateTransactionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QuerySimulateTransactionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QuerySimulateTransactionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QuerySimulateTransactionResponse) New() protoreflect.Message {
	return new(fastReflection_QuerySimulateTransactionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QuerySimulateTransactionResponse) Interface() protoreflect.ProtoMessage {
	return (*QuerySimulateTransactionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QuerySimulateTransactionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QuerySimulateTransactionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QuerySimulateTransactionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QuerySimulateTransactionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QuerySimulateTransactionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QuerySimulateTransactionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QuerySimulateTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QuerySimulateTransactionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QuerySimulateTransactionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QuerySimulateTransactionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QuerySimulateTransactionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QuerySimulateTransactionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QuerySimulateTransactionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QuerySimulateTransactionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QuerySimulateTransactionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QuerySimulateTransactionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySimulateTransactionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QuerySimulateTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEncodeSubmissionRequest        protoreflect.MessageDescriptor
	fd_QueryEncodeSubmissionRequest_header protoreflect.FieldDescriptor
	fd_QueryEncodeSubmissionRequest_body   protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryEncodeSubmissionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryEncodeSubmissionRequest")
	fd_QueryEncodeSubmissionRequest_header = md_QueryEncodeSubmissionRequest.Fields().ByName("header")
	fd_QueryEncodeSubmissionRequest_body = md_QueryEncodeSubmissionRequest.Fields().ByName("body")
}

var _ protoreflect.Message = (*fastReflection_QueryEncodeSubmissionRequest)(nil)

type fastReflection_QueryEncodeSubmissionRequest QueryEncodeSubmissionRequest

func (x *QueryEncodeSubmissionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEncodeSubmissionRequest)(x)
}

func (x *QueryEncodeSubmissionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEncodeSubmissionRequest_messageType fastReflection_QueryEncodeSubmissionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEncodeSubmissionRequest_messageType{}

type fastReflection_QueryEncodeSubmissionRequest_messageType struct{}

func (x fastReflection_QueryEncodeSubmissionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEncodeSubmissionRequest)(nil)
}
func (x fastReflection_QueryEncodeSubmissionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEncodeSubmissionRequest)
}
func (x fastReflection_QueryEncodeSubmissionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEncodeSubmissionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEncodeSubmissionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEncodeSubmissionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEncodeSubmissionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEncodeSubmissionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEncodeSubmissionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEncodeSubmissionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEncodeSubmissionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEncodeSubmissionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEncodeSubmissionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryEncodeSubmissionRequest_header, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QueryEncodeSubmissionRequest_body, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEncodeSubmissionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		return x.Body != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		x.Body = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEncodeSubmissionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		x.Body = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryEncodeSubmissionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QueryEncodeSubmissionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEncodeSubmissionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryEncodeSubmissionRequest.body":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEncodeSubmissionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryEncodeSubmissionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEncodeSubmissionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEncodeSubmissionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEncodeSubmissionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEncodeSubmissionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEncodeSubmissionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEncodeSubmissionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEncodeSubmissionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEncodeSubmissionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEncodeSubmissionResponse        protoreflect.MessageDescriptor
	fd_QueryEncodeSubmissionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryEncodeSubmissionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryEncodeSubmissionResponse")
	fd_QueryEncodeSubmissionResponse_aptRes = md_QueryEncodeSubmissionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryEncodeSubmissionResponse)(nil)

type fastReflection_QueryEncodeSubmissionResponse QueryEncodeSubmissionResponse

func (x *QueryEncodeSubmissionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEncodeSubmissionResponse)(x)
}

func (x *QueryEncodeSubmissionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEncodeSubmissionResponse_messageType fastReflection_QueryEncodeSubmissionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEncodeSubmissionResponse_messageType{}

type fastReflection_QueryEncodeSubmissionResponse_messageType struct{}

func (x fastReflection_QueryEncodeSubmissionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEncodeSubmissionResponse)(nil)
}
func (x fastReflection_QueryEncodeSubmissionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEncodeSubmissionResponse)
}
func (x fastReflection_QueryEncodeSubmissionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEncodeSubmissionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEncodeSubmissionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEncodeSubmissionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEncodeSubmissionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEncodeSubmissionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEncodeSubmissionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEncodeSubmissionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEncodeSubmissionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEncodeSubmissionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEncodeSubmissionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryEncodeSubmissionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEncodeSubmissionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEncodeSubmissionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEncodeSubmissionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryEncodeSubmissionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryEncodeSubmissionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEncodeSubmissionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryEncodeSubmissionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEncodeSubmissionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEncodeSubmissionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEncodeSubmissionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEncodeSubmissionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEncodeSubmissionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEncodeSubmissionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEncodeSubmissionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEncodeSubmissionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEncodeSubmissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByCountRequest       protoreflect.MessageDescriptor
	fd_QueryGetTransactionByCountRequest_count protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByCountRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByCountRequest")
	fd_QueryGetTransactionByCountRequest_count = md_QueryGetTransactionByCountRequest.Fields().ByName("count")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByCountRequest)(nil)

type fastReflection_QueryGetTransactionByCountRequest QueryGetTransactionByCountRequest

func (x *QueryGetTransactionByCountRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByCountRequest)(x)
}

func (x *QueryGetTransactionByCountRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByCountRequest_messageType fastReflection_QueryGetTransactionByCountRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByCountRequest_messageType{}

type fastReflection_QueryGetTransactionByCountRequest_messageType struct{}

func (x fastReflection_QueryGetTransactionByCountRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByCountRequest)(nil)
}
func (x fastReflection_QueryGetTransactionByCountRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByCountRequest)
}
func (x fastReflection_QueryGetTransactionByCountRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByCountRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByCountRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByCountRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByCountRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByCountRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByCountRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByCountRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByCountRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByCountRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByCountRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Count != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Count)
		if !f(fd_QueryGetTransactionByCountRequest_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByCountRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		return x.Count != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		x.Count = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByCountRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		value := x.Count
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		x.Count = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		panic(fmt.Errorf("field count of message aptcaller.aptcaller.QueryGetTransactionByCountRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByCountRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountRequest.count":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByCountRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByCountRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByCountRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByCountRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByCountRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByCountRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Count != 0 {
			n += 1 + runtime.Sov(uint64(x.Count))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByCountRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Count != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Count))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByCountRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByCountRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByCountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
				}
				x.Count = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Count |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTransactionByCountResponse        protoreflect.MessageDescriptor
	fd_QueryGetTransactionByCountResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTransactionByCountResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTransactionByCountResponse")
	fd_QueryGetTransactionByCountResponse_aptRes = md_QueryGetTransactionByCountResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTransactionByCountResponse)(nil)

type fastReflection_QueryGetTransactionByCountResponse QueryGetTransactionByCountResponse

func (x *QueryGetTransactionByCountResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByCountResponse)(x)
}

func (x *QueryGetTransactionByCountResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTransactionByCountResponse_messageType fastReflection_QueryGetTransactionByCountResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTransactionByCountResponse_messageType{}

type fastReflection_QueryGetTransactionByCountResponse_messageType struct{}

func (x fastReflection_QueryGetTransactionByCountResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTransactionByCountResponse)(nil)
}
func (x fastReflection_QueryGetTransactionByCountResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByCountResponse)
}
func (x fastReflection_QueryGetTransactionByCountResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByCountResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTransactionByCountResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTransactionByCountResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTransactionByCountResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTransactionByCountResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTransactionByCountResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTransactionByCountResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTransactionByCountResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTransactionByCountResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTransactionByCountResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetTransactionByCountResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTransactionByCountResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTransactionByCountResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTransactionByCountResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTransactionByCountResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTransactionByCountResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTransactionByCountResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTransactionByCountResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTransactionByCountResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTransactionByCountResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTransactionByCountResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTransactionByCountResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTransactionByCountResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByCountResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTransactionByCountResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByCountResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTransactionByCountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryViewFunctionRequest               protoreflect.MessageDescriptor
	fd_QueryViewFunctionRequest_header        protoreflect.FieldDescriptor
	fd_QueryViewFunctionRequest_body          protoreflect.FieldDescriptor
	fd_QueryViewFunctionRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryViewFunctionRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryViewFunctionRequest")
	fd_QueryViewFunctionRequest_header = md_QueryViewFunctionRequest.Fields().ByName("header")
	fd_QueryViewFunctionRequest_body = md_QueryViewFunctionRequest.Fields().ByName("body")
	fd_QueryViewFunctionRequest_ledgerVersion = md_QueryViewFunctionRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryViewFunctionRequest)(nil)

type fastReflection_QueryViewFunctionRequest QueryViewFunctionRequest

func (x *QueryViewFunctionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryViewFunctionRequest)(x)
}

func (x *QueryViewFunctionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryViewFunctionRequest_messageType fastReflection_QueryViewFunctionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryViewFunctionRequest_messageType{}

type fastReflection_QueryViewFunctionRequest_messageType struct{}

func (x fastReflection_QueryViewFunctionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryViewFunctionRequest)(nil)
}
func (x fastReflection_QueryViewFunctionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryViewFunctionRequest)
}
func (x fastReflection_QueryViewFunctionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryViewFunctionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryViewFunctionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryViewFunctionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryViewFunctionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryViewFunctionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryViewFunctionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryViewFunctionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryViewFunctionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryViewFunctionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryViewFunctionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryViewFunctionRequest_header, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QueryViewFunctionRequest_body, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryViewFunctionRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryViewFunctionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		return x.Body != ""
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		x.Body = ""
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryViewFunctionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		x.Body = value.Interface().(string)
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryViewFunctionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QueryViewFunctionRequest is not mutable"))
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryViewFunctionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryViewFunctionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryViewFunctionRequest.body":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryViewFunctionRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryViewFunctionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryViewFunctionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryViewFunctionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryViewFunctionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryViewFunctionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryViewFunctionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryViewFunctionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryViewFunctionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryViewFunctionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryViewFunctionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryViewFunctionResponse        protoreflect.MessageDescriptor
	fd_QueryViewFunctionResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryViewFunctionResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryViewFunctionResponse")
	fd_QueryViewFunctionResponse_aptRes = md_QueryViewFunctionResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryViewFunctionResponse)(nil)

type fastReflection_QueryViewFunctionResponse QueryViewFunctionResponse

func (x *QueryViewFunctionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryViewFunctionResponse)(x)
}

func (x *QueryViewFunctionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryViewFunctionResponse_messageType fastReflection_QueryViewFunctionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryViewFunctionResponse_messageType{}

type fastReflection_QueryViewFunctionResponse_messageType struct{}

func (x fastReflection_QueryViewFunctionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryViewFunctionResponse)(nil)
}
func (x fastReflection_QueryViewFunctionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryViewFunctionResponse)
}
func (x fastReflection_QueryViewFunctionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryViewFunctionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryViewFunctionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryViewFunctionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryViewFunctionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryViewFunctionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryViewFunctionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryViewFunctionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryViewFunctionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryViewFunctionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryViewFunctionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryViewFunctionResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryViewFunctionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryViewFunctionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryViewFunctionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryViewFunctionResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryViewFunctionResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryViewFunctionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryViewFunctionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryViewFunctionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryViewFunctionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryViewFunctionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryViewFunctionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryViewFunctionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryViewFunctionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryViewFunctionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryViewFunctionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryViewFunctionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryViewFunctionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTableItemRequest               protoreflect.MessageDescriptor
	fd_QueryGetTableItemRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetTableItemRequest_tableHandle   protoreflect.FieldDescriptor
	fd_QueryGetTableItemRequest_body          protoreflect.FieldDescriptor
	fd_QueryGetTableItemRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTableItemRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTableItemRequest")
	fd_QueryGetTableItemRequest_header = md_QueryGetTableItemRequest.Fields().ByName("header")
	fd_QueryGetTableItemRequest_tableHandle = md_QueryGetTableItemRequest.Fields().ByName("tableHandle")
	fd_QueryGetTableItemRequest_body = md_QueryGetTableItemRequest.Fields().ByName("body")
	fd_QueryGetTableItemRequest_ledgerVersion = md_QueryGetTableItemRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTableItemRequest)(nil)

type fastReflection_QueryGetTableItemRequest QueryGetTableItemRequest

func (x *QueryGetTableItemRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTableItemRequest)(x)
}

func (x *QueryGetTableItemRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTableItemRequest_messageType fastReflection_QueryGetTableItemRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTableItemRequest_messageType{}

type fastReflection_QueryGetTableItemRequest_messageType struct{}

func (x fastReflection_QueryGetTableItemRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTableItemRequest)(nil)
}
func (x fastReflection_QueryGetTableItemRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTableItemRequest)
}
func (x fastReflection_QueryGetTableItemRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTableItemRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTableItemRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTableItemRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTableItemRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTableItemRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTableItemRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetTableItemRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTableItemRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTableItemRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTableItemRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetTableItemRequest_header, value) {
			return
		}
	}
	if x.TableHandle != "" {
		value := protoreflect.ValueOfString(x.TableHandle)
		if !f(fd_QueryGetTableItemRequest_tableHandle, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QueryGetTableItemRequest_body, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetTableItemRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTableItemRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		return x.TableHandle != ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		return x.Body != ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		x.TableHandle = ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		x.Body = ""
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTableItemRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		value := x.TableHandle
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		x.TableHandle = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		x.Body = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		panic(fmt.Errorf("field tableHandle of message aptcaller.aptcaller.QueryGetTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QueryGetTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetTableItemRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTableItemRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTableItemRequest.tableHandle":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTableItemRequest.body":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetTableItemRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTableItemRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTableItemRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTableItemRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTableItemRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTableItemRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTableItemRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TableHandle)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTableItemRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TableHandle) > 0 {
			i -= len(x.TableHandle)
			copy(dAtA[i:], x.TableHandle)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TableHandle)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTableItemRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTableItemRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTableItemRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TableHandle", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TableHandle = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetTableItemResponse        protoreflect.MessageDescriptor
	fd_QueryGetTableItemResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetTableItemResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetTableItemResponse")
	fd_QueryGetTableItemResponse_aptRes = md_QueryGetTableItemResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetTableItemResponse)(nil)

type fastReflection_QueryGetTableItemResponse QueryGetTableItemResponse

func (x *QueryGetTableItemResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetTableItemResponse)(x)
}

func (x *QueryGetTableItemResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetTableItemResponse_messageType fastReflection_QueryGetTableItemResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetTableItemResponse_messageType{}

type fastReflection_QueryGetTableItemResponse_messageType struct{}

func (x fastReflection_QueryGetTableItemResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetTableItemResponse)(nil)
}
func (x fastReflection_QueryGetTableItemResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetTableItemResponse)
}
func (x fastReflection_QueryGetTableItemResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTableItemResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetTableItemResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetTableItemResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetTableItemResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetTableItemResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetTableItemResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetTableItemResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetTableItemResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetTableItemResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetTableItemResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetTableItemResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetTableItemResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetTableItemResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetTableItemResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetTableItemResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetTableItemResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetTableItemResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetTableItemResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetTableItemResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetTableItemResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetTableItemResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetTableItemResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTableItemResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetTableItemResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTableItemResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetTableItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetRawTableItemRequest               protoreflect.MessageDescriptor
	fd_QueryGetRawTableItemRequest_header        protoreflect.FieldDescriptor
	fd_QueryGetRawTableItemRequest_tableHandle   protoreflect.FieldDescriptor
	fd_QueryGetRawTableItemRequest_body          protoreflect.FieldDescriptor
	fd_QueryGetRawTableItemRequest_ledgerVersion protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetRawTableItemRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetRawTableItemRequest")
	fd_QueryGetRawTableItemRequest_header = md_QueryGetRawTableItemRequest.Fields().ByName("header")
	fd_QueryGetRawTableItemRequest_tableHandle = md_QueryGetRawTableItemRequest.Fields().ByName("tableHandle")
	fd_QueryGetRawTableItemRequest_body = md_QueryGetRawTableItemRequest.Fields().ByName("body")
	fd_QueryGetRawTableItemRequest_ledgerVersion = md_QueryGetRawTableItemRequest.Fields().ByName("ledgerVersion")
}

var _ protoreflect.Message = (*fastReflection_QueryGetRawTableItemRequest)(nil)

type fastReflection_QueryGetRawTableItemRequest QueryGetRawTableItemRequest

func (x *QueryGetRawTableItemRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetRawTableItemRequest)(x)
}

func (x *QueryGetRawTableItemRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetRawTableItemRequest_messageType fastReflection_QueryGetRawTableItemRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetRawTableItemRequest_messageType{}

type fastReflection_QueryGetRawTableItemRequest_messageType struct{}

func (x fastReflection_QueryGetRawTableItemRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetRawTableItemRequest)(nil)
}
func (x fastReflection_QueryGetRawTableItemRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetRawTableItemRequest)
}
func (x fastReflection_QueryGetRawTableItemRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRawTableItemRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetRawTableItemRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRawTableItemRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetRawTableItemRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetRawTableItemRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetRawTableItemRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetRawTableItemRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetRawTableItemRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetRawTableItemRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetRawTableItemRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Header != "" {
		value := protoreflect.ValueOfString(x.Header)
		if !f(fd_QueryGetRawTableItemRequest_header, value) {
			return
		}
	}
	if x.TableHandle != "" {
		value := protoreflect.ValueOfString(x.TableHandle)
		if !f(fd_QueryGetRawTableItemRequest_tableHandle, value) {
			return
		}
	}
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QueryGetRawTableItemRequest_body, value) {
			return
		}
	}
	if x.LedgerVersion != "" {
		value := protoreflect.ValueOfString(x.LedgerVersion)
		if !f(fd_QueryGetRawTableItemRequest_ledgerVersion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetRawTableItemRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		return x.Header != ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		return x.TableHandle != ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		return x.Body != ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		return x.LedgerVersion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		x.Header = ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		x.TableHandle = ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		x.Body = ""
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		x.LedgerVersion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetRawTableItemRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		value := x.Header
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		value := x.TableHandle
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		value := x.LedgerVersion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		x.Header = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		x.TableHandle = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		x.Body = value.Interface().(string)
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		x.LedgerVersion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		panic(fmt.Errorf("field header of message aptcaller.aptcaller.QueryGetRawTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		panic(fmt.Errorf("field tableHandle of message aptcaller.aptcaller.QueryGetRawTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QueryGetRawTableItemRequest is not mutable"))
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		panic(fmt.Errorf("field ledgerVersion of message aptcaller.aptcaller.QueryGetRawTableItemRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetRawTableItemRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.header":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.tableHandle":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.body":
		return protoreflect.ValueOfString("")
	case "aptcaller.aptcaller.QueryGetRawTableItemRequest.ledgerVersion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetRawTableItemRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetRawTableItemRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetRawTableItemRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetRawTableItemRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetRawTableItemRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetRawTableItemRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Header)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TableHandle)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LedgerVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRawTableItemRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LedgerVersion) > 0 {
			i -= len(x.LedgerVersion)
			copy(dAtA[i:], x.LedgerVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LedgerVersion)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TableHandle) > 0 {
			i -= len(x.TableHandle)
			copy(dAtA[i:], x.TableHandle)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TableHandle)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Header) > 0 {
			i -= len(x.Header)
			copy(dAtA[i:], x.Header)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Header)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRawTableItemRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRawTableItemRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRawTableItemRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Header = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TableHandle", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TableHandle = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LedgerVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LedgerVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetRawTableItemResponse        protoreflect.MessageDescriptor
	fd_QueryGetRawTableItemResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryGetRawTableItemResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryGetRawTableItemResponse")
	fd_QueryGetRawTableItemResponse_aptRes = md_QueryGetRawTableItemResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryGetRawTableItemResponse)(nil)

type fastReflection_QueryGetRawTableItemResponse QueryGetRawTableItemResponse

func (x *QueryGetRawTableItemResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetRawTableItemResponse)(x)
}

func (x *QueryGetRawTableItemResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetRawTableItemResponse_messageType fastReflection_QueryGetRawTableItemResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetRawTableItemResponse_messageType{}

type fastReflection_QueryGetRawTableItemResponse_messageType struct{}

func (x fastReflection_QueryGetRawTableItemResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetRawTableItemResponse)(nil)
}
func (x fastReflection_QueryGetRawTableItemResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetRawTableItemResponse)
}
func (x fastReflection_QueryGetRawTableItemResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRawTableItemResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetRawTableItemResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRawTableItemResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetRawTableItemResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetRawTableItemResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetRawTableItemResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetRawTableItemResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetRawTableItemResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetRawTableItemResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetRawTableItemResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryGetRawTableItemResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetRawTableItemResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetRawTableItemResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetRawTableItemResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryGetRawTableItemResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryGetRawTableItemResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetRawTableItemResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryGetRawTableItemResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetRawTableItemResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRawTableItemResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetRawTableItemResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetRawTableItemResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetRawTableItemResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRawTableItemResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRawTableItemResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRawTableItemResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRawTableItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAptosIndexerRequest      protoreflect.MessageDescriptor
	fd_QueryAptosIndexerRequest_body protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryAptosIndexerRequest = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryAptosIndexerRequest")
	fd_QueryAptosIndexerRequest_body = md_QueryAptosIndexerRequest.Fields().ByName("body")
}

var _ protoreflect.Message = (*fastReflection_QueryAptosIndexerRequest)(nil)

type fastReflection_QueryAptosIndexerRequest QueryAptosIndexerRequest

func (x *QueryAptosIndexerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAptosIndexerRequest)(x)
}

func (x *QueryAptosIndexerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAptosIndexerRequest_messageType fastReflection_QueryAptosIndexerRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAptosIndexerRequest_messageType{}

type fastReflection_QueryAptosIndexerRequest_messageType struct{}

func (x fastReflection_QueryAptosIndexerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAptosIndexerRequest)(nil)
}
func (x fastReflection_QueryAptosIndexerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAptosIndexerRequest)
}
func (x fastReflection_QueryAptosIndexerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAptosIndexerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAptosIndexerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAptosIndexerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAptosIndexerRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAptosIndexerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAptosIndexerRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAptosIndexerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAptosIndexerRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAptosIndexerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAptosIndexerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Body != "" {
		value := protoreflect.ValueOfString(x.Body)
		if !f(fd_QueryAptosIndexerRequest_body, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAptosIndexerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		return x.Body != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		x.Body = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAptosIndexerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		value := x.Body
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		x.Body = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		panic(fmt.Errorf("field body of message aptcaller.aptcaller.QueryAptosIndexerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAptosIndexerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerRequest.body":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerRequest"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAptosIndexerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryAptosIndexerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAptosIndexerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAptosIndexerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAptosIndexerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAptosIndexerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Body)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAptosIndexerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Body) > 0 {
			i -= len(x.Body)
			copy(dAtA[i:], x.Body)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Body)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAptosIndexerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAptosIndexerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAptosIndexerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Body = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAptosIndexerResponse        protoreflect.MessageDescriptor
	fd_QueryAptosIndexerResponse_aptRes protoreflect.FieldDescriptor
)

func init() {
	file_aptcaller_aptcaller_query_proto_init()
	md_QueryAptosIndexerResponse = File_aptcaller_aptcaller_query_proto.Messages().ByName("QueryAptosIndexerResponse")
	fd_QueryAptosIndexerResponse_aptRes = md_QueryAptosIndexerResponse.Fields().ByName("aptRes")
}

var _ protoreflect.Message = (*fastReflection_QueryAptosIndexerResponse)(nil)

type fastReflection_QueryAptosIndexerResponse QueryAptosIndexerResponse

func (x *QueryAptosIndexerResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAptosIndexerResponse)(x)
}

func (x *QueryAptosIndexerResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_aptcaller_aptcaller_query_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAptosIndexerResponse_messageType fastReflection_QueryAptosIndexerResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAptosIndexerResponse_messageType{}

type fastReflection_QueryAptosIndexerResponse_messageType struct{}

func (x fastReflection_QueryAptosIndexerResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAptosIndexerResponse)(nil)
}
func (x fastReflection_QueryAptosIndexerResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAptosIndexerResponse)
}
func (x fastReflection_QueryAptosIndexerResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAptosIndexerResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAptosIndexerResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAptosIndexerResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAptosIndexerResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAptosIndexerResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAptosIndexerResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAptosIndexerResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAptosIndexerResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAptosIndexerResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAptosIndexerResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.AptRes != nil {
		value := protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
		if !f(fd_QueryAptosIndexerResponse_aptRes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAptosIndexerResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		return x.AptRes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		x.AptRes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAptosIndexerResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		value := x.AptRes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		x.AptRes = value.Message().Interface().(*AptRes)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		if x.AptRes == nil {
			x.AptRes = new(AptRes)
		}
		return protoreflect.ValueOfMessage(x.AptRes.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAptosIndexerResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes":
		m := new(AptRes)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: aptcaller.aptcaller.QueryAptosIndexerResponse"))
		}
		panic(fmt.Errorf("message aptcaller.aptcaller.QueryAptosIndexerResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAptosIndexerResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in aptcaller.aptcaller.QueryAptosIndexerResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAptosIndexerResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAptosIndexerResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAptosIndexerResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAptosIndexerResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAptosIndexerResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.AptRes != nil {
			l = options.Size(x.AptRes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAptosIndexerResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AptRes != nil {
			encoded, err := options.Marshal(x.AptRes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAptosIndexerResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAptosIndexerResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAptosIndexerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AptRes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AptRes == nil {
					x.AptRes = &AptRes{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AptRes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: aptcaller/aptcaller/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryParamsRequest) Reset() {
	*x = QueryParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsRequest) ProtoMessage() {}

// Deprecated: Use QueryParamsRequest.ProtoReflect.Descriptor instead.
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{0}
}

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params holds all the parameters of this module.
	Params *Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *QueryParamsResponse) Reset() {
	*x = QueryParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsResponse) ProtoMessage() {}

// Deprecated: Use QueryParamsResponse.ProtoReflect.Descriptor instead.
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryParamsResponse) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type QueryGetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryGetAccountRequest) Reset() {
	*x = QueryGetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryGetAccountRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryGetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountResponse) Reset() {
	*x = QueryGetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryGetAccountResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetAccountResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
	Limit         string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Start         string `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetAccountResourcesRequest) Reset() {
	*x = QueryGetAccountResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResourcesRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountResourcesRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResourcesRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryGetAccountResourcesRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountResourcesRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountResourcesRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

func (x *QueryGetAccountResourcesRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetAccountResourcesRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetAccountResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountResourcesResponse) Reset() {
	*x = QueryGetAccountResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResourcesResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountResourcesResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResourcesResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryGetAccountResourcesResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetAccountModulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
	Limit         string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Start         string `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetAccountModulesRequest) Reset() {
	*x = QueryGetAccountModulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountModulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountModulesRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountModulesRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountModulesRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGetAccountModulesRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountModulesRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountModulesRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

func (x *QueryGetAccountModulesRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetAccountModulesRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetAccountModulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountModulesResponse) Reset() {
	*x = QueryGetAccountModulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountModulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountModulesResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountModulesResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountModulesResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryGetAccountModulesResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetAccountResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ResourceType  string `protobuf:"bytes,3,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	LedgerVersion string `protobuf:"bytes,4,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryGetAccountResourceRequest) Reset() {
	*x = QueryGetAccountResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResourceRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountResourceRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResourceRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryGetAccountResourceRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountResourceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountResourceRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *QueryGetAccountResourceRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryGetAccountResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountResourceResponse) Reset() {
	*x = QueryGetAccountResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResourceResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountResourceResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResourceResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryGetAccountResourceResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetAccountModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ModuleName    string `protobuf:"bytes,3,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	LedgerVersion string `protobuf:"bytes,4,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryGetAccountModuleRequest) Reset() {
	*x = QueryGetAccountModuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountModuleRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountModuleRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountModuleRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryGetAccountModuleRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountModuleRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountModuleRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *QueryGetAccountModuleRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryGetAccountModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountModuleResponse) Reset() {
	*x = QueryGetAccountModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountModuleResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountModuleResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountModuleResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryGetAccountModuleResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetBlockByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	BlockHeight      string `protobuf:"bytes,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	WithTransactions uint64 `protobuf:"varint,3,opt,name=withTransactions,proto3" json:"withTransactions,omitempty"`
}

func (x *QueryGetBlockByHeightRequest) Reset() {
	*x = QueryGetBlockByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetBlockByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetBlockByHeightRequest) ProtoMessage() {}

// Deprecated: Use QueryGetBlockByHeightRequest.ProtoReflect.Descriptor instead.
func (*QueryGetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryGetBlockByHeightRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetBlockByHeightRequest) GetBlockHeight() string {
	if x != nil {
		return x.BlockHeight
	}
	return ""
}

func (x *QueryGetBlockByHeightRequest) GetWithTransactions() uint64 {
	if x != nil {
		return x.WithTransactions
	}
	return 0
}

type QueryGetBlockByHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetBlockByHeightResponse) Reset() {
	*x = QueryGetBlockByHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetBlockByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetBlockByHeightResponse) ProtoMessage() {}

// Deprecated: Use QueryGetBlockByHeightResponse.ProtoReflect.Descriptor instead.
func (*QueryGetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{13}
}

func (x *QueryGetBlockByHeightResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetBlockByVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Version          string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	WithTransactions uint64 `protobuf:"varint,3,opt,name=withTransactions,proto3" json:"withTransactions,omitempty"`
}

func (x *QueryGetBlockByVersionRequest) Reset() {
	*x = QueryGetBlockByVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetBlockByVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetBlockByVersionRequest) ProtoMessage() {}

// Deprecated: Use QueryGetBlockByVersionRequest.ProtoReflect.Descriptor instead.
func (*QueryGetBlockByVersionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{14}
}

func (x *QueryGetBlockByVersionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetBlockByVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *QueryGetBlockByVersionRequest) GetWithTransactions() uint64 {
	if x != nil {
		return x.WithTransactions
	}
	return 0
}

type QueryGetBlockByVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetBlockByVersionResponse) Reset() {
	*x = QueryGetBlockByVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetBlockByVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetBlockByVersionResponse) ProtoMessage() {}

// Deprecated: Use QueryGetBlockByVersionResponse.ProtoReflect.Descriptor instead.
func (*QueryGetBlockByVersionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{15}
}

func (x *QueryGetBlockByVersionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetEventsByCreationNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address        string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CreationNumber string `protobuf:"bytes,3,opt,name=creationNumber,proto3" json:"creationNumber,omitempty"`
	Limit          string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Start          string `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetEventsByCreationNumberRequest) Reset() {
	*x = QueryGetEventsByCreationNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEventsByCreationNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEventsByCreationNumberRequest) ProtoMessage() {}

// Deprecated: Use QueryGetEventsByCreationNumberRequest.ProtoReflect.Descriptor instead.
func (*QueryGetEventsByCreationNumberRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{16}
}

func (x *QueryGetEventsByCreationNumberRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetEventsByCreationNumberRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetEventsByCreationNumberRequest) GetCreationNumber() string {
	if x != nil {
		return x.CreationNumber
	}
	return ""
}

func (x *QueryGetEventsByCreationNumberRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetEventsByCreationNumberRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetEventsByCreationNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetEventsByCreationNumberResponse) Reset() {
	*x = QueryGetEventsByCreationNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEventsByCreationNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEventsByCreationNumberResponse) ProtoMessage() {}

// Deprecated: Use QueryGetEventsByCreationNumberResponse.ProtoReflect.Descriptor instead.
func (*QueryGetEventsByCreationNumberResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{17}
}

func (x *QueryGetEventsByCreationNumberResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetEventsByEventHandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header      string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	EventHandle string `protobuf:"bytes,3,opt,name=eventHandle,proto3" json:"eventHandle,omitempty"`
	FieldName   string `protobuf:"bytes,4,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Limit       string `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Start       string `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetEventsByEventHandleRequest) Reset() {
	*x = QueryGetEventsByEventHandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEventsByEventHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEventsByEventHandleRequest) ProtoMessage() {}

// Deprecated: Use QueryGetEventsByEventHandleRequest.ProtoReflect.Descriptor instead.
func (*QueryGetEventsByEventHandleRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{18}
}

func (x *QueryGetEventsByEventHandleRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetEventsByEventHandleRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetEventsByEventHandleRequest) GetEventHandle() string {
	if x != nil {
		return x.EventHandle
	}
	return ""
}

func (x *QueryGetEventsByEventHandleRequest) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *QueryGetEventsByEventHandleRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetEventsByEventHandleRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetEventsByEventHandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetEventsByEventHandleResponse) Reset() {
	*x = QueryGetEventsByEventHandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEventsByEventHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEventsByEventHandleResponse) ProtoMessage() {}

// Deprecated: Use QueryGetEventsByEventHandleResponse.ProtoReflect.Descriptor instead.
func (*QueryGetEventsByEventHandleResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryGetEventsByEventHandleResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetLedgerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *QueryGetLedgerInfoRequest) Reset() {
	*x = QueryGetLedgerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetLedgerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetLedgerInfoRequest) ProtoMessage() {}

// Deprecated: Use QueryGetLedgerInfoRequest.ProtoReflect.Descriptor instead.
func (*QueryGetLedgerInfoRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{20}
}

func (x *QueryGetLedgerInfoRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

type QueryGetLedgerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetLedgerInfoResponse) Reset() {
	*x = QueryGetLedgerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetLedgerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetLedgerInfoResponse) ProtoMessage() {}

// Deprecated: Use QueryGetLedgerInfoResponse.ProtoReflect.Descriptor instead.
func (*QueryGetLedgerInfoResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{21}
}

func (x *QueryGetLedgerInfoResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Limit  string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Start  string `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetTransactionsRequest) Reset() {
	*x = QueryGetTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionsRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{22}
}

func (x *QueryGetTransactionsRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetTransactionsRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetTransactionsRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetTransactionsResponse) Reset() {
	*x = QueryGetTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionsResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{23}
}

func (x *QueryGetTransactionsResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetTransactionByHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TxnHash string `protobuf:"bytes,2,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
}

func (x *QueryGetTransactionByHashRequest) Reset() {
	*x = QueryGetTransactionByHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByHashRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{24}
}

func (x *QueryGetTransactionByHashRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetTransactionByHashRequest) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

type QueryGetTransactionByHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetTransactionByHashResponse) Reset() {
	*x = QueryGetTransactionByHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByHashResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByHashResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByHashResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{25}
}

func (x *QueryGetTransactionByHashResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetWaitTransactionByHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TxnHash string `protobuf:"bytes,2,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
}

func (x *QueryGetWaitTransactionByHashRequest) Reset() {
	*x = QueryGetWaitTransactionByHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWaitTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWaitTransactionByHashRequest) ProtoMessage() {}

// Deprecated: Use QueryGetWaitTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*QueryGetWaitTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{26}
}

func (x *QueryGetWaitTransactionByHashRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetWaitTransactionByHashRequest) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

type QueryGetWaitTransactionByHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetWaitTransactionByHashResponse) Reset() {
	*x = QueryGetWaitTransactionByHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWaitTransactionByHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWaitTransactionByHashResponse) ProtoMessage() {}

// Deprecated: Use QueryGetWaitTransactionByHashResponse.ProtoReflect.Descriptor instead.
func (*QueryGetWaitTransactionByHashResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{27}
}

func (x *QueryGetWaitTransactionByHashResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetTransactionByVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header     string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TxnVersion string `protobuf:"bytes,2,opt,name=txnVersion,proto3" json:"txnVersion,omitempty"`
}

func (x *QueryGetTransactionByVersionRequest) Reset() {
	*x = QueryGetTransactionByVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByVersionRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByVersionRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByVersionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{28}
}

func (x *QueryGetTransactionByVersionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetTransactionByVersionRequest) GetTxnVersion() string {
	if x != nil {
		return x.TxnVersion
	}
	return ""
}

type QueryGetTransactionByVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetTransactionByVersionResponse) Reset() {
	*x = QueryGetTransactionByVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByVersionResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByVersionResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByVersionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{29}
}

func (x *QueryGetTransactionByVersionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetAccountTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Limit   string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Start   string `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *QueryGetAccountTransactionRequest) Reset() {
	*x = QueryGetAccountTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountTransactionRequest) ProtoMessage() {}

// Deprecated: Use QueryGetAccountTransactionRequest.ProtoReflect.Descriptor instead.
func (*QueryGetAccountTransactionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{30}
}

func (x *QueryGetAccountTransactionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetAccountTransactionRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryGetAccountTransactionRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *QueryGetAccountTransactionRequest) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

type QueryGetAccountTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetAccountTransactionResponse) Reset() {
	*x = QueryGetAccountTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountTransactionResponse) ProtoMessage() {}

// Deprecated: Use QueryGetAccountTransactionResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountTransactionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{31}
}

func (x *QueryGetAccountTransactionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryEstimateGasPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *QueryEstimateGasPriceRequest) Reset() {
	*x = QueryEstimateGasPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEstimateGasPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEstimateGasPriceRequest) ProtoMessage() {}

// Deprecated: Use QueryEstimateGasPriceRequest.ProtoReflect.Descriptor instead.
func (*QueryEstimateGasPriceRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{32}
}

func (x *QueryEstimateGasPriceRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

type QueryEstimateGasPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryEstimateGasPriceResponse) Reset() {
	*x = QueryEstimateGasPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEstimateGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEstimateGasPriceResponse) ProtoMessage() {}

// Deprecated: Use QueryEstimateGasPriceResponse.ProtoReflect.Descriptor instead.
func (*QueryEstimateGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{33}
}

func (x *QueryEstimateGasPriceResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QuerySubmitBatchTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *QuerySubmitBatchTransactionRequest) Reset() {
	*x = QuerySubmitBatchTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubmitBatchTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubmitBatchTransactionRequest) ProtoMessage() {}

// Deprecated: Use QuerySubmitBatchTransactionRequest.ProtoReflect.Descriptor instead.
func (*QuerySubmitBatchTransactionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{34}
}

func (x *QuerySubmitBatchTransactionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QuerySubmitBatchTransactionRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type QuerySubmitBatchTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QuerySubmitBatchTransactionResponse) Reset() {
	*x = QuerySubmitBatchTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubmitBatchTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubmitBatchTransactionResponse) ProtoMessage() {}

// Deprecated: Use QuerySubmitBatchTransactionResponse.ProtoReflect.Descriptor instead.
func (*QuerySubmitBatchTransactionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{35}
}

func (x *QuerySubmitBatchTransactionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QuerySimulateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header                  string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body                    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	GasUnitPrice            uint64 `protobuf:"varint,3,opt,name=gasUnitPrice,proto3" json:"gasUnitPrice,omitempty"`
	MaxGasAmount            uint64 `protobuf:"varint,4,opt,name=maxGasAmount,proto3" json:"maxGasAmount,omitempty"`
	PrioritizedGasUnitPrice uint64 `protobuf:"varint,5,opt,name=prioritizedGasUnitPrice,proto3" json:"prioritizedGasUnitPrice,omitempty"`
}

func (x *QuerySimulateTransactionRequest) Reset() {
	*x = QuerySimulateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySimulateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySimulateTransactionRequest) ProtoMessage() {}

// Deprecated: Use QuerySimulateTransactionRequest.ProtoReflect.Descriptor instead.
func (*QuerySimulateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{36}
}

func (x *QuerySimulateTransactionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QuerySimulateTransactionRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *QuerySimulateTransactionRequest) GetGasUnitPrice() uint64 {
	if x != nil {
		return x.GasUnitPrice
	}
	return 0
}

func (x *QuerySimulateTransactionRequest) GetMaxGasAmount() uint64 {
	if x != nil {
		return x.MaxGasAmount
	}
	return 0
}

func (x *QuerySimulateTransactionRequest) GetPrioritizedGasUnitPrice() uint64 {
	if x != nil {
		return x.PrioritizedGasUnitPrice
	}
	return 0
}

type QuerySimulateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QuerySimulateTransactionResponse) Reset() {
	*x = QuerySimulateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySimulateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySimulateTransactionResponse) ProtoMessage() {}

// Deprecated: Use QuerySimulateTransactionResponse.ProtoReflect.Descriptor instead.
func (*QuerySimulateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{37}
}

func (x *QuerySimulateTransactionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryEncodeSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *QueryEncodeSubmissionRequest) Reset() {
	*x = QueryEncodeSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEncodeSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEncodeSubmissionRequest) ProtoMessage() {}

// Deprecated: Use QueryEncodeSubmissionRequest.ProtoReflect.Descriptor instead.
func (*QueryEncodeSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{38}
}

func (x *QueryEncodeSubmissionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryEncodeSubmissionRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type QueryEncodeSubmissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryEncodeSubmissionResponse) Reset() {
	*x = QueryEncodeSubmissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEncodeSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEncodeSubmissionResponse) ProtoMessage() {}

// Deprecated: Use QueryEncodeSubmissionResponse.ProtoReflect.Descriptor instead.
func (*QueryEncodeSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{39}
}

func (x *QueryEncodeSubmissionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetTransactionByCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *QueryGetTransactionByCountRequest) Reset() {
	*x = QueryGetTransactionByCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByCountRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByCountRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByCountRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{40}
}

func (x *QueryGetTransactionByCountRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type QueryGetTransactionByCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetTransactionByCountResponse) Reset() {
	*x = QueryGetTransactionByCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTransactionByCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTransactionByCountResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTransactionByCountResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTransactionByCountResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{41}
}

func (x *QueryGetTransactionByCountResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryViewFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body          string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	LedgerVersion string `protobuf:"bytes,3,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryViewFunctionRequest) Reset() {
	*x = QueryViewFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryViewFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryViewFunctionRequest) ProtoMessage() {}

// Deprecated: Use QueryViewFunctionRequest.ProtoReflect.Descriptor instead.
func (*QueryViewFunctionRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{42}
}

func (x *QueryViewFunctionRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryViewFunctionRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *QueryViewFunctionRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryViewFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryViewFunctionResponse) Reset() {
	*x = QueryViewFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryViewFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryViewFunctionResponse) ProtoMessage() {}

// Deprecated: Use QueryViewFunctionResponse.ProtoReflect.Descriptor instead.
func (*QueryViewFunctionResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{43}
}

func (x *QueryViewFunctionResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetTableItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TableHandle   string `protobuf:"bytes,2,opt,name=tableHandle,proto3" json:"tableHandle,omitempty"`
	Body          string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	LedgerVersion string `protobuf:"bytes,4,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryGetTableItemRequest) Reset() {
	*x = QueryGetTableItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTableItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTableItemRequest) ProtoMessage() {}

// Deprecated: Use QueryGetTableItemRequest.ProtoReflect.Descriptor instead.
func (*QueryGetTableItemRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{44}
}

func (x *QueryGetTableItemRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetTableItemRequest) GetTableHandle() string {
	if x != nil {
		return x.TableHandle
	}
	return ""
}

func (x *QueryGetTableItemRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *QueryGetTableItemRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryGetTableItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetTableItemResponse) Reset() {
	*x = QueryGetTableItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetTableItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetTableItemResponse) ProtoMessage() {}

// Deprecated: Use QueryGetTableItemResponse.ProtoReflect.Descriptor instead.
func (*QueryGetTableItemResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{45}
}

func (x *QueryGetTableItemResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryGetRawTableItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TableHandle   string `protobuf:"bytes,2,opt,name=tableHandle,proto3" json:"tableHandle,omitempty"`
	Body          string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	LedgerVersion string `protobuf:"bytes,4,opt,name=ledgerVersion,proto3" json:"ledgerVersion,omitempty"`
}

func (x *QueryGetRawTableItemRequest) Reset() {
	*x = QueryGetRawTableItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetRawTableItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetRawTableItemRequest) ProtoMessage() {}

// Deprecated: Use QueryGetRawTableItemRequest.ProtoReflect.Descriptor instead.
func (*QueryGetRawTableItemRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{46}
}

func (x *QueryGetRawTableItemRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *QueryGetRawTableItemRequest) GetTableHandle() string {
	if x != nil {
		return x.TableHandle
	}
	return ""
}

func (x *QueryGetRawTableItemRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *QueryGetRawTableItemRequest) GetLedgerVersion() string {
	if x != nil {
		return x.LedgerVersion
	}
	return ""
}

type QueryGetRawTableItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryGetRawTableItemResponse) Reset() {
	*x = QueryGetRawTableItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetRawTableItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetRawTableItemResponse) ProtoMessage() {}

// Deprecated: Use QueryGetRawTableItemResponse.ProtoReflect.Descriptor instead.
func (*QueryGetRawTableItemResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{47}
}

func (x *QueryGetRawTableItemResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

type QueryAptosIndexerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *QueryAptosIndexerRequest) Reset() {
	*x = QueryAptosIndexerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAptosIndexerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAptosIndexerRequest) ProtoMessage() {}

// Deprecated: Use QueryAptosIndexerRequest.ProtoReflect.Descriptor instead.
func (*QueryAptosIndexerRequest) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{48}
}

func (x *QueryAptosIndexerRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type QueryAptosIndexerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AptRes *AptRes `protobuf:"bytes,1,opt,name=aptRes,proto3" json:"aptRes,omitempty"`
}

func (x *QueryAptosIndexerResponse) Reset() {
	*x = QueryAptosIndexerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aptcaller_aptcaller_query_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAptosIndexerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAptosIndexerResponse) ProtoMessage() {}

// Deprecated: Use QueryAptosIndexerResponse.ProtoReflect.Descriptor instead.
func (*QueryAptosIndexerResponse) Descriptor() ([]byte, []int) {
	return file_aptcaller_aptcaller_query_proto_rawDescGZIP(), []int{49}
}

func (x *QueryAptosIndexerResponse) GetAptRes() *AptRes {
	if x != nil {
		return x.AptRes
	}
	return nil
}

var File_aptcaller_aptcaller_query_proto protoreflect.FileDescriptor

var file_aptcaller_aptcaller_query_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14,
	0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0xa5, 0x01,
	0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x57, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x1f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x1d, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x77, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x7d,
	0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a,
	0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x5d, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x5a, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x1b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22,
	0x53, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x58, 0x0a, 0x21, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x5c,
	0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x23,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x78, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x78, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x24, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x21, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x59, 0x0a, 0x22,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52,
	0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x54, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5a, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x55, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x61,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x47, 0x61, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x64, 0x47, 0x61, 0x73, 0x55, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x64, 0x47, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x4a,
	0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x54, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x22, 0x39, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x22, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06,
	0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56,
	0x69, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06,
	0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x22, 0x2e, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x74, 0x6f, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x22, 0x50, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x74, 0x6f, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x61, 0x70, 0x74, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x52, 0x65, 0x73, 0x52, 0x06, 0x61, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x32, 0x8f, 0x27, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x80,
	0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0xa4, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0xe9, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x34, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x5f, 0x12, 0x5d, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x7d, 0x2f, 0x7b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x7d, 0x12, 0xe1, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5d, 0x12, 0x5b, 0x2f, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x7d,
	0x2f, 0x7b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x4d, 0x12, 0x4b, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x7b, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d,
	0x2f, 0x7b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x12,
	0xda, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x59, 0x12, 0x57, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x7b, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f,
	0x7b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0xd5, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54,
	0x12, 0x52, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x62, 0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x7d, 0x2f, 0x7b, 0x77, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51, 0x12, 0x4f, 0x2f, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x79, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f,
	0x7b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x77, 0x69, 0x74, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x7d, 0x12, 0x84, 0x02, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x68, 0x12, 0x66, 0x2f, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2f,
	0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x7d, 0x2f, 0x7b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x7d, 0x12, 0x81, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x37,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6e, 0x12, 0x6c, 0x2f, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x67, 0x65, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x7d, 0x2f, 0x7b, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x7d, 0x2f,
	0x7b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x7d, 0x12, 0xa7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x7d, 0x12, 0xbe, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x40, 0x12, 0x3e, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x7d, 0x12, 0xce, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x35, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x41, 0x12, 0x3f, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x74, 0x78, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x7d, 0x12, 0xdf, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x39, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x12,
	0x44, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x74, 0x78, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x7d, 0x12, 0xdd, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x47, 0x12, 0x45,
	0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x74, 0x78, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0xe1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x51, 0x12, 0x4f, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x2f,
	0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x10, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x61, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x7d, 0x12,
	0xc5, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb8, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0xac, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x74, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0xc7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x12, 0x9c, 0x01, 0x0a, 0x0c,
	0x56, 0x69, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x69, 0x65, 0x77, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x2e, 0x61, 0x70,
	0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0xaa, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30,
	0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27,
	0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x9c, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x74, 0x6f,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a,
	0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x42, 0xb8, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x24, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x41, 0x41, 0x58, 0xaa, 0x02, 0x13, 0x41,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0xca, 0x02, 0x13, 0x41, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x41,
	0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0xe2, 0x02, 0x1f, 0x41, 0x70, 0x74, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x41, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x41, 0x70, 0x74,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x3a, 0x3a, 0x41, 0x70, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aptcaller_aptcaller_query_proto_rawDescOnce sync.Once
	file_aptcaller_aptcaller_query_proto_rawDescData = file_aptcaller_aptcaller_query_proto_rawDesc
)

func file_aptcaller_aptcaller_query_proto_rawDescGZIP() []byte {
	file_aptcaller_aptcaller_query_proto_rawDescOnce.Do(func() {
		file_aptcaller_aptcaller_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_aptcaller_aptcaller_query_proto_rawDescData)
	})
	return file_aptcaller_aptcaller_query_proto_rawDescData
}

var file_aptcaller_aptcaller_query_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_aptcaller_aptcaller_query_proto_goTypes = []interface{}{
	(*QueryParamsRequest)(nil),                     // 0: aptcaller.aptcaller.QueryParamsRequest
	(*QueryParamsResponse)(nil),                    // 1: aptcaller.aptcaller.QueryParamsResponse
	(*QueryGetAccountRequest)(nil),                 // 2: aptcaller.aptcaller.QueryGetAccountRequest
	(*QueryGetAccountResponse)(nil),                // 3: aptcaller.aptcaller.QueryGetAccountResponse
	(*QueryGetAccountResourcesRequest)(nil),        // 4: aptcaller.aptcaller.QueryGetAccountResourcesRequest
	(*QueryGetAccountResourcesResponse)(nil),       // 5: aptcaller.aptcaller.QueryGetAccountResourcesResponse
	(*QueryGetAccountModulesRequest)(nil),          // 6: aptcaller.aptcaller.QueryGetAccountModulesRequest
	(*QueryGetAccountModulesResponse)(nil),         // 7: aptcaller.aptcaller.QueryGetAccountModulesResponse
	(*QueryGetAccountResourceRequest)(nil),         // 8: aptcaller.aptcaller.QueryGetAccountResourceRequest
	(*QueryGetAccountResourceResponse)(nil),        // 9: aptcaller.aptcaller.QueryGetAccountResourceResponse
	(*QueryGetAccountModuleRequest)(nil),           // 10: aptcaller.aptcaller.QueryGetAccountModuleRequest
	(*QueryGetAccountModuleResponse)(nil),          // 11: aptcaller.aptcaller.QueryGetAccountModuleResponse
	(*QueryGetBlockByHeightRequest)(nil),           // 12: aptcaller.aptcaller.QueryGetBlockByHeightRequest
	(*QueryGetBlockByHeightResponse)(nil),          // 13: aptcaller.aptcaller.QueryGetBlockByHeightResponse
	(*QueryGetBlockByVersionRequest)(nil),          // 14: aptcaller.aptcaller.QueryGetBlockByVersionRequest
	(*QueryGetBlockByVersionResponse)(nil),         // 15: aptcaller.aptcaller.QueryGetBlockByVersionResponse
	(*QueryGetEventsByCreationNumberRequest)(nil),  // 16: aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest
	(*QueryGetEventsByCreationNumberResponse)(nil), // 17: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse
	(*QueryGetEventsByEventHandleRequest)(nil),     // 18: aptcaller.aptcaller.QueryGetEventsByEventHandleRequest
	(*QueryGetEventsByEventHandleResponse)(nil),    // 19: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse
	(*QueryGetLedgerInfoRequest)(nil),              // 20: aptcaller.aptcaller.QueryGetLedgerInfoRequest
	(*QueryGetLedgerInfoResponse)(nil),             // 21: aptcaller.aptcaller.QueryGetLedgerInfoResponse
	(*QueryGetTransactionsRequest)(nil),            // 22: aptcaller.aptcaller.QueryGetTransactionsRequest
	(*QueryGetTransactionsResponse)(nil),           // 23: aptcaller.aptcaller.QueryGetTransactionsResponse
	(*QueryGetTransactionByHashRequest)(nil),       // 24: aptcaller.aptcaller.QueryGetTransactionByHashRequest
	(*QueryGetTransactionByHashResponse)(nil),      // 25: aptcaller.aptcaller.QueryGetTransactionByHashResponse
	(*QueryGetWaitTransactionByHashRequest)(nil),   // 26: aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest
	(*QueryGetWaitTransactionByHashResponse)(nil),  // 27: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse
	(*QueryGetTransactionByVersionRequest)(nil),    // 28: aptcaller.aptcaller.QueryGetTransactionByVersionRequest
	(*QueryGetTransactionByVersionResponse)(nil),   // 29: aptcaller.aptcaller.QueryGetTransactionByVersionResponse
	(*QueryGetAccountTransactionRequest)(nil),      // 30: aptcaller.aptcaller.QueryGetAccountTransactionRequest
	(*QueryGetAccountTransactionResponse)(nil),     // 31: aptcaller.aptcaller.QueryGetAccountTransactionResponse
	(*QueryEstimateGasPriceRequest)(nil),           // 32: aptcaller.aptcaller.QueryEstimateGasPriceRequest
	(*QueryEstimateGasPriceResponse)(nil),          // 33: aptcaller.aptcaller.QueryEstimateGasPriceResponse
	(*QuerySubmitBatchTransactionRequest)(nil),     // 34: aptcaller.aptcaller.QuerySubmitBatchTransactionRequest
	(*QuerySubmitBatchTransactionResponse)(nil),    // 35: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse
	(*QuerySimulateTransactionRequest)(nil),        // 36: aptcaller.aptcaller.QuerySimulateTransactionRequest
	(*QuerySimulateTransactionResponse)(nil),       // 37: aptcaller.aptcaller.QuerySimulateTransactionResponse
	(*QueryEncodeSubmissionRequest)(nil),           // 38: aptcaller.aptcaller.QueryEncodeSubmissionRequest
	(*QueryEncodeSubmissionResponse)(nil),          // 39: aptcaller.aptcaller.QueryEncodeSubmissionResponse
	(*QueryGetTransactionByCountRequest)(nil),      // 40: aptcaller.aptcaller.QueryGetTransactionByCountRequest
	(*QueryGetTransactionByCountResponse)(nil),     // 41: aptcaller.aptcaller.QueryGetTransactionByCountResponse
	(*QueryViewFunctionRequest)(nil),               // 42: aptcaller.aptcaller.QueryViewFunctionRequest
	(*QueryViewFunctionResponse)(nil),              // 43: aptcaller.aptcaller.QueryViewFunctionResponse
	(*QueryGetTableItemRequest)(nil),               // 44: aptcaller.aptcaller.QueryGetTableItemRequest
	(*QueryGetTableItemResponse)(nil),              // 45: aptcaller.aptcaller.QueryGetTableItemResponse
	(*QueryGetRawTableItemRequest)(nil),            // 46: aptcaller.aptcaller.QueryGetRawTableItemRequest
	(*QueryGetRawTableItemResponse)(nil),           // 47: aptcaller.aptcaller.QueryGetRawTableItemResponse
	(*QueryAptosIndexerRequest)(nil),               // 48: aptcaller.aptcaller.QueryAptosIndexerRequest
	(*QueryAptosIndexerResponse)(nil),              // 49: aptcaller.aptcaller.QueryAptosIndexerResponse
	(*Params)(nil),                                 // 50: aptcaller.aptcaller.Params
	(*AptRes)(nil),                                 // 51: aptcaller.aptcaller.AptRes
}
var file_aptcaller_aptcaller_query_proto_depIdxs = []int32{
	50, // 0: aptcaller.aptcaller.QueryParamsResponse.params:type_name -> aptcaller.aptcaller.Params
	51, // 1: aptcaller.aptcaller.QueryGetAccountResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 2: aptcaller.aptcaller.QueryGetAccountResourcesResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 3: aptcaller.aptcaller.QueryGetAccountModulesResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 4: aptcaller.aptcaller.QueryGetAccountResourceResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 5: aptcaller.aptcaller.QueryGetAccountModuleResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 6: aptcaller.aptcaller.QueryGetBlockByHeightResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 7: aptcaller.aptcaller.QueryGetBlockByVersionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 8: aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 9: aptcaller.aptcaller.QueryGetEventsByEventHandleResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 10: aptcaller.aptcaller.QueryGetLedgerInfoResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 11: aptcaller.aptcaller.QueryGetTransactionsResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 12: aptcaller.aptcaller.QueryGetTransactionByHashResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 13: aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 14: aptcaller.aptcaller.QueryGetTransactionByVersionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 15: aptcaller.aptcaller.QueryGetAccountTransactionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 16: aptcaller.aptcaller.QueryEstimateGasPriceResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 17: aptcaller.aptcaller.QuerySubmitBatchTransactionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 18: aptcaller.aptcaller.QuerySimulateTransactionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 19: aptcaller.aptcaller.QueryEncodeSubmissionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 20: aptcaller.aptcaller.QueryGetTransactionByCountResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 21: aptcaller.aptcaller.QueryViewFunctionResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 22: aptcaller.aptcaller.QueryGetTableItemResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 23: aptcaller.aptcaller.QueryGetRawTableItemResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	51, // 24: aptcaller.aptcaller.QueryAptosIndexerResponse.aptRes:type_name -> aptcaller.aptcaller.AptRes
	0,  // 25: aptcaller.aptcaller.Query.Params:input_type -> aptcaller.aptcaller.QueryParamsRequest
	2,  // 26: aptcaller.aptcaller.Query.GetAccount:input_type -> aptcaller.aptcaller.QueryGetAccountRequest
	4,  // 27: aptcaller.aptcaller.Query.GetAccountResources:input_type -> aptcaller.aptcaller.QueryGetAccountResourcesRequest
	6,  // 28: aptcaller.aptcaller.Query.GetAccountModules:input_type -> aptcaller.aptcaller.QueryGetAccountModulesRequest
	8,  // 29: aptcaller.aptcaller.Query.GetAccountResource:input_type -> aptcaller.aptcaller.QueryGetAccountResourceRequest
	10, // 30: aptcaller.aptcaller.Query.GetAccountModule:input_type -> aptcaller.aptcaller.QueryGetAccountModuleRequest
	12, // 31: aptcaller.aptcaller.Query.GetBlockByHeight:input_type -> aptcaller.aptcaller.QueryGetBlockByHeightRequest
	14, // 32: aptcaller.aptcaller.Query.GetBlockByVersion:input_type -> aptcaller.aptcaller.QueryGetBlockByVersionRequest
	16, // 33: aptcaller.aptcaller.Query.GetEventsByCreationNumber:input_type -> aptcaller.aptcaller.QueryGetEventsByCreationNumberRequest
	18, // 34: aptcaller.aptcaller.Query.GetEventsByEventHandle:input_type -> aptcaller.aptcaller.QueryGetEventsByEventHandleRequest
	20, // 35: aptcaller.aptcaller.Query.GetLedgerInfo:input_type -> aptcaller.aptcaller.QueryGetLedgerInfoRequest
	22, // 36: aptcaller.aptcaller.Query.GetTransactions:input_type -> aptcaller.aptcaller.QueryGetTransactionsRequest
	24, // 37: aptcaller.aptcaller.Query.GetTransactionByHash:input_type -> aptcaller.aptcaller.QueryGetTransactionByHashRequest
	26, // 38: aptcaller.aptcaller.Query.GetWaitTransactionByHash:input_type -> aptcaller.aptcaller.QueryGetWaitTransactionByHashRequest
	28, // 39: aptcaller.aptcaller.Query.GetTransactionByVersion:input_type -> aptcaller.aptcaller.QueryGetTransactionByVersionRequest
	30, // 40: aptcaller.aptcaller.Query.GetAccountTransaction:input_type -> aptcaller.aptcaller.QueryGetAccountTransactionRequest
	32, // 41: aptcaller.aptcaller.Query.EstimateGasPrice:input_type -> aptcaller.aptcaller.QueryEstimateGasPriceRequest
	34, // 42: aptcaller.aptcaller.Query.SubmitBatchTransaction:input_type -> aptcaller.aptcaller.QuerySubmitBatchTransactionRequest
	36, // 43: aptcaller.aptcaller.Query.SimulateTransaction:input_type -> aptcaller.aptcaller.QuerySimulateTransactionRequest
	38, // 44: aptcaller.aptcaller.Query.EncodeSubmission:input_type -> aptcaller.aptcaller.QueryEncodeSubmissionRequest
	40, // 45: aptcaller.aptcaller.Query.GetTransactionByCount:input_type -> aptcaller.aptcaller.QueryGetTransactionByCountRequest
	42, // 46: aptcaller.aptcaller.Query.ViewFunction:input_type -> aptcaller.aptcaller.QueryViewFunctionRequest
	44, // 47: aptcaller.aptcaller.Query.GetTableItem:input_type -> aptcaller.aptcaller.QueryGetTableItemRequest
	46, // 48: aptcaller.aptcaller.Query.GetRawTableItem:input_type -> aptcaller.aptcaller.QueryGetRawTableItemRequest
	48, // 49: aptcaller.aptcaller.Query.AptosIndexer:input_type -> aptcaller.aptcaller.QueryAptosIndexerRequest
	1,  // 50: aptcaller.aptcaller.Query.Params:output_type -> aptcaller.aptcaller.QueryParamsResponse
	3,  // 51: aptcaller.aptcaller.Query.GetAccount:output_type -> aptcaller.aptcaller.QueryGetAccountResponse
	5,  // 52: aptcaller.aptcaller.Query.GetAccountResources:output_type -> aptcaller.aptcaller.QueryGetAccountResourcesResponse
	7,  // 53: aptcaller.aptcaller.Query.GetAccountModules:output_type -> aptcaller.aptcaller.QueryGetAccountModulesResponse
	9,  // 54: aptcaller.aptcaller.Query.GetAccountResource:output_type -> aptcaller.aptcaller.QueryGetAccountResourceResponse
	11, // 55: aptcaller.aptcaller.Query.GetAccountModule:output_type -> aptcaller.aptcaller.QueryGetAccountModuleResponse
	13, // 56: aptcaller.aptcaller.Query.GetBlockByHeight:output_type -> aptcaller.aptcaller.QueryGetBlockByHeightResponse
	15, // 57: aptcaller.aptcaller.Query.GetBlockByVersion:output_type -> aptcaller.aptcaller.QueryGetBlockByVersionResponse
	17, // 58: aptcaller.aptcaller.Query.GetEventsByCreationNumber:output_type -> aptcaller.aptcaller.QueryGetEventsByCreationNumberResponse
	19, // 59: aptcaller.aptcaller.Query.GetEventsByEventHandle:output_type -> aptcaller.aptcaller.QueryGetEventsByEventHandleResponse
	21, // 60: aptcaller.aptcaller.Query.GetLedgerInfo:output_type -> aptcaller.aptcaller.QueryGetLedgerInfoResponse
	23, // 61: aptcaller.aptcaller.Query.GetTransactions:output_type -> aptcaller.aptcaller.QueryGetTransactionsResponse
	25, // 62: aptcaller.aptcaller.Query.GetTransactionByHash:output_type -> aptcaller.aptcaller.QueryGetTransactionByHashResponse
	27, // 63: aptcaller.aptcaller.Query.GetWaitTransactionByHash:output_type -> aptcaller.aptcaller.QueryGetWaitTransactionByHashResponse
	29, // 64: aptcaller.aptcaller.Query.GetTransactionByVersion:output_type -> aptcaller.aptcaller.QueryGetTransactionByVersionResponse
	31, // 65: aptcaller.aptcaller.Query.GetAccountTransaction:output_type -> aptcaller.aptcaller.QueryGetAccountTransactionResponse
	33, // 66: aptcaller.aptcaller.Query.EstimateGasPrice:output_type -> aptcaller.aptcaller.QueryEstimateGasPriceResponse
	35, // 67: aptcaller.aptcaller.Query.SubmitBatchTransaction:output_type -> aptcaller.aptcaller.QuerySubmitBatchTransactionResponse
	37, // 68: aptcaller.aptcaller.Query.SimulateTransaction:output_type -> aptcaller.aptcaller.QuerySimulateTransactionResponse
	39, // 69: aptcaller.aptcaller.Query.EncodeSubmission:output_type -> aptcaller.aptcaller.QueryEncodeSubmissionResponse
	41, // 70: aptcaller.aptcaller.Query.GetTransactionByCount:output_type -> aptcaller.aptcaller.QueryGetTransactionByCountResponse
	43, // 71: aptcaller.aptcaller.Query.ViewFunction:output_type -> aptcaller.aptcaller.QueryViewFunctionResponse
	45, // 72: aptcaller.aptcaller.Query.GetTableItem:output_type -> aptcaller.aptcaller.QueryGetTableItemResponse
	47, // 73: aptcaller.aptcaller.Query.GetRawTableItem:output_type -> aptcaller.aptcaller.QueryGetRawTableItemResponse
	49, // 74: aptcaller.aptcaller.Query.AptosIndexer:output_type -> aptcaller.aptcaller.QueryAptosIndexerResponse
	50, // [50:75] is the sub-list for method output_type
	25, // [25:50] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_aptcaller_aptcaller_query_proto_init() }
func file_aptcaller_aptcaller_query_proto_init() {
	if File_aptcaller_aptcaller_query_proto != nil {
		return
	}
	file_aptcaller_aptcaller_params_proto_init()
	file_aptcaller_aptcaller_apt_res_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aptcaller_aptcaller_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountModulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountModulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountModuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetBlockByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetBlockByHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetBlockByVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetBlockByVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEventsByCreationNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEventsByCreationNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEventsByEventHandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEventsByEventHandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetLedgerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetLedgerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWaitTransactionByHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWaitTransactionByHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetAccountTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEstimateGasPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEstimateGasPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubmitBatchTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubmitBatchTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySimulateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySimulateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEncodeSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEncodeSubmissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTransactionByCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryViewFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryViewFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTableItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetTableItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetRawTableItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetRawTableItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAptosIndexerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aptcaller_aptcaller_query_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAptosIndexerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aptcaller_aptcaller_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aptcaller_aptcaller_query_proto_goTypes,
		DependencyIndexes: file_aptcaller_aptcaller_query_proto_depIdxs,
		MessageInfos:      file_aptcaller_aptcaller_query_proto_msgTypes,
	}.Build()
	File_aptcaller_aptcaller_query_proto = out.File
	file_aptcaller_aptcaller_query_proto_rawDesc = nil
	file_aptcaller_aptcaller_query_proto_goTypes = nil
	file_aptcaller_aptcaller_query_proto_depIdxs = nil
}
